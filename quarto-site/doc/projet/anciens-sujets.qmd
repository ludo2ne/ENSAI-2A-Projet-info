---
title: "Anciens sujets"
description: "Sujets des ann√©es pr√©c√©dentes"
author: "Ludovic Deneuville"
format:
  html:
    toc: true
    toc-location: left
    toc-expand: 3
from: markdown+emoji
number-sections: false
lightbox: true
---


# 2024-2025

## Fennec on the road :rocket: 

Tuteur : Adrien Lacaille

### Pr√©sentation

Dans ce projet, vous aurez l'opportunit√© de plonger dans le monde fascinant des statistiques et des comp√©titions sur le jeu vid√©o Rocket League. En utilisant l'API <https://zsr.octane.gg/>{target="_blank"}, vous allez d√©velopper une application d√©di√©e aux amateurs d'e-sport et aux fans de ce jeu vid√©o comp√©titif. Le but de cette application est de fournir une plateforme compl√®te et interactive permettant aux utilisateurs de consulter des statistiques d√©taill√©es des matchs, de suivre les prochains √©v√©nements, de g√©rer des tournois personnalis√©s et d'enrichir l'exp√©rience utilisateur par des fonctionnalit√©s avanc√©es comme l'agr√©gation de donn√©es et les syst√®mes de paris.

### Fonctionnalit√©s de base

Votre application devra int√©grer les fonctionnalit√©s essentielles suivantes :

- **F1 :** Permettre aux utilisateurs de consulter des statistiques d√©taill√©es sur les matchs d√©j√† disput√©s, incluant les scores, les performances des √©quipes et des joueurs
- **F2 :** Proposer un calendrier des futurs matchs avec des informations telles que les √©quipes en comp√©tition, les dates et heures des rencontres, et les lieux √©ventuels.
- **F3 :** Mettre en place un syst√®me s√©curis√© d‚Äôauthentification permettant aux utilisateurs autoris√©s d'ajouter ou de modifier des informations relatives aux matchs.
- **F4 :** Offrir la possibilit√© de cr√©er et de g√©rer des tournois personnalis√©s, avec des fonctionnalit√©s pour inscrire des √©quipes, d√©finir des calendriers de match, et suivre les r√©sultats en temps r√©el.



### Fonctionnalit√©s optionnelles

Pour aller au-del√† des exigences de base et rendre votre application encore plus attractive, vous pouvez int√©grer les fonctionnalit√©s optionnelles suivantes :

- **FO1 :** Permettre aux utilisateurs d‚Äôobtenir des analyses consolid√©es par √©quipe et par joueur, en agr√©geant les donn√©es sur les performances individuelles et collectives afin de fournir des indices de performances.
- **FO2 :** D√©velopper un syst√®me de paris interactif o√π les utilisateurs peuvent parier sur les r√©sultats des matchs et des tournois, ajoutant ainsi une dimension ludique et comp√©titive √† l'application.

### Conseils / Outils ...

Pour maximiser votre exp√©rience et la r√©ussite de ce projet, voici quelques conseils et outils essentiels :

#### Technologies √† utiliser :

- Utilisez une base de donn√©es PostgreSQL pour stocker et g√©rer vos donn√©es.
- D√©veloppez votre application en Python.
- Concentrez-vous uniquement sur une application en ligne de commande (CLI) sans interface web.

#### Qualit√© du code :

- R√©alisez des tests unitaires pour garantir la fiabilit√© de votre code.
- Mesurez la couverture de code (coverage) pour vous assurer que tous les aspects de votre application sont test√©s.
- Utilisez des outils de linting pour maintenir un code propre et conforme aux standards.

#### Versionnement et int√©gration continue :

- Versionnez votre projet sur Git pour suivre les modifications et collaborer efficacement.
- Mettez en place une int√©gration continue (CI) pour automatiser vos tests.

#### Organisation et suivi :

- Organisez un point hebdomadaire pour suivre vos progr√®s, discuter des obstacles rencontr√©s et ajuster votre plan de travail en cons√©quence. Cela vous permettra de progresser r√©guli√®rement et de mener √† bien ce projet.

#### Initiatives et cr√©ativit√© :

- Prenez des initiatives pour r√©aliser d'autres fonctionnalit√©s optionnelles et apporter votre touche personnelle au projet. Votre cr√©ativit√© et votre capacit√© √† aller au-del√† des attentes de base seront valoris√©es.


---

## The DM's Sound Buddy :musical_note: 

Tuteur : Cyriel Mallart

### Pr√©sentation

Lors de ce projet, vous allez cr√©er une application de gestion de banque de sons. Le but final est de pouvoir g√©rer des effets sonores pour cr√©er une ambiance lors de parties de jeu de r√¥le ou autre storytelling. 
Le but est donc de pouvoir rechercher des effets sonores, et en cr√©er des playlists pour les jouer de fa√ßon simple lors d'une partie de jeu de r√¥le. Les sons seront issus de Freesound, qui propose une API de recherche de sons bas√©e sur des mots-cl√©s. Votre r√¥le sera d'identifier les besoins des utilisateur-ice-s, de modeliser l'application en cons√©quence et de d√©cider comment g√©rer le stockage des sons et des informations sur les sons. Les fonctionnalit√©s de bases ci-dessus, et au moins une fonctionnalit√© optionelle au choix sont attendues. 

API : <https://freesound.org/apiv2/>{target="_blank"}

Site web Freesound (pour vous faire une id√©e des possibilit√©s): <https://freesound.org/>{target="_blank"}

### Fonctionnalit√©s de base

- F1 : Cr√©ation d'utilisateurs, de playlists
- F2 : Recherche de sons et t√©l√©chargement (sans redondances !)
- F3 : Lecture des sons lors d'une partie
- F4 : Consultation et copie des playlists d'autres utilisateur.ice.s

### Fonctionnalit√©s optionnelles

- FO1 : Recherche avanc√©e de sons par similarit√© avec le reste de la playlist, termes connexes, commentaires des utilisateur.ice.s Freesound ou information de popularit√©
- F02 : Choix de lecture r√©p√©t√©e √† des temps al√©atoires (bruits de nature, de grincement de porte, etc.)
- F03 : Jeu d'un son en boucle
- F04 : Jeu de plusieurs sons en simultan√©

### Conseils / Outils ...

- La librairie Nava est conseill√©e pour jouer les sons, mais tout autre librairie est autoris√©e si vous avez une autre pr√©f√©rence.
- Au vu des t√©l√©chargements n√©cessaires  (t√©l√©chargement de certains sons de base notamment), un script d'initialisation sera attendu dans le code.
- Une suite de tests est aussi attendue, mais les tests feront partie int√©grante des techniques que nous apprendons ensemble et cela fera moins mal que vous ne le pensez ;)
- Le produit final sera un menu interactif en console.  Aucune interface graphique n'est attendue, et une interface autre que console ne sera donc pas prise en compte pour l'√©valuation du projet. 
- Pour les fonctionnalit√©s optionnelles, toute initiative ou proposition originale sera valoris√©e, si valid√©e avec votre tuteur.

## My Kitchen üë®‚Äçüç≥

Tuteur : Bryan Truwant

### Pr√©sentation

Ce projet consiste en le d√©veloppement d'une application de recettes de cuisines. Pour cela vous devrez utiliser les donn√©es des recettes via l'API [TheMealDB](https://www.themealdb.com/){target="_blank"}. Vous devrez d√©cider quelles donn√©es conserver ou non dans votre base de donn√©es PostgreSQL pour les besoins de votre application. Vous cr√©erez aussi un mod√®le de donn√©es adapt√© aux fonctionnalit√©s que vous allez d√©velopper allant de l'affichage d'une recette √† la suggestion de recettes en fonction des go√ªts de l'utilisateur en passant par la gestion d'une liste de courses.

### Fonctionnalit√©s de base

- F1 : Afficher la liste des recettes
- F2 : Afficher une recette (Au minimum : Titre, ingr√©dients, consignes, note, commentaires)
- F3 : Recettes favorites : Ajout, visualisation, suppression
- F4 : Avis sur les recettes : Notes et commentaires

### Fonctionnalit√©s optionnelles

- FO1 : Recherche des recettes par ingr√©dients
- FO2 : Liste de courses : Ajout des ingr√©dients d'une recette √† la liste de courses, visualisation de la liste et suppression des √©l√©ments achet√©s
- FO3 : Ingr√©dients favoris et Ingr√©dients non d√©sir√©s (Ajout, visualisation, suppression)
- FO4 : Proposer des recettes qui ne sont pas dans les recettes favorites contenant au moins un ingr√©dient favori et aucun ingr√©dient non d√©sir√©

---

## StreamSmart :movie_camera:

Tuteur : Alexandre Bidon

### Pr√©sentation

**Quel abonnement streaming choisir pour ne rater aucun de mes films pr√©f√©r√©s ?**
Ce projet vise √† d√©velopper un outil comparatif qui analyse les catalogues de diff√©rentes plateformes et recommande l'abonnement le plus adapt√© √† vos go√ªts cin√©matographiques. L'utilisateur cr√©e sa watchlist et l'application lui retourne l'abonnement qui correspond le mieux √† votre besoin (abonnement le plus rentable, abonnement qui propose le plus de films dans la watchlist, etc).

### Fonctionnalit√©s de base

- F1 : Gestion des utilisateurs (Cr√©er un utilisateur, Se connecter, Supprimer un utilisateur)
- F2 : Rechercher un film ou une s√©rie par son nom
- F3 : Pour un film ou une s√©rie, voir la liste des plateformes sur lequel il/elle est disponible
- F4 : Gestion de watchlist (Cr√©er une watchlist, Ajouter un film √† une watchlist, Supprimer une watchlist)
- F5 : Pour une watchlist, proposer l'abonnement de streaming le plus rentable (crit√®re libre, par exemple l'abonnement avec le meilleur ratio prix/nombre de films propos√©s ou l'abonnement qui propose le + de films)

### Fonctionnalit√©s optionnelles

- FO1 : Gestion des diff√©rents tier d'abonnements (par exemple rajouter un crit√®re avec ou sans pub, choisir sa r√©solution d'√©cran)
- FO2 : Gestion de la localisation de l'utilisateur (Les plateformes ne proposent pas les m√™mes films selon les pays)
- FO3 : Gestion des abonnements plus complexes (par exemple l'offre rat+ de Canal qui propose plusieurs services de streaming en un)

### Conseils / Outils ...

Pour r√©aliser ce projet, vous utiliserez l'API de **The Movie Database** :

- API : <https://www.themoviedb.org/>{target="_blank"}
- Documentation de l'API: <https://developer.themoviedb.org/reference/intro/getting-started>{target="_blank"}

Cette API propose d√©j√† un outil pour cr√©er des watchlists, vous devrez cependant fournir votre propre impl√©mentation.


---

## Collection de mangas :books:

Tutrice : Lissa Chen

### Pr√©sentation

Ce projet vous demandera de cr√©er une application qui permettra aux utilisateurs de stocker et de partager des collections de mangas. Les utilisateurs pourront aussi donner leurs avis sur les mangas de leur choix.

Il faudra tenir des contraintes de requ√™tes par secondes √† l'API.

API √† utiliser : [Jikan API](https://docs.api.jikan.moe/){target="_blank"}


### Fonctionnalit√©s de base

En tant qu'utilisateur, je veux pouvoir :

1. M'inscrire/connecter/d√©connecter/d√©sinscrire √† l'application (gestion des utilisateurs et des informations qui leur sont propres).
2. Afficher les informations d'un manga en l'ayant recherch√© par son titre.
4. R√©diger/Mettre √† jour/Supprimer mes avis sur un manga et consulter ceux des autres utilisateurs.
3. Cr√©er/Mettre √† jour/Supprimer des collections "coh√©rentes" de mangas, et consulter celles des autres utilisateurs.
La collection devra contenir : 
    - le titre de ma collection
    - la description de ma collection
    - les titres des mangas de ma collection
3. Cr√©er/Mettre √† jour/Supprimer une collection des mangas que je poss√®de "physiquement", et consulter celle des autres utilisateurs.
La collection devra contenir pour chaque manga : 
    - le titre du manga
    - le num√©ro du dernier tome acquis
    - le(s) num√©ro(s) des tomes manquants par rapport au dernier tome acquis de la s√©rie (ensemble des tomes d'un m√™me titre)
    - le status de la s√©rie, c'est-√†-dire si je continue d'acheter les tomes ou non (reading/dropped) 


Exemple de collection des mangas que je poss√®de "physiquement" : 


| Titre | N¬∞ du dernier tome acquis | N¬∞ des tomes manquants | Status |
| -------- | -------- | -------- | ------ |
| One Piece     | 107     | 106 | En cours |
| One Punch Man | 18 | 16, 17 | En cours |
| Spy x Family | 3 | 0 | Dropped | 

Exemple de collection "coh√©rente" : 

Titre de ma collection : Mangas pr√©f√©r√©s
Description de ma collection : Liste de mes mangas pr√©f√©r√©s
Mangas de ma collection : Oshi no ko, Les Carnets de l'Apothicaire, March comes in like a lion

### Fonctionnalit√©s optionnelles
- Cr√©er/Modifier/Supprimer des tier list de mangas
- Acc√©der aux informations d'un manga depuis une collection
- Toute autre fonctionnalit√© que vous trouvez sympa

### Conseils / Outils ...
Une application avec les fonctionnalit√©s de base, sans bug et avec un code clair sera plus valoris√©e qu'une application avec des fonctionnalit√©s optionnelles mais un code "brouillon" et des bugs.
Favorisez un code maintenable. 

---

## Vous √™tes ici :dart: 

> l'API qui vous dit o√π vous √™tes... enfin si c'est en France

Tuteur : Thierry Math√© 

### Pr√©sentation

Comme vous le savez la France est divis√©e en plusieurs zonages : zonages administratifs, zonages d'√©tudes, ...
Le but du projet est de cr√©er une API qui permettra de :

1. Donner des informations pour une de ces subdivisions, par exemple quel est le d√©partement 27, ou quelle est la commune 13055 ?
2. Dire dans quelle zone se trouve un point rep√©r√© par ses coordonn√©es g√©ographiques. Par exemple: mais dans quel Iris se trouve les coordonn√©es GPS 48.114503, -1.681217 (et d'ailleurs qu'est que c'est qu'un Iris ???...) ?
3. Comme le 2. mais pour une liste de points. Le r√©sultat sera alors un fichier (csv, xlsx, json, ... c'est vous qui voyez) qui sera transmis dans la r√©ponse de la requ√™te. 


### Fonctionnalit√©s de base

- F1 : API-Rest de consultation donnant une URI pour chaque zone d'un zonage. Par exemple l'URI `monAPI/zonage/departement/2023/35` permettra d'avoir les informations pour le d√©partement de l'Ille et Vilaine en 2023 et l'URI `monAPI/zonage/commune/2023/69123` les informations sur la commune de Lyon en 2023,
- F2 : Endpoint permettant la localisation d'un point par exemple `monAPI/ousuisje/departement?lat=48.114503&long=-1.681217&annee=2023` renvoie le d√©partement o√π se trouve le point dont les coordonn√©es sont indiqu√©es (latitude et longitude),
- F3 : Endpoint permettant de transmettre une liste de points dans une requete `POST` qui renvoie les m√™mes informations pour chacun des points sous la forme d'un fichier.


### Fonctionnalit√©s optionnelles

- FO1 : Ajouter des zonages
- FO2 : Ajouter des ann√©es de g√©ographies (et oui la g√©ographie change tous les ans !)
- FO2 : Ajouter d'autres formats de retour pour la F3, voire m√™me retourner une carte au format jpeg ou SVC!...

**Remarques**: M√™me si ces fonctionnalit√©s ne sont pas r√©alis√©es, il faudra construire l'application de telle sorte qu'elle puisse les accueillir facilement.

### Conseils / Outils ...

Pour r√©aliser ce projet vous vous appuierez sur le [code officiel g√©ographique](https://www.insee.fr/fr/information/2560452){target="_blank"} de l'Insee et sur les [contours de ces diff√©rents zonages](https://geoservices.ign.fr/adminexpress){target="_blank"} donn√©s par l'IGN au format shape.

Enfin pour ceux qui se demanderaient ce que c'est qu'un [Iris](https://www.insee.fr/fr/information/7708995){target="_blank"} et √† quoi ils [ressemblent](https://geoservices.ign.fr/contoursiris){target="_blank"}...

---


## R√©seau social cin√© üçø

Tuteur : Cl√©ment Valot

### Pr√©sentation

L'inspiration de ce sujet est [SensCritique](https://www.senscritique.com/){target="_blank"}, un site communautaire o√π les utilisateurs notent et critiquent des films (et s√©ries, livres... Mais on va centrer le sujet sur les films üé•)

Le projet va √™tre pens√© comme une application web, qui va exposer une API REST, qu'on pourra tester avec un client API (e.g. Postman ou Bruno).

La base de donn√©es de films sera construite en s'interfa√ßant avec l'API [TheMovieDB](https://www.themoviedb.org/){target="_blank"}. Le reste de la base de donn√©es devra √™tre aliment√© par vos soins. 

### Fonctionnalit√©s de base

- F1 : Inscription et authentification s√©curis√©e
- F2 : Rechercher un film et lui attribuer une note sur 10 (modifiable et effa√ßable)
- F3 : Obtenir des informations sur un film (Informations techniques, note moyenne des utilisateurs du site, note moyenne de mes √©claireurs...)
- F4 : Ajouter un autre utilisateur √† ma liste d'"√©claireurs" et obtenir des informations sur sa collection de films (Nombre de films vus, notes sur chacun des films, films vus en commun...)

### Fonctionnalit√©s optionnelles

- FO1 : Ajout de commentaires ou critiques sur les films
- FO2 : Algorithme de recommandation bas√© sur les films d√©j√† vus et not√©s
- FO3 : Les axes d'extension de l'application sont nombreux, vous avez un site entier existant pour puiser l'inspiration, toute fonctionnalit√© int√©ressante peut √™tre sugg√©r√©e √† votre tuteur üòä
- FO4 : Trouver un nom qui claque pour l'application, votre tuteur ne brille pas par sa cr√©ativit√© 

### Conseils / Outils...

Un template de projet sera fourni, avec une configuration d'environnement de d√©veloppement √† respecter imp√©rativement, ainsi que des suggestions de librairies √† utiliser pour la DB/API. 

---

## Spotify Analytics üì∂

Tuteur : Samuel Goutin

### Pr√©sentation

Ce projet vise √† cr√©er un outil permettant l'analyse de la fr√©quentation d'un site de musique (de type Spotify). Pour cela, nous avons √† notre disposition le flux d'√©v√©nements de navigation du site. Il nous informe en temps r√©el de chaque action r√©alis√©e sur le site.
L'outil devra permettre de mieux comprendre *par qui*, *quand* et *comment* le site est consult√© en r√©pondant √† des questions strat√©giques.

### Fonctionnalit√©s de base

L'outil devra proposer un webservice permettant de r√©pondre aux questions suivantes :

- F1 : Quelle est la dur√©e moyenne d'une session sur le site ?
- F2 : Quelle est la localisation g√©ographique des utilisateurs du site ?
- F3 : Quels sont les artistes les plus √©cout√©s ?

La granularit√© temporelle devra √™tre un param√®tre ajustable pour chaque question. Par exemple, il devra √™tre possible d'obtenir la liste des artistes les plus √©cout√©s pour chaque *minute*, *heure*, *jour* ou *mois*.

### Fonctionnalit√©s optionnelles

- FO1 : Proposez une visualisation graphique dynamique pour les questions F1, F2 et F3. Pour cela, vous pouvez utiliser les biblioth√®ques [streamlit](https://docs.streamlit.io/){target="_blank"} ou [dash](https://dash.plotly.com/){target="_blank"}.
- FO2 : Mettez en place une cha√Æne d'int√©gration continue (CI) pour automatiser vos tests et le packaging de votre projet avec Docker.



# 2023-2024

## R√©seau bas√© sur les go√ªts musicaux :musical_note: 

Tuteur : Cyriel Mallart

### Pr√©sentation

Tu veux parler musique avec des gens qui comprennent tes go√ªts ? Avec (NomDeVotreWebService), c'est facile ! Enregistre-toi, dis-nous ce que tu √©coutes, et on t'envoie des gens qui vibrent au m√™me rythme que toi !

Vous allez cr√©er dans ce projet une API qui met en relation des gens, bas√©e sur leurs go√ªts musicaux. Un.e utilisateur.ice s'inscrira, s√©lectionnera et enregistrera ses morceaux, artistes et genres pr√©f√©r√©s. L'API Deezer vous donnera acc√®s √† toutes les caract√©ristiques de ces morceaux. A partir de cela, vous utiliserez une touche d'IA pour trouver celui ou celle qui a le profil le plus similaire, et lui enverrez une petite notification pour mettre tout le monde en contact. Si √ßa ne matche pas, ou si l'utilisateur.ice veut d√©couvrir de nouvelles personnes, on trouve le profil similaire le plus proche en excluant les gens d√©j√† en contact ou refus√©s. 

### Fonctionnalit√©s de base (attendues) :

- gestion de plusieurs utilisateurs
- enregistrement des morceaux, artistes, genres, etc. utiles en base de donn√©es
- appels √† l'API Deezer pour obtenir les informations sur les morceaux
- obtention, stockage et mise √† jour des profils similaires
- gestion des notifications de mise en contact : accept√©, refus√©, notification √† tous les utilisateur.ices impliqu√©e.e.s

### Fonctionnalit√©s avanc√©es (une au choix si les fonctionalit√©s de base sont finies):

- authentification par mot de passe
- gestion des "contacts" d'un utilisateur : d√©letion, signalement, cr√©ation de groupes
- recommendation de nouveaux morceaux bas√©s sur ceux des contacts
- playlists cr√©es par fusion des morceaux des utilisateurs, export
- s√©lection ergonomique des morceaux (suggestions, autocompl√©tion, ...)
- algorithme de recommendation plus √©labor√©
- ...
- tout autre id√©e qui vous semble logique, int√©ressante, sous r√©serve qu'elle soit faisable techniquement dans les temps impartis

### Stack technique :

- Backend : FastAPI
- Front end : Jinja2 (templates HTML dans FastAPI). D'autres choix sont possibles (React.js, Vue.js, ...) si vous les ma√Ætrisez, mais attention, votre tuteur ne pourra vous suivre que sur React.js, et la courbe d'apprentissage est raide.
- BDD : MongoDB (NoSQL) , Neo4j (NoSQL, graphe) ou Postgres (SQL, disponible √† l'ENSAI)
- API Deezer : <https://developers.deezer.com/api>

### Fausses bonnes id√©es

- Cr√©er une appli de messagerie : le but de ce projet est uniquement une mise en contact o√π l'on partagera une adresse mail par exemple 
- Se casser la t√™te sur un algorithme super-classe : les performances de l'algorithme de recommendation ne sont pas le point important ici, ne passez pas tout votre projet dessus. Si vous avez envie d'essayer une id√©e d'algorithme, allez-y, m√™me si elle ne fonctionne pas bien au final. Sinon, votre tuteur pourra vous aider sur un algorithme de base 
- Une interface r√©ctive super-√©volu√©e avec des graphiques et des previews de morceaux : on attend une interface basique et simple, c'est-√†-dire, des pages HTML statique √©crit en noir sur fond blanc avec un ou deux boutons. 



## Aide √† la recherche de stage üì∞üí∞üè∑ 

Tuteur : Colin Leverger
Objectif

Vous √™tes un groupe d‚Äô√©tudiants de l'ENSAI en deuxi√®me ann√©e, et souhaitez d√©velopper une application en ligne de commande pour faciliter vos futures recherches de stage. Votre startup s‚Äôappelle ......... et votre application .......... .

Votre application permettra √† un utilisateur de rechercher des stages de son choix sur un ou plusieurs sites de recherche de stage (Hellowork, welcometothejungle, ‚Ä¶). Les stages peuvent √™tre publi√©s dans diff√©rentes sp√©cialit√©s (informatique, data analyse, machine learning, ‚Ä¶). S‚Äôil est authentifi√©, l‚Äôutilisateur pourra sauvegarder dans l‚Äôapplication les stages qui l‚Äôint√©ressent dans sa ¬´‚Äâliste d‚Äôenvies‚Äâ¬ª, et pourquoi pas r√©pondre aux offres plus facilement (automatiquement, ou au minimum r√©cup√©rer les contacts vers les employeurs). La navigation et les recherches de tout utilisateur seront historis√©es.

Deux types d‚Äôutilisateurs authentifi√©s pourront cohabiter : utilisateur ¬´‚Äâ√©l√®ve‚Äâ¬ª et utilisateur ¬´‚Äâprofesseur‚Äâ¬ª. Un ¬´‚Äâadministrateur‚Äâ¬ª de l‚Äôapp pourra √©galement g√©rer l‚Äôapplication et les utilisateurs. Un utilisateur non authentifi√© sera par d√©faut dans la cat√©gorie ¬´‚Äâ√©l√®ve‚Äâ¬ª. On peut imaginer que les besoins des professeurs et des √©l√®ves seront diff√©rents‚Ä¶

L‚Äôapplication permettra aux utilisateurs authentifi√©s de g√©rer leurs comptes, pr√©f√©rences, mots de passe, listes, et √† tous les utilisateurs d‚Äôexporter/importer leurs recherches courantes (dans le format texte que vous jugerez bon).

Les utilisateurs pourront √©galement g√©o localiser les stages par rapport √† leur position actuelle (temps de trajet,‚Ä¶).

Fonctionnalit√©s requises (num√©rot√©es, mais non ordonn√©es)

- F1 : la recherche de r√©sultats sur un site que vous choisirez (Hellowork, welcometothejungle, ‚Ä¶)
- F2 : authentification et gestion du profil utilisateur/profil administrateur
- F3 : gestion de l‚Äôimport/export de donn√©es au format choisi
- F4 : gestion de l‚Äôhistorique des recherches
- F5 : recherche par cat√©gorie/filtre de recherches

Fonctionnalit√©s optionnelles

- FO1 : lancer des recherches sur plusieurs sites en parall√®le
- FO2 : g√©o localisation de l‚Äôutilisateur et des annonces/distance entre l‚Äôutilisateur et l‚Äôannonce
- FO3 : alertes automatiques si de nouvelles annonces de stage remplissant les crit√®res sont publi√©es
- FO4 : ‚Ä¶ √† vous de jouer‚Äâ!

    NOTE : ce sujet regorge de ¬´‚Äâ‚Ä¶‚Äâ¬ª. En effet, une participation active est vivement recommand√©e et vos id√©es, pour rendre votre projet unique, sont les bienvenues‚Äâ!

Fonctionnalit√©s non not√©es (et d√©conseill√©es)

- les statistiques/mod√®les complexes que vous pourrez imaginer (une moyenne, OK, mais un mod√®le expo logarithmique quantique d‚Äôordre 10, non)
- l‚Äôinterface graphique type GUI (AUCUN point bonus sur une tr√®s jolie interface‚Äâ!)


## GreenStream : API d'aide √† la r√©duction de l'impact carbone de la VOD üåø

Tuteur : Maxence Lagalle

### Pr√©sentation

**GreenStream** est une API REST qui permet de r√©duire l‚Äôimpact carbone d‚Äôun service de VOD (Netflix, Amazon Prime, Disney+‚Ä¶). Pour le consommateur, elle calcule l‚Äôimpact carbone d‚Äôune vid√©o √† partir de sa dur√©e et de sa r√©solution, en utilisant le mod√®le ["1byte" de The Shift Project](https://theshiftproject.org/article/climat-insoutenable-usage-video/) ou d‚Äôautres mod√®les d‚Äôestimation. Pour le fournisseur de VOD, elle aide √† choisir des serveurs dans la meilleure zone g√©ographique des fournisseurs Cloud en fonction de l‚Äôimpact carbone de la production d‚Äô√©lectricit√©. Ces donn√©es sur l‚Äôimpact carbone sont fournies par [l'API ElectricityMaps](https://static.electricitymaps.com/api/docs/index.html). GreenStream est un projet innovant et √©cologique, qui accompagne dans la transition vers des services de VOD plus vert et plus responsables.

*[ElectricityMaps](https://www.electricitymaps.com) est partenaire de GreenStream et offre un acc√®s √† la version payante de son API pour toute la dur√©e du projet.*

### Fonctionnalit√©s de base

- **Estimation de l‚Äôempreinte carbone d‚Äôune vid√©o** selon le mod√®le ‚Äú1byte‚Äù de The Shift Project
    - Prise en compte de la localisation g√©ographique du fournisseur de VOD et de l‚Äôutilisateur
    - Prise en compte de la dur√©e et de la qualit√© de la vid√©o, du type de connexion et du mat√©riel utilis√© pour regarder la vid√©o
    - Utilisation des donn√©es d‚Äôimpact carbone en temps r√©el fournies par l‚ÄôAPI ElectricityMaps
- **Recommandation du meilleur service Cloud** pour diffuser une vid√©o √† un utilisateur
    - Choix du service Cloud √† l‚Äôimpact carbone le plus faible en fonction de la zone g√©ographique de l‚Äôutilisateur
    - D√©termination des services Cloud √©ligibles en fonction de la localisation de l‚Äôutilisateur (ceux dans le m√™me pays ou un pays limitrophe)
    - Utilisation des donn√©es de pr√©vision de l‚Äôimpact carbone pour la dur√©e de la vid√©o fournies par l‚ÄôAPI ElectricityMaps
- **Gestion de l‚Äôoffre des fournisseurs Cloud**
    - Impl√©mentation de la liste des zones g√©ographiques propos√©es par au moins deux fournisseurs Cloud (AWS, GCP, Azure‚Ä¶)
    - Utilisation d‚Äôune base de donn√©es SQL pour stocker les informations sur les services Cloud disponibles
- **Information sur l‚Äô√©tat du service GreenStream**
    - Fourniture d‚Äôun service permettant de s‚Äôassurer que GreenStream fonctionne correctement et que son lien avec ElectricityMaps est actif

### Fonctionnalit√©s avanc√©es

- **Simulation de l‚Äôimpact carbone d‚Äôun changement de comportement**
    - Cr√©ation d‚Äôun service qui permet √† l‚Äôutilisateur de simuler l‚Äôimpact carbone qu‚Äôil aurait s‚Äôil changeait certains param√®tres de sa consommation de vid√©os, tels que la qualit√©, la dur√©e, le type de connexion ou le mat√©riel utilis√©
    - Utilisation du mod√®le ‚Äú1byte‚Äù ou d‚Äôautres mod√®les d‚Äôestimation pour calculer l‚Äôempreinte carbone selon les diff√©rents sc√©narios
- **Utilisation de mod√®les d‚Äôestimation de l‚Äôempreinte carbone plus sophistiqu√©s**
    - Prise en compte d'une consommation √©lectrique variable selon les fournisseurs Cloud
    - Utilisation d‚Äôautres mod√®les d‚Äôestimation publi√©s, tels que le mod√®le [‚ÄúCarbon Footprint of Video Streaming‚Äù de Carbon Trust](https://www.carbontrust.com/our-work-and-impact/guides-reports-and-tools/carbon-impact-of-video-streaming) ou d'autres mod√®les √† rechercher
- **Int√©gration de crit√®res avanc√©s dans la recommandation du service Cloud**
    - Prise en compte du co√ªt financier des services Cloud et d‚Äôun arbitrage entre le co√ªt et l‚Äôempreinte carbone
    - Utilisation d‚Äôun graphe de connexions entre les zones pour d√©terminer la liste des services Cloud √©ligibles pour diffuser une vid√©o √† un utilisateur
- **Suivi de la consommation totale du service et de son empreinte carbone**
    - Enregistrement SQL de la consommation de vid√©os : dur√©e, zone g√©ographique de l‚Äôutilisateur, service Cloud associ√©, empreinte carbone
    - Acc√®s aux donn√©es brutes ou √† une synth√®se statistique via l'API
- **Fonctionnement en mode d√©grad√©**
    - Utilisation de donn√©es historiques d‚Äôintensit√© carbone de la production d‚Äô√©lectricit√© en cas de d√©faillance de l‚ÄôAPI ElectricityMaps

L‚Äôinitiative est fortement encourag√©e dans ce projet, et d‚Äôautres id√©es de fonctionnalit√©s avanc√©es ou d‚Äôam√©lioration des fonctionnalit√©s de base peuvent √™tre propos√©es par les √©l√®ves.

## Prix du carburantüõ¢üí∞

Tuteur : Thierry Math√©

### Objectif

Le minist√®re des Finances met √† disposition un fichier des prix des carburants dans les stations fran√ßaises. Ce fichier au format XML contient entre autre pour chaque station, ses coordonn√©es, son adresse, ses heures d‚Äôouvertures, le prix des carburants disponibles (mais l‚Äôenseigne de la station n‚Äôy figure pas). 
Le but du projet de cr√©er une API (application programming interface) qui exploite les donn√©es contenues dans ce fichier. Cette API devra permettre de¬†:

- Consulter la liste des stations se trouvant √† proximit√© d‚Äôun point donn√© il sera aussi possible de pr√©ciser le carburant. 
- Cr√©er et mettre √† jour des listes de stations qu‚Äôil sera possible de consulter par exemple pour voir les prix sur les stations se trouvant sur un trajet r√©gulier.
    
A chaque requ√™te, l‚ÄôAPI doit s‚Äôassurer qu‚Äôelle utilise bien les derni√®res donn√©es disponibles et au besoin t√©l√©charger les nouvelles donn√©es disponibles sur le site (mises √† jour toutes les 10 minutes)¬†: <https://donnees.roulez-eco.fr/opendata/instantane>

### Fonctionnalit√©s de base

#### Stations √† proximit√©s
Les param√®tres donn√©s √† cette requ√™te sont les coordonn√©es (longitude et latitude) d'un point, une distance en km et un type de carburant. L'API va alors extraire l'ensemble des stations se trouvant dans la zone ainsi d√©finie et disponsant du carburant indiqu√©. 

La r√©ponse sera donn√©es au format JSON et contiendra:

- les parm√®tres de la requ√™te
- la date et l'heure d'ex√©cution
- le nombre de stations trouv√©es
- la liste des stations : pour chaque station on aura:
    - l'id, les coordonn√©es et l'adresse de la station
    - le prix du carburant 

#### Stations pr√©f√©r√©es

La gestion des listes de stations doit permettre de :

- Cr√©er une liste: le param√®tre en entr√©e est un nom donn√© par l'utilisateur. La requ√™te revoie un identifiant qui devra √™tre pass√© comme param√®tre pour toutes les autres actions,
- Consulter la liste des listes cr√©es: aucun param√®tre, la requ√™te renvoie les couple identifiant-nom des listes d√©fines,
- Ajouter une une plusieurs stations √† un liste: les param√®tres en entr√©e sont l'identifiant de la liste et le ou les identifiants des stations √† ajouter,
- Supprimer une liste: le param√®tre √† donner est l'identifiant de la liste,
- Consulter la liste: le param√®tre √† donner est l'identifiant de la liste. La requ√™te revoie les informations au format JSON qui contiennent:
    - l'identifiant et le nom de la requ√™te
    - la date et l'heure d'ex√©cution
    - le nombre de stations contenues dans la liste
    - la liste des stations. Pour chaque station on aura:
        - l'id, les coordonn√©es et l'adresse de la station
        - le prix du carburant 

### Fonctionnalit√©s avanc√©es
Voici quelques id√©es de fonctions avanc√©es pour les groupes qui auraient effectu√© l'ensemble des fonction de bases. Toutes autres id√©es pourra bien s√ªr √™tre propos√©es en cours de projet.

#### Stations √† proximit√©s

- Possibilit√© de passer comme parm√®tre une adresse au lieu de coordonn√©es
- Possibilit√© de pr√©ciser l'heure de passage et de ne conserver que les stations ouvertes √† cette heure.

#### Station pr√©f√©r√©es

- Possilit√© de retirer une ou plusieur stations d'une liste
- Imposer une identification pour consulter les listes. Chaque utilisateurs n'aurait alors acc√©s qu'√† ses liste.



## Outil statistique d‚Äôanalyse des parties de League of Legends üéÆ

Tuteur : Alo√Øs DE OLIVEIRA

### Contexte
League Of Legends (connu sous le sigle LoL) est un jeu video, plus pr√©cis√©ment un Multiplayer Online Battle Arena (MOBA), d√©velopp√© par Riot. LoL comptait plus de 100M de joueurs actifs en 2022 et le chiffre n‚Äôest pas vou√© √† diminuer dans les prochaines ann√©es. 
Cet engouement force Riot √† se renouveler en cr√©ant de nouveaux champions, de nouveaux items, des ajustements sur l‚Äô√©quilibrage du jeu (appel√©s patch). Les joueurs appr√©cient donc fortement les outils leur permettant d‚Äôavoir des analyses simples mais rapides afin de les accompagner et aider dans leurs choix.

**Ce sujet ne n√©cessite pas de conna√Ætre le jeu ou d‚Äôy avoir d√©j√† jou√©. Au contraire, il vous arrivera souvent de devoir dans un premier temps comprendre un nouveau contexte m√©tier et vos donn√©es en entr√©e.**


### Sujet

#### Objectif

Vous √™tes mobilis√©s afin de mettre en place une solution capable de fournir aux joueurs les premi√®res informations essentielles.
Ces analyses seront simples mais n√©cessiteront d‚Äôanalyser tout l‚Äôhistorique des parties que vous aurez √† votre disposition, et donc que vous stockerez. 
Votre solution a pour but d‚Äô√™tre pens√©e dans une logique d‚Äôam√©lioration continue. Ainsi un **code document√© utilisant les principes de la Programmation Orient√©e Objet (POO)** est attendu.


#### Les donn√©es

LoL met √† disposition une [API](https://developer.riotgames.com/) afin de permettre aux personnes qui le souhaitent de pouvoir utiliser leurs donn√©es. Une explication du fonctionnement de l‚ÄôAPI de LoL et de l'obtention des donn√©es sera effectu√©e.


### Fonctionnalit√©s

Lors de ce projet, vous aurez des fonctionnalit√©s obligatoires et avanc√©es. **Il est n√©cessaire de se focaliser sur ces premi√®res et d‚Äôentreprendre les secondes que lorsque vous avez une base solide pour r√©pondre √† l‚Äôensemble des fonctionnalit√©s obligatoires**. 


### Fonctionnalit√©s obligatoires

**Niveau base de donn√©es**

#### FO1 : Cr√©ation de votre base de donn√©es :

- Cr√©ation d‚Äôune base de donn√©es de votre choix (SQL/NoSQL) qui vous servira √† stocker l‚Äôhistorique des parties. Le mod√®le de donn√©es est important, il doit √™tre adapt√© afin de faciliter toutes modifications. 
- Cr√©ation d‚Äôun pipeline de donn√©es. L‚Äôensemble des √©tapes de la collecte au chargement, en passant par la transformation doivent √™tre le plus r√©utilisable possible. 
- L‚Äôensemble des t√¢ches doit √™tre effectu√© en Python (de la cr√©ation, √† l‚Äôinsertion et aux √©ventuelles modifications).


**Niveau API**

Pour la r√©alisation de ce projet, vous devrez r√©aliser une API (√† l‚Äôaide [FastAPI](https://fastapi.tiangolo.com/) ou [Flask](https://flask.palletsprojects.com/en/2.3.x/)) qui vous permettra de renvoyer les diff√©rents r√©sultats souhait√©s. Ces r√©sultats seront √† retourner sous format json.
Il existera diff√©rentes classes, d√©crites ci-dessous, avec chacune ses m√©thodes. Toutes les m√©thodes pr√©sentes dans les descriptions des classes sont √† titre indicatif. N‚Äôh√©sitez pas √† √™tre force de proposition.


#### FO2 : Proposer des statistiques de base avec une classe invit√© :

- Cela ne n√©cessitera aucune connexion.
- Cette classe devra comporter certaines m√©thodes permettant de fournir des statistiques globales sur le jeu, telles que : 
    - Afficher les statistiques d‚Äôun champion : le nombre de games jou√©es, le winrate, le gold lead √† Xmin, etc.
    - Trier les champions (globalement ou par lane) selon le crit√®re au choix parmi : nombre de games jou√©es, le winrate, etc.


#### FO3 : Proposer des statistiques plus pr√©cises avec une classe n√©cessitant une connexion : 

- Cela n√©cessitera de se connecter √† un compte user.
- Cette classe h√©ritera de l‚Äôensemble des m√©thodes propres √† la classe invit√©.
- Cette classe devra comporter certaines m√©thodes permettant de fournir des statistiques li√©es au compte en question, telles que :
    - Afficher les statistiques globales/par lane/par champion du compte : le nombre de games jou√©es, le winrate, le kda, etc.


#### FO4 : Gestion de l'ensemble des donn√©es (user et LoL) √† l'aide d'une classe admin : 

- Cela n√©cessitera de se connecter √† un compte admin. 1 seul sera n√©cessaire.
- Cette classe h√©ritera de l‚Äôensemble des m√©thodes pr√©c√©dentes.
- Cette classe aura pour but de permettre √† l‚Äôadmin de pouvoir g√©rer les comptes et les donn√©es. 


### Fonctionnalit√©s avanc√©es

Les fonctionnalit√©s avanc√©es sont tri√©es selon le niveau de difficult√© , cependant vous √™tes totalement libres sur les fonctionnalit√©s avanc√©es que vous souhaitez r√©alis√©es.

#### FA1 : Ajout de nouvelles donn√©es quotidiennes :

Jusqu‚Äôici vous utilisez les donn√©es mises √† disposition sans enrichissement.  Cette fonctionnalit√© aura pour but de permettre √† l‚Äôadmin de pouvoir ajouter des nouvelles parties r√©centes.

Les diff√©rents points attendus sont :

- Gestion de la cl√© (permettant l‚Äôacc√®s √† l‚ÄôAPI de Riot) : au choix entre en brute en param√®tre d‚Äôentr√©e ou permettre d‚Äôaller la r√©cup√©rer directement sur le site depuis l‚ÄôAPI.
- R√©cup√©ration des donn√©es depuis l‚ÄôAPI de Riot selon certains crit√®res de s√©lection.
- Ajout des donn√©es dans vos bases de donn√©es.
- Ajout de la fonctionnalit√© au sein de votre API.

Les crit√®res de s√©lection seront libres et donc propos√©s par votre groupe, en fonction de ce que l‚ÄôAPI vous permettra de faire.


#### FA2 : Mise en place d‚Äôun workflow collaboratif : 

Le workflow Gitflow vous permet de faciliter la gestion des branches et la s√©paration des diff√©rentes t√¢ches.

Utilisez le [framework Gitflow](https://www.atlassian.com/fr/git/tutorials/comparing-workflows/gitflow-workflow) pour la gestion de votre projet.


#### FA3 : Conteneurisation de l‚Äôapplication : 

Conteneuriser votre application aura pour but de faciliter son d√©ploiement et son partage. En effet, cela permettra de r√©unir le code et ses composants (frameworks, biblioth√®ques, etc) dans un conteneur. Il sera alors possible d‚Äôex√©cuter le conteneur sans se soucier des diff√©rentes d√©pendances (l‚Äôinstallation des biblioth√®ques avec la bonne version par exemple). 

Utilisez l'outil [Docker](https://fastapi.tiangolo.com/deployment/docker/) pour conteneuriser votre application.


#### FA4 : Mise en place d‚Äôun mod√®le pr√©dictif :

Pour le moment, vous ne faites remonter que des statistiques descriptives. Ici il s‚Äôagit de mettre √† profit l‚Äôensemble des donn√©es disponibles pour permettre √† l‚Äôutilisateur de pr√©dire l‚Äô√©quipe gagnante en fonction des 5 champions de chaque √©quipe.
L‚Äôenjeu de cette fonctionnalit√© n‚Äôest pas de vous faire trouver le meilleur mod√®le de pr√©diction mais d‚Äôajouter une fonctionnalit√© √† votre API bas√© sur ce mod√®le. Vous ne serez donc aucunement not√© sur la qualit√© des pr√©dictions.

Les diff√©rents points attendus sont :

- Choix d‚Äôun mod√®le de pr√©diction : vous ne serez certes pas not√© sur la qualit√© des pr√©dictions mais une courte r√©flexion sur le choix du mod√®le est attendue. 
- Entrainement dudit mod√®le : vous √™tes libres sur le choix des librairies.
- S√©rialisation du mod√®le : vous devez sauvegarder votre mod√®le.
- Ajout de la fonctionnalit√© au sein de votre API.

## Mangez mieux ! :strawberry: :cut_of_meat: :candy: 

Tuteur : Sophie HERBERT, ENSAI 2021

### Objectif :

Recommander des produits meilleurs pour la sant√© selon plusieurs crit√®res !

Vous allez explorer la c√©l√®bre API Open Food Facts qui regroupe des produits alimentaires divis√©s en plusieurs cat√©gories (Viandes, Snacks, Aliments d‚Äôorigine v√©g√©tale etc.) et pour lesquels nous avons un grand nombre de variables renseign√©es par la communaut√© : nutriscore, nova score, ecoscore, taux de prot√©ine, taux de sucre, √©nergie en kcal‚Ä¶
L‚Äôobjectif de l‚Äôapplication est d‚Äôutiliser un √©chantillon de ces donn√©es en vous concentrant sur quelques produits de quelques cat√©gories que vous aurez choisis, de les afficher tel un catalogue et de pouvoir les trier selon le crit√®re s√©lectionn√© : le moins de sucre possible, le meilleur eco-score, la plus faible valeur √©nerg√©tique... En allant sur une fiche ¬´ Produit ¬ª, vous afficherez le meilleur produit de la m√™me cat√©gorie selon ce crit√®re.
Un syst√®me d‚Äôidentification devra √™tre mis en place. Si l‚Äôutilisateur est identifi√©, pourquoi pas sauvegarder ses articles dans un panier virtuel ?

### Les fonctionnalit√©s requises :

Les fonctionnalit√©s requises :

-	F1 : affichage simple en console d‚Äôun catalogue de produits alimentaires par cat√©gorie de produit
-	F2 : ordonner les produits selon un crit√®re nutritionnel
-	F3 : s√©lection d‚Äôune fiche ¬´ Produit ¬ª recommandant un autre produit de la m√™me cat√©gorie avec un crit√®re meilleur que le produit consult√© (si meilleur il y a)
-	F4 : syst√®me d‚Äôauthentification et de gestion du profil (changement de mot de passe‚Ä¶)

### Et en option :

-	F5 : sauvegarde de produits dans un panier
-	‚Ä¶

Des fonctionnalit√©s optionnelles pourront √™tre d√©velopp√©es √† votre guise et selon votre inspiration sur le sujet ! Les donn√©es Open Food Facts √©tant tr√®s riches, d‚Äôautres axes d‚Äôanalyses peuvent √™tre creus√©s‚Ä¶
Note : l‚Äôinterface GUI, la mise en place de mod√®les statistiques, la gestion des valeurs manquantes ne seront pas inclues dans la notation.




## JobHub : Simplifier la Recherche d'Emploi dans le Secteur de la Tech

### Tuteur : Mansor GUEYE

###  Description du Projet :
Ce projet a pour objectif de cr√©er une application qui facilite la recherche d'emploi dans le secteur de la technologie en utilisant l'API REST gratuite de [Adzuna](https://developer.adzuna.com/) , qui fournit des informations sur les offres d'emploi dans divers secteurs √† travers le monde. L'application permettra aux utilisateurs de rechercher des emplois, de filtrer les r√©sultats, de suivre leur progression dans leurs candidatures et de recevoir des alertes pour les nouvelles offres correspondant √† leurs comp√©tences.

### Objectifs du Projet :

- Int√©grer les donn√©es de l'API Adzuna dans une application conviviale.
- Permettre aux utilisateurs de rechercher des offres d'emploi par mots-cl√©s, localisation et cat√©gories.
- Fournir des fonctionnalit√©s de suivi des candidatures, y compris la gestion de CV et de lettres de motivation.
- Envoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs crit√®res.
- Mettre en place un syst√®me de profil pour les chercheurs d'emploi.


### Les fonctionnalit√©s requises :

Les fonctionnalit√©s requises :

- F1 : Int√©grer les donn√©es de l'API Adzuna pour afficher des offres d'emploi dans divers secteurs.
- F2 : Permettre aux utilisateurs de rechercher des emplois en utilisant divers crit√®res.
- F3 : Permettre aux utilisateurs de cr√©er des profils de chercheurs d'emploi.

### Et en option :

- F4 : Fournir des fonctionnalit√©s de suivi des candidatures et de gestion de documents(CVs, lettres de motivation...).
- F5 : Envoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs comp√©tences.
- F6:...

:heavy_exclamation_mark: Vous avez la libert√© de d√©velopper des fonctionnalit√©s optionnelles selon votre inspiration.
 Aucune interface graphique n'est demand√©e dans ce sujet, toute interaction avec l'application devra se faire via l'invit√© commande ( terminal / cmd ). Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.
 
 
## Velib' Hunter üö≤üî™

### Tuteur : Samuel GOUTIN

###  Objectif :

Ce projet vous propose d'explorer les donn√©es mises √† disposition par OpenData Paris. En particulier, vous allez jouer avec les donn√©es pr√©sentant [la disponibilit√© des Velib' en temps r√©el](https://opendata.paris.fr/explore/dataset/velib-disponibilite-en-temps-reel).
La solution proposera des services pour permettre aux utilisateurs de trouver plus facilement un v√©lo, ou pour aider la ville de Paris √† mieux g√©rer son parc de v√©los.
Pour cela, vous aurez besoin de capturer et de stocker les donn√©es disponibles sur l'API d'OpenData Paris (et leur historique!) dans une base de donn√©es, puis de cr√©er √† votre tour une API pour y mettre √† disposition vos services.

### Fonctionnalit√©s obligatoires

- **F1** : obtenir le nom de la station la plus proche ayant au moins un v√©lo disponible √† partir de coordonn√©es g√©ographique. Vous pouvez utiliser l'[API d'Etalab](https://adresse.data.gouv.fr/api-doc/adresse) pour obtenir des coordonn√©es g√©ographiques √† partir de d'une adresse.
- **F2** : obtenir le nom de la station la moins fr√©quent√©e sur une p√©riode de temps donn√©es.
- **F3** : obtenir le num√©ro de l'arrondissement le plus fr√©quent√© sur une p√©riode de temps donn√©es.

### Fonctionnalit√©s optionnelles
- **F01** - *Recherche de v√©lo en temps r√©el* : Un utilisateur utilise la F1 pour trouver un v√©lo proche de lui. En arrivant sur place: mauvaise surprise, le v√©lo lui ai pass√© sous le nez. Pour √©viter ce genre de d√©sagr√©aments, le nom de la station la plus proche sera actualis√© en temps r√©el. Pour cela, vous pouvez am√©liorer la F1 en proposant une connexion bas√© sur un WebSocket.
- **FO2** - *D√©ploiement* : Pour faciliter le d√©ploiement de votre solution, conteneurisez-la en utilisant [Docker Compose](https://wiki-tech.io/Conteneurisation/Docker/Docker-Compose).
- **FO3** - *[CRUD](https://fr.wikipedia.org/wiki/CRUD)* : Permettez aux utilisateurs de communiquer directement avec votre base de donn√©es. Pour cela, compl√©tez votre API en proposant des nouvelles routes permettant de :
  - r√©cup√©rer toutes les informations d'une station
  - supprimer toutes les informations d'une station
  - mettre √† jour le nom d'une station
  - ajouter une nouvelle station

### Les outils

Pour r√©pondre aux fonctionnalit√©s demand√©s, vous aurez certainement besoin de vous armer de:

- une librairie pour construire des APIs (conseill√©: FastAPI)
- une solution de base de donn√©es (conseill√©: SQLite)
- un outil de versioning de code en √©quipe (Gitlab ou Github)





---

# 2022-2023

## Gestion de petites annonces üì∞üí∞üè∑

Tutuer : Colin Leverger

#### Objectif

Vous √™tes un groupe d‚Äôamateurs de shopping sur le web, et souhaitez d√©velopper une application en ligne de commande pour faciliter les achats sur internet. Votre startup s‚Äôappelle __________ et votre application ________.

Votre application permettra √† un utilisateur de rechercher des articles de son choix sur un ou plusieurs sites de vente (Leboncoin, Vivastreet, ‚Ä¶). Les articles peuvent √™tre pr√©sents dans diff√©rentes cat√©gories (voitures, consoles,‚Ä¶). S‚Äôil est authentifi√©, l‚Äôutilisateur pourra sauvegarder dans l‚Äôapplication les articles/informations/pages web/‚Ä¶ qui l‚Äôint√©ressent dans sa ¬´‚Äâliste d‚Äôenvies‚Äâ¬ª. La navigation et les recherches de tout utilisateur seront historis√©es.

Deux types d‚Äôutilisateurs authentifi√©s pourront cohabiter : utilisateur ¬´‚Äâparticulier‚Äâ¬ª et utilisateur ¬´‚Äâpro‚Äâ¬ª. Un ¬´‚Äâadministrateur‚Äâ¬ª de l‚Äôapp pourra √©galement g√©rer l‚Äôapplication et les utilisateurs. Un utilisateur non authentifi√© sera par d√©faut dans la cat√©gorie ¬´‚Äâparticulier‚Äâ¬ª. On peut imaginer que les besoins des professionnels et des particuliers seront diff√©rents‚Ä¶

L‚Äôapplication permettra aux utilisateurs authentifi√©s de g√©rer leurs comptes, pr√©f√©rences, mots de passe, listes, et √† tous les utilisateurs d‚Äôexporter/importer leurs recherches courantes (dans le format texte que vous jugerez bon).

Les utilisateurs pourront √©galement g√©o localiser les annonces par rapport √† leur position actuelle (temps de trajet,‚Ä¶).

Fonctionnalit√©s requises (num√©rot√©es, mais non ordonn√©es)

- F1 : la recherche de r√©sultats sur un site que vous choisirez (Leboncoin, Vivastreet, ‚Ä¶)
- F2 : authentification et gestion du profil utilisateur/profil administrateur
- F3 : gestion de l‚Äôimport/export de donn√©es au format choisi
- F4 : gestion de l‚Äôhistorique des recherches
- F5 : recherche par cat√©gorie/filtre de recherches

Fonctionnalit√©s optionnelles

- FO1 : lancer des recherches sur plusieurs sites en parall√®le
- FO2 : g√©o localisation de l‚Äôutilisateur et des annonces/distance entre l‚Äôutilisateur et l‚Äôannonce
- FO3 : ‚Ä¶ √† vous de jouer‚Äâ!

> NOTE : ce sujet regorge de ¬´‚Äâ‚Ä¶‚Äâ¬ª. En effet, une participation active est vivement recommand√©e et vos id√©es, pour rendre votre projet unique, sont les bienvenues‚Äâ!

Fonctionnalit√©s non not√©es (et d√©conseill√©es)

-  les statistiques/mod√®les complexes que vous pourrez imaginer (une moyenne, OK, mais un mod√®le expo logarithmique quantique d‚Äôordre 10, non)
-  l‚Äôinterface graphique type GUI (AUCUN point bonus sur une tr√®s jolie interface‚Äâ!)


## Webservice de g√©n√©ration de jeux de donn√©es :satellite: :globe_with_meridians: :minidisc:

Tuteur : Antoine Brunetti

### Contexte

Dans le cadre de la r√©alisation de tests de programmes, on est souvent amen√©s a utiliser des jeux de donn√©es fictives.  
Pour r√©pondre √† ce besoin, vous envisagez de constituer un produit qui permet de g√©n√©rer des donn√©es de tests pour des statisticiens et d√©veloppeurs en herbe.

Les utilisateurs de cette API pourront renseigner des types de donn√©es pour la g√©n√©ration √† partir d'un language d√©di√© : 
Par exemple :

- d√©finir un type SEXE qui ne prendrait que les valeurs M,F ou A
  ```{.json} 
  "SEXE":"'M'|'F'|'A'"
  ```
- ou d√©finir un type compos√© VOITURE qui prendrait les valeurs compos√©es : 
  ```{.json} 
  {
      "VOITURE": {
  	"nb_roues": "INT",
  	"COULEUR": "'rouge'|'vert'|'bleu'"
      }
  }
  ```

Les utilisateurs de l'application d√©finiront ensuite des sch√©mas de donn√©es permettant de g√©rer les m√©tadonn√©es n√©cessaires √† la g√©n√©ration de donn√©es. Ces informations seront stock√©es en base de donn√©es.

Par exemple : 
```{.json} 
{
	"sexe": {
		"type": "SEXE",
		"remplissage": 100
	},
	"age": {
		"type": "18|19|20",
		"remplissage": 100
	},
	"prenom": {
		"type": "NAME",
		"remplissage": 88.4
	},
	"nom": {
		"type": "NAME|'dupont'"
		"remplissage": 85
	}
}
```

Il faudra √©galement qu'a partir d'un jeu de configuration fourni au format **JSON** au d√©marrage de l'application, vous d√©finissiez le point d'entr√©e d'acc√®s aux donn√©es g√©n√©r√©es. Cela permettra une meilleure utilisation de votre API pour permettre aux utilisateurs de tester un endpoint sans modifier leur configuration.

La g√©n√©ration de ces donn√©es devra se faire selon diff√©rents formats , avec la possibilit√© de d√©finir des seuils de remplissage en amont de la g√©n√©ration des donn√©es.


Les diff√©rents jeux de donn√©es g√©n√©r√©s seront eux aussi sauvegard√©s pour permettre d'acc√©der aux donn√©es de mani√®re stable *(par une graine :seedling:)*, cette graine pourra √™tre fournie par un HEADER HTTP propre a votre application.

Le point d'entr√©e de d√©finition du sch√©ma de donn√©es sera accessible en `GET` a un point d'entr√©e fixe de votre serveur.

### Fonctionnalit√©s de bases

- D√©finition des **valeurs** possibles pour un champ
- D√©finition d'un **sch√©ma** correspondant a une ligne de donn√©es √† g√©n√©rer.
- D√©finition d'un taux de remplissage pour un champ.
- D√©marrage de l'applicatif √† partir d'un fichier de r√®gles de bases
- La r√©alisation d'un sc√©nario d'usage de l'API.

### Fonctionnalit√©s avanc√©es

- G√©n√©ration d'un jeu de r√®gles √† partir d'un jeu de donn√©es
- Gestion de l'authentification √† l'API
- Permettre l'export et l'import de sch√©mas sous format JSON
- Proposer une solution r√©pondant √† des enjeux de volum√©trie (taille des jeux de donn√©es)
- R√©alisation de rapports de statistiques sur les jeux g√©n√©r√©s.

---

## Jeux de mot :book: :trophy: 

Tuteur : Armelle Koehl

### Pr√©sentation
Wordle, zutom, le mot et tous ces d√©riv√©s d'u c√©l√®bre jeu t√©l√©vis√©. C'est dans la lign√© de ces jeux que nous souhaitons nous inscrire en faisant notre propre version. Et pourquoi pas, le proposer comme occupation entre 2 amphis aux ensaiens :video_game: 
Le but du jeu est de deviner un mot sp√©cifique en un minimum de tentatives. Le joueur inscrit sur la premi√®re ligne un mot de son choix de m√™me longueur que le mot √† deviner et entre sa proposition. Le jeu lui indique alors quelles lettres ne se trouvent pas dans le mots, celles qui y sont mais mal plac√©es et celles qui s'y trouvent et qui sont bien plac√©es.
En fonction du nombre de tentatives, on peut proposer un score au joueur. :trophy: 

### Fonctionnalit√©s de base

- Un historique afin de reprendre sa partie en cours de route
- Un tableau des scores g√©n√©ral s'actualisant en temps r√©el
- Des tests unitaires
- Une interface console simple √† destination des clients qui utilisera votre API (cf architecture client serveur)


### Fonctionnalit√©s avanc√©es

- Proposer le jeu en multilingues
- Cr√©ation de listes de mots personnalis√©es
- Un client permettant de jouer en multijoueur local et distant
- Une gestion de l'authentification


### Les outils

- Utilisation d'une API fournissant des mots au hasard
- Framework fastApi
- Base Postgres
- Git et son univers
- Vscode

### Ce qu'on essaiera de voir en plus

---

## Conf√©rence de jeu de r√¥le :european_castle::dragon:

Tuteur : Cyriel Mallart

### Pr√©sentation

Une nouvelle convention de jeu de r√¥le arrive √† Rennes ! L‚Äôactivit√© phare de la convention sera un weekend d√©di√© √† la pratique des jeux de r√¥les. Plusieurs jeux se d√©rouleront en parall√®le, chacun √† une table contenant un ma√Ætre/une ma√Ætresse du jeu (MJ), ainsi que des joueurs et joueuses. Le but de ce weekend est de r√©unir des gens de tous horizons, de donner une premi√®re impression du jeu de r√¥le aux personnes n‚Äôayant jamais essay√©, mais aussi de satisfaire les joueurs plus exp√©riment√©s. Le syst√®me de jeu utilis√© est Dongeons et Dragons 5E.

Les organisateurs vous sollicitent pour cr√©er une application qui permette de g√©rer les tables de jeu de la conf√©rence. Il faudra cr√©er deux interfaces diff√©rentes : une pour les organisateurs et une pour un joueur ou MJ.

Un joueur ou une joueuse s‚Äôinscrit √† la conf√©rence en renseignant un nouveau profil. Sur ce profil, il ou elle peut d√©clarer des personnages diff√©rents. En utilisant l‚ÄôAPI disponible √† l‚Äôadresse <https://www.dnd5eapi.co/>, plus d‚Äôinformations seront coll√©ct√©es sur chaque personnage, et completeront sa fiche, comme les langues que le personnage parle, ses capacit√©s physiques, etc.  Une joueuse doit aussi pouvoir s‚Äôinscrire √† une table, et consulter les tables auxquelles elle joue. Les MJs ont acc√®s √† un profil similaire, o√π ils peuvent se porter volontaires pour plusieurs sc√©narios (et donc plusieurs tables). Le MJ doit aussi avoir acc√®s √† une liste des joueurs et des personnages qui seront √† sa table, afin de pouvoir se pr√©parer au mieux. 

Les organisateurs se r√©servent le droit de supprimer des joueurs et des MJ, et de r√©organiser les tables. Dans ce cas, un tel √©v√®nement sera notifi√© aux joueurs concern√©s lorsqu‚Äôils iront consulter les tables auxquelles ils jouent.

### Fonctionnalit√©s attendues

- Authentification sommaire des profils organisateur/joueur/MJ
- Inscription pour un nouveau joueur ou MJ
- Compl√©tion des fiches personnages via l‚ÄôAPI
- Inscription/d√©sistement √† une table (avec gestion des contraintes)
- Vue du programme individuel pour chaque joueur
- Ajout/suppression des joueurs √† une table
- Cr√©ation/suppession de tables
- Vue g√©n√©rale du programme (tables, joueurs, MJs et horaires)

### Fonctionnalit√©s avanc√©es

 - Recherche du programme d‚Äôun joueur particulier par un organisateur
 - Validation des personnages par le MJ avant inscription d√©finitive √† une table
 - Gestion d‚Äôun second syst√®me de jeu (Pathfinder, Call of Chtulu ou Monster of the Week, par exemple)

:heavy_exclamation_mark: Aucune interface graphique n'est demand√©e dans ce sujet. Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.

### Technologies utilis√©es

- FastApi
- Base de donn√©e au choix (SQL comme PostGres ou MySQL, ou NoSQL comme MongoDB)
- API D&D5e 

## Profite au MAX de ton TGVMAX :train2: : TGVMAXimizer

Tuteur : Mansor Gueye

### Pr√©sentation
Vous avez un abonnement TGVMAX (Jeune :adult: :woman:  ou Senior :older_adult::older_woman:)et vous avez du mal √† trouver des trajets √©ligibles, TGVMAXimizer est LA solution. 
TGVMAXimizer est l'application qui facilite la recherche de places disponibles pour les trajets √©ligibles au TGVMax. 
L'utilisateur cr√©e un compte avec un profil jeune ou senior.
Une fois authentifi√©, l'utilsateur pourra lancer une recherche en specififant la gare de depart, la gare de d√©stination et √©ventuellement la date de d√©part. Le resultat sera la liste des trajets √©ligibles au TGVMAX junior ou senior selon le profil de l'utilisateur. 
Les donn√©es sur la disponibilit√© √† 30 jours de places MAX JEUNE et MAX SENIOR  sont accessibles via l'api tgvmax disponible sur le site <https://data.sncf.com/explore/dataset/tgvmax/api/>

### Fonctionnalit√©s attendues

- Cr√©ation de compte 
- Une gestion de l'authentification
- Possibilit√© de d√©connexion
- Recherche de trajets √©ligibles au MAX JEUNE / MAX SENIOR 
- Filtre pour ne voir que les places √† 0 euro

### Fonctionnalit√©s avanc√©es

- Recherche de toutes les destinations atteignables avec des places √©ligibles au MAX JEUNE / MAX SENIOR  (y compris le trajet de retour) durant un weekend
- Recherche de toutes les destinations atteignables avec des places √† 0 euros (y compris le trajet de retour) durant un weekend
- Utilisation d'une architecture serveless avec AWS lambda pour executer du code python en r√©ponse √† un √©v√©nement (event trigger)
- Cr√©er un systeme d'alerte pour envoyer une notification par email quand une place remplissant les crit√®re de recherche se lib√®re.

:heavy_exclamation_mark: Aucune interface graphique n'est demand√©e dans ce sujet, toute interaction avec l'application devra se faire via l'invit√© commande ( terminal / cmd ). Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.

### Les outils

- FastApi
- Base de donn√©e au choix (SQL comme PostGres ou MySQL, ou NoSQL comme MongoDB)
- Versioning avec Git
- IDE de votre choix

## Rap Analytics üé∂üé§üìà

Tuteur : Samuel Goutin

### Contexte

Rapminerz.io est un Data-M√©dia pour le Rap FR. Notre ambition est d'utiliser les plus r√©centes innovations technologiques pour offrir √† une communaut√© de passionn√©s une vision approfondie et in√©dite du Rap Francophone. Le projet est n√© de l'id√©e de parler de rap autrement, en mettant √† jour des ph√©nom√®nes impossibles √† percevoir lors d'une simple √©coute. Nous exploitons la force de la data science pour traiter du rap dans sa globalit√©.
Pour cela, nous avons agr√©g√© une des plus grandes bases de donn√©es du Rap Fran√ßais avec plus de 120k morceaux. Nous vous proposons de participer √† l'analyse de cette montagne de donn√©es. Pr√™ts ? Codez !

### Sujet

#### Objectif

Vous √™tes charg√© de d√©velopper une solution capable de fournir √† la communaut√© de Rapminerz des analyses pertinentes sur les featuring des rappeurs Fran√ßais.
Les analyses sont des chiffres cl√©s, des indicateurs ou des pr√©dictions qui n√©cessite d'analyser tout l'historique de donn√©es √† votre disposition. Votre solution doit donc stocker l'historique des donn√©es.
On souhaite que les analyses soient consultables depuis un navigateur web (via des requ√™tes HTTP).  La communaut√© de Rapminerz compte aujourd'hui plus de 50k personnes. Cela fait autant d'utilisateur potentiels de vos analyses. Aussi, la source de donn√©es peut √™tre amen√©e √† grossir. Votre solution doit donc supporter une augmentation du nombre d'utilisateurs et de la quantit√© de donn√©es.
Enfin, votre solution continuera √† √©voluer. Elle doit √™tre pens√©e pour faciliter l'ajout de nouvelles fonctionnalit√©s.

Utilisez les principe de la Programmation Orient√©e Objet et privil√©giez un code document√© et test√© comme vu en TP.

#### Les donn√©es

Vous avez √† disposition un flux de donn√©es √† l‚Äôadresse suivante <https://apps-dev.rapminerz.io/data-ensai/>. Il contient une liste de featuring d√©crit par les champs : 

- **date** : sous la forme d'un timestamp.
- **primary_artist_name** : le nom de l'artiste en t√™te d'affiche de la chanson.
- **featured_artists_names** : la liste des noms des artistes en featuring sur la chanson.

Les donn√©es sont brutes, et n√©cessitent donc d‚Äô√™tre nettoy√©es et transform√©es. Chaque semaine, des nouvelles donn√©es sont int√©gr√©es aux flux, et les plus anciennes sont retir√©es.

### Fonctionnalit√©s

Les fonctionnalit√©s d√©crites dans la suite permettent de r√©pondre au sujet, en tenant compte des contraintes sous jacentes.

Vous devez impl√©menter toutes les fonctionnalit√©s attendues ainsi qu'**au moins une fonctionnalit√© avanc√©e** de votre choix.

### Fonctionnalit√©s attendues

#### FO1 : Mise en place d'une base de donn√©es

- Choisissez une base de donn√©es de votre choix (SQL/NoSQL) pour y stocker l'historique de vos donn√©es, en vous assurant de ne pas introduire de doublons. Vous pouvez par exemple utiliser la librairie [sqlite3](https://docs.python.org/3/library/sqlite3.html).
- Toutes les op√©rations li√©es √† votre base de donn√©es telle que la cr√©ation de tables, les insertions et les lectures devront √™tre pilot√©es en Python.
- Choissisez un mod√®le de donn√©es qui facilitera les modifications. Par exemple, le changement de nom d‚Äôun artiste ne doit n√©cessiter qu‚Äôune seule instruction (type UPDATE TABLE). Inspirez-vous de la [mod√©lisation en √©toile](https://fr.wikipedia.org/wiki/%C3%89toile_(mod%C3%A8le_de_donn%C3%A9es)).

#### FO2 : Construction d'un pipeline de donn√©es
> **Def: Pipeline de donn√©es** : Un pipeline de donn√©es est un concept informatique faisant r√©f√©rence aux √©tapes de transport des donn√©es d‚Äôune source vers une cible. Parmi ces √©tapes, on peut y retrouver la collecte, l'organisation ou encore la transformation des donn√©es.

> **Def: Pipeline ETL**: Un pipeline ETL est un pipeline de donn√©es sp√©cial comprenant uniquement des √©tapes de collecte (E), de transformation (T) et de chargement (L) des donn√©es vers une cible.

> **Def: Orchestrateur**: Un orchestrateur de pipeline est un outil permettant de chainer les √©tapes d'une pipeline et de g√©rer les d√©pendances entre √©tapes.

- Votre pipeline sera compos√©e des √©tapes suivantes :
    - Collecte de la source de donn√©es,
    - Quelques √©tapes de transformation (nettoyage, typage, encodage, etc..),
    - Chargement dans la base de donn√©es.
- Chacune des √©tapes de votre pipeline devra √™tre g√©n√©rique et r√©utilisable. Dans l'id√©al, chaque √©tape doit correspondre √† une fonction.
- Le plan d'ex√©cution de la pipeline sera d√©fini dans un fichier de configuration (en json ou yaml). Ce fichier contiendra la liste des √©tapes √† ex√©cuter ainsi que leurs param√®tres. Il devra lu et interpr√©t√© par Python lors d'une ex√©cution de la pipeline. Vous pouvez utiliser les librairies [json](https://docs.python.org/3/library/json.html) ou [PyYAML](https://pyyaml.org/wiki/PyYAMLDocumentation) pour cela.
- Vous pourrez ainsi cr√©er plusieurs configurations diff√©rentes pour votre pipeline.
- L'ex√©cution de d'une pipeline se fera via l'interface en ligne de commande. Le chemin vers votre fichier de configuration pourra √™tre plac√©e en argument de la commande en utilisant la libraire [argparse](https://docs.python.org/3/library/argparse.html).
- L'orchestration des √©tapes de votre pipeline pourra se faire avec des outils d√©di√©s tel que [Pandas pipe](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.pipe.html) ou [genpipes](https://pypi.org/project/genpipes/).

![](https://i.imgur.com/ELNv3SJ.png)

- Attention √† ne pas introduire de doublons dans la base de donn√©es! Vous pouvez utilisez le champ `date` comme point de rep√®re.

#### FO3 : Mise en place d'une API et exposition de r√©sultats simples

- Mettez en place une API REST en utilisant [FastAPI](https://fastapi.tiangolo.com/) ou [Flask](https://flask.palletsprojects.com/en/2.2.x/).
- Ajoutez une route nomm√©e `/count-feat` qui retourne le r√©sultat de la requ√™te suivante :
    - Le nombre de featuring par artiste et par mois. Un featuring est comptabilis√© lorsque l'artiste est `primary_artist` ou `featured_artist`.
- Ajoutez une route nomm√©e `/mean-feat` qui retourne le r√©sultat de la requ√™te suivante :
    - La [moyenne mobile](https://fr.wikipedia.org/wiki/Moyenne_mobile) du nombre total de featuring par jour avec une fen√™tre de 5.
- Retournez les r√©sultats au format json.

#### FO4 : Acc√©l√©ration des appels √† l'API

Pour permettre √† votre API de supporter un grand nombre de requ√™te simultan√©es, vous devez impl√©menter au moins l'une des deux solutions suivantes.

**Pr√©-calcul**

Vous pouvez acc√©l√©rer le calcul d'une requ√™te en pr√©-calculant tout ou partie des r√©sultats.

- Calculez tout ou partie de la requ√™te et stockez l√† dans un fichier `csv` ou `json` que l'on appelle une **vue**.
- Modifiez votre API afin qu'elle tire profit de ce fichier.
- Veillez √† tenir √† jour votre vue en effectuant des synchronisations r√©guli√®res avec la base de donn√©es.

![](https://i.imgur.com/N4nx2xq.png)

**Cache**

Vous pouvez acc√©l√©rer le calcul d‚Äôune requ√™te en cachant ses r√©sultats en m√©moire.

> **Def: Cache:** Une m√©moire cache une m√©moire qui enregistre temporairement des copies de donn√©es provenant d'une source, afin de diminuer le temps d'un acc√®s ult√©rieur (en lecture) √† ces donn√©es.

- Lors du premier appel la requ√™te n'existe pas dans le cache. Elle est donc calcul√©e √† partir des donn√©es de la base de donn√©es. Le r√©sultat est renvoy√© √† l'utilisateur et stock√© dans le cache pour anticiper les futurs appels.
- Lors du second appel (et des suivants), le r√©sultat de la requ√™te est d√©j√† pr√©sents dans le cache. Le r√©sultat est renvoy√© de mani√®re quasi instantan√©e √† l'utilisateur.
- Vous pouvez utilisez la librairie `cachetools` pour impl√©menter un cache.

![](https://i.imgur.com/hMKqXe5.png)


### Fonctionnalit√©s avanc√©es

Les fonctionnalit√©s difficiles seront davantage valoris√©es que les fonctionnalit√©s faciles.

#### FA1 [difficult√© : facile] : Impl√©mentation d'un syst√®me d'authentification √† l'API

Pour s√©curiser votre API, implementez un syst√®me d'authentification. L'utilisateur devra √™tre muni d'un token pour pouvoir utiliser votre service.

#### FA2 [difficult√© : facile] : Utilisation du workflow Gitflow

Lorsque vous travaillez en √©quipe sur un projet de d√©veloppement, adoptez le [framework Gitflow](https://www.atlassian.com/fr/git/tutorials/comparing-workflows/gitflow-workflow) pour une meilleure gestion des branches.

#### FA3 [difficult√© : moyen] : Exposez un mod√®le de Machine Learning

Offrez la possibilit√© √† vos utilisateurs d'obtenir la pr√©diction du nombre de featuring total pour les prochains mois.

:heavy_exclamation_mark: Vous ne serez pas √©valu√© sur la qualit√© de votre mod√®le.

- Entrainez un mod√®le de pr√©vision de s√©rie temporelle basique √† pr√©voir le nombre de featuring total.
- Vous pouvez utiliser la m√©thode du [lissage exponentiel](https://fr.wikipedia.org/wiki/Lissage_exponentiel#:~:text=Le%20lissage%20exponentiel%20est%20une,partant%20de%20la%20valeur%20initiale.) pour g√©n√©rer des pr√©visions en utilisant la librairie [`statsmodels`](https://www.statsmodels.org/dev/examples/notebooks/generated/exponential_smoothing.html).
- Apr√®s l'avoir entrain√©, s√©rialisez le mod√®le en utilisant la librairie [pickle](https://docs.python.org/3/library/pickle.html) afin de le sauvegarder dans un fichier.
- Ajoutez une route nomm√©e `/predict-feat` √† votre API qui retourne une pr√©diction du mod√®le.
- Ajoutez la possibilit√© de d√©clancher un r√©-entrainement du mod√®le avec l'interface en ligne de commande.

#### FA4 [difficult√© : moyen] : Mise en place d'une chaine d'int√©gration continue

> **Def: Int√©gration Continue:** Consiste √† int√©grer les changements apport√©s au code informatique d'un projet logiciel de fa√ßon continuelle, afin de d√©tecter et de corriger imm√©diatement les √©ventuelles erreurs.

Mettez en place une chaine d'int√©gration continue basique avec [Gitlab-CI](https://docs.gitlab.com/ee/ci/quick_start/) ou [Github Actions](https://docs.github.com/en/actions/quickstart).

Votre chaine d'int√©gration continue pourra comporter deux √©tapes : 
- une √©tape d'ex√©cution des tests avec la librairie [`unittest`](https://docs.python.org/3/library/unittest.html) ou [`pytest`](https://docs.pytest.org/en/7.1.x/contents.html)
- une √©tape de qualit√© du code avec la librairie [`flake8`](https://flake8.pycqa.org/en/latest/)

#### FA5 [difficult√© : √©lev√©e] : Conteneurisez votre application

> **Def: Conteneurisation:** Consiste √† rassembler le code du logiciel et tous ses composants (biblioth√®ques, frameworks et autres d√©pendances) de mani√®re √† les isoler dans leur propre ¬´ conteneur ¬ª.

Conteuneurisez l'ensemble de votre solution en utilisant [Docker](https://fastapi.tiangolo.com/deployment/docker/).



## API cadastrale üó∫üèòüèó

Tuteur : Thierry Math√©

### Le contexte

Le service statistique du minist√®re de la Transition √©cologique g√®re ¬´ Sitadel ¬ª, le r√©pertoire des autorisations d‚Äôurbanismes. √Ä partir de ce r√©pertoire le service publie des chiffres sur le nombre de permis de construire (PC) autoris√©s et le nombre de logements dont la construction est autoris√©e sur chaque commune.
Une demande de PC doit se faire sur un terrain s‚Äô√©tendant sur une ou plusieurs parcelles cadastrales contigu√´s. Il est possible que ces parcelles se trouvent sur des communes diff√©rentes voire sur des d√©partements diff√©rents. Lorsque c‚Äôest le cas, une demande de PC doit √™tre faite sur chaque commune concern√©e. Cette situation peut donc engendrer des doublons au niveau du d√©compte des PC et des logements autoris√©s.
Ce ph√©nom√®ne existe mais √† l‚Äôheure actuelle on ignore s‚Äôil est fr√©quent et si les erreurs engendr√©es ont un poids notable sur les chiffres publi√©s au niveau communal. Le but de ce projet est d‚Äôapporter des outils qui aideront √† l‚Äô√©tude de ce ph√©nom√®ne.
Pour d√©tecter les PC √† cheval sur plusieurs communes, il convient de conna√Ætre les parcelles cadastrales qui sont en bordure de commune, puis de trouver les PC se trouvant sur ces parcelles et enfin d√©terminer lesquels de ces PC se trouvent sur des parcelles contigu√´s afin de voir s‚Äôil s‚Äôagit de la m√™me construction ou non.

### Les d√©veloppements obligatoires 

Le projet a pour but premier de cr√©er une API capable de r√©pondre aux requ√™tes suivantes :

- quelles sont les communes ayant des parcelles contigu√´s √† une commune donn√©e ?
- quelles sont les parcelles en limite d‚Äôune commune donn√©e ?
- quelles sont les parcelles contigu√´s √† une parcelle donn√©e ?

Pour cela il faudra exploiter les fichiers geoJSON du site : <https://cadastre.data.gouv.fr/datasets/cadastre-etalab>

Ce site contient des fichiers communaux des limites des parcelles adastrales. Chaque parcelle est d√©limit√©e par un polygone. Deux parcelles sont contigu√´s si elles partagent un m√™me segment.

Le premier travail sera donc de cr√©er √† partir de ces fichiers une base de donn√©es qui stockera les communes et les parcelles contigu√´s. Pour des raisons de volum√©trie des donn√©es, ce travail ne sera effectu√© que sur un d√©partement, mais le programme de construction de la base et la base elle-m√™me devront √™tre capables de traiter plusieurs d√©partements. De plus, le programme de construction de la base devra √™tre facilement param√©trable pour changer la zone g√©ographique couverte et l‚Äôann√©e de g√©ographie.
Le second travail sera la construction de l‚ÄôAPI qui r√©pondra aux requ√™tes pr√©-cit√©es en exploitant la base de donn√©es.

### D√©veloppement optionnel

Dans un second temps, les groupes qui en auront la possibilit√© pourront faire des recherches sur les PC √† partir des donn√©es Sitadel disponibles au format CSV sur le site du minist√®re : <https://www.statistiques.developpement-durable.gouv.fr/liste-des-permis-de-construire-et-autres-autorisations-durbanisme>
√âtant donn√© une commune de r√©f√©rence, il faudra rechercher les communes qui lui sont contigu√´s et extraire les PC de toutes ces communes. En suite il faudra dresser la liste des parcelles en limite de la commune de r√©f√©rence et de toutes les parcelles qui leur sont contigu√´s dans les autres communes et lister les PC pr√©sents sur ces parcelles. Enfin il faudra rapprocher les PC contigu√´s

Ce programme de recherche devra donc fournir en sortie cette liste de PC contigu√´s qui sera ensuite analys√©e pour voir s‚Äôil s‚Äôagit d‚Äôun m√™me projet de construction ou pas.

## La pyramide et le philosophe :book: :link: 

Tuteur : Suliac Le Guillou

### Pr√©sentation

Apr√®s le succ√®s des Worlde et Sutom cette ann√©e, je vous propose de revisiter un autre jeu t√©l√©vis√©: Pyramide.
Dans ce jeu, le maitre des mots doit faire deviner un mot √† son √©quipier en lui donnant pour indice des synonymes.

Pour renouveler ce concept, je vous propose de coupler ce concept avec un rare jeux de l'internet: le philosophe.
Ici vous devez choisir un article au hasard sur Wikipedia et naviguer les liens hypertext jusqu'a tomber sur la
page de [philosophie]([https:/](https://fr.wikipedia.org/wiki/Philosophie)/)

Vous aurez ainsi √† construire une version pour un joueur de Pyramide en vous aidant de Wikipedia: votre programme devra
aller chercher un article au hasard sur la fameuse encyclop√©die et distribuer des indices au joueur pour lui faire deviner

### Fonctionnalit√©s de base

- Construire votre √©nigme
- Filtrer les indices
- Des tests unitaires
- Une interface console simple √† destination

### Fonctionnalit√©s avanc√©es

- Filtrer les articles injouable
- Reconnaitre des cat√©gories pour donner plus d'indices (biologie, math√©matique, jeux vid√©o)
- Un tableau des scores
- Des variantes de jeux
- Une version deux joueurs
- Selection de language


### Les outils

- Wikipedia
- Base Postgres
- Git
- Vscode

