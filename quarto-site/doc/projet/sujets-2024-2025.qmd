---
title: "Sujets de projet informatique 2A"
description: "Sujets 2024-2025"
format:
  html:
    toc: true
    toc-location: left
    toc-depth: 2
from: markdown+emoji
number-sections: true
number-depth: 2
---

## Fennec on the road :rocket: 

Tuteur : Adrien Lacaille

### Pr√©sentation

Dans ce projet, vous aurez l'opportunit√© de plonger dans le monde fascinant des statistiques et des comp√©titions sur le jeu vid√©o Rocket League. En utilisant l'API <https://zsr.octane.gg/>{target="_blank"}, vous allez d√©velopper une application d√©di√©e aux amateurs d'e-sport et aux fans de ce jeu vid√©o comp√©titif. Le but de cette application est de fournir une plateforme compl√®te et interactive permettant aux utilisateurs de consulter des statistiques d√©taill√©es des matchs, de suivre les prochains √©v√©nements, de g√©rer des tournois personnalis√©s et d'enrichir l'exp√©rience utilisateur par des fonctionnalit√©s avanc√©es comme l'agr√©gation de donn√©es et les syst√®mes de paris.

### Fonctionnalit√©s de base

Votre application devra int√©grer les fonctionnalit√©s essentielles suivantes :

- **F1 :** Permettre aux utilisateurs de consulter des statistiques d√©taill√©es sur les matchs d√©j√† disput√©s, incluant les scores, les performances des √©quipes et des joueurs
- **F2 :** Proposer un calendrier des futurs matchs avec des informations telles que les √©quipes en comp√©tition, les dates et heures des rencontres, et les lieux √©ventuels.
- **F3 :** Mettre en place un syst√®me s√©curis√© d‚Äôauthentification permettant aux utilisateurs autoris√©s d'ajouter ou de modifier des informations relatives aux matchs.
- **F4 :** Offrir la possibilit√© de cr√©er et de g√©rer des tournois personnalis√©s, avec des fonctionnalit√©s pour inscrire des √©quipes, d√©finir des calendriers de match, et suivre les r√©sultats en temps r√©el.



### Fonctionnalit√©s optionnelles

Pour aller au-del√† des exigences de base et rendre votre application encore plus attractive, vous pouvez int√©grer les fonctionnalit√©s optionnelles suivantes :

- **FO1 :** Permettre aux utilisateurs d‚Äôobtenir des analyses consolid√©es par √©quipe et par joueur, en agr√©geant les donn√©es sur les performances individuelles et collectives afin de fournir des indices de performances.
- **FO2 :** D√©velopper un syst√®me de paris interactif o√π les utilisateurs peuvent parier sur les r√©sultats des matchs et des tournois, ajoutant ainsi une dimension ludique et comp√©titive √† l'application.

### Conseils / Outils ...

Pour maximiser votre exp√©rience et la r√©ussite de ce projet, voici quelques conseils et outils essentiels :

#### Technologies √† utiliser :

- Utilisez une base de donn√©es PostgreSQL pour stocker et g√©rer vos donn√©es.
- D√©veloppez votre application en Python.
- Concentrez-vous uniquement sur une application en ligne de commande (CLI) sans interface web.

#### Qualit√© du code :

- R√©alisez des tests unitaires pour garantir la fiabilit√© de votre code.
- Mesurez la couverture de code (coverage) pour vous assurer que tous les aspects de votre application sont test√©s.
- Utilisez des outils de linting pour maintenir un code propre et conforme aux standards.

#### Versionnement et int√©gration continue :

- Versionnez votre projet sur Git pour suivre les modifications et collaborer efficacement.
- Mettez en place une int√©gration continue (CI) pour automatiser vos tests.

#### Organisation et suivi :

- Organisez un point hebdomadaire pour suivre vos progr√®s, discuter des obstacles rencontr√©s et ajuster votre plan de travail en cons√©quence. Cela vous permettra de progresser r√©guli√®rement et de mener √† bien ce projet.

#### Initiatives et cr√©ativit√© :

- Prenez des initiatives pour r√©aliser d'autres fonctionnalit√©s optionnelles et apporter votre touche personnelle au projet. Votre cr√©ativit√© et votre capacit√© √† aller au-del√† des attentes de base seront valoris√©es.


---

## The DM's Sound Buddy :musical_note: 

Tuteur : Cyriel Mallart

### Pr√©sentation

Lors de ce projet, vous allez cr√©er une application de gestion de banque de sons. Le but final est de pouvoir g√©rer des effets sonores pour cr√©er une ambiance lors de parties de jeu de r√¥le ou autre storytelling. 
Le but est donc de pouvoir rechercher des effets sonores, et en cr√©er des playlists pour les jouer de fa√ßon simple lors d'une partie de jeu de r√¥le. Les sons seront issus de Freesound, qui propose une API de recherche de sons bas√©e sur des mots-cl√©s. Votre r√¥le sera d'identifier les besoins des utilisateur-ice-s, de modeliser l'application en cons√©quence et de d√©cider comment g√©rer le stockage des sons et des informations sur les sons. Les fonctionnalit√©s de bases ci-dessus, et au moins une fonctionnalit√© optionelle au choix sont attendues. 

API : <https://freesound.org/apiv2/>{target="_blank"}

Site web Freesound (pour vous faire une id√©e des possibilit√©s): <https://freesound.org/>{target="_blank"}

### Fonctionnalit√©s de base

- F1 : Cr√©ation d'utilisateurs, de playlists
- F2 : Recherche de sons et t√©l√©chargement (sans redondances !)
- F3 : Lecture des sons lors d'une partie
- F4 : Consultation et copie des playlists d'autres utilisateur.ice.s

### Fonctionnalit√©s optionnelles

- FO1 : Recherche avanc√©e de sons par similarit√© avec le reste de la playlist, termes connexes, commentaires des utilisateur.ice.s Freesound ou information de popularit√©
- F02 : Choix de lecture r√©p√©t√©e √† des temps al√©atoires (bruits de nature, de grincement de porte, etc.)
- F03 : Jeu d'un son en boucle
- F04 : Jeu de plusieurs sons en simultan√©

### Conseils / Outils ...

- La librairie Nava est conseill√©e pour jouer les sons, mais tout autre librairie est autoris√©e si vous avez une autre pr√©f√©rence.
- Au vu des t√©l√©chargements n√©cessaires  (t√©l√©chargement de certains sons de base notamment), un script d'initialisation sera attendu dans le code.
- Une suite de tests est aussi attendue, mais les tests feront partie int√©grante des techniques que nous apprendons ensemble et cela fera moins mal que vous ne le pensez ;)
- Le produit final sera un menu interactif en console.  Aucune interface graphique n'est attendue, et une interface autre que console ne sera donc pas prise en compte pour l'√©valuation du projet. 
- Pour les fonctionnalit√©s optionnelles, toute initiative ou proposition originale sera valoris√©e, si valid√©e avec votre tuteur.

## My Kitchen üë®‚Äçüç≥

Tuteur : Bryan Truwant

### Pr√©sentation

Ce projet consiste en le d√©veloppement d'une application de recettes de cuisines. Pour cela vous devrez utiliser les donn√©es des recettes via l'API [TheMealDB](https://www.themealdb.com/){target="_blank"}. Vous devrez d√©cider quelles donn√©es conserver ou non dans votre base de donn√©es PostgreSQL pour les besoins de votre application. Vous cr√©erez aussi un mod√®le de donn√©es adapt√© aux fonctionnalit√©s que vous allez d√©velopper allant de l'affichage d'une recette √† la suggestion de recettes en fonction des go√ªts de l'utilisateur en passant par la gestion d'une liste de courses.

### Fonctionnalit√©s de base

- F1 : Afficher la liste des recettes
- F2 : Afficher une recette (Au minimum : Titre, ingr√©dients, consignes, note, commentaires)
- F3 : Recettes favorites : Ajout, visualisation, suppression
- F4 : Avis sur les recettes : Notes et commentaires

### Fonctionnalit√©s optionnelles

- FO1 : Recherche des recettes par ingr√©dients
- FO2 : Liste de courses : Ajout des ingr√©dients d'une recette √† la liste de courses, visualisation de la liste et suppression des √©l√©ments achet√©s
- FO3 : Ingr√©dients favoris et Ingr√©dients non d√©sir√©s (Ajout, visualisation, suppression)
- FO4 : Proposer des recettes qui ne sont pas dans les recettes favorites contenant au moins un ingr√©dient favori et aucun ingr√©dient non d√©sir√©

---

## StreamSmart :movie_camera:

Tuteur : Alexandre Bidon

### Pr√©sentation

**Quel abonnement streaming choisir pour ne rater aucun de mes films pr√©f√©r√©s ?**
Ce projet vise √† d√©velopper un outil comparatif qui analyse les catalogues de diff√©rentes plateformes et recommande l'abonnement le plus adapt√© √† vos go√ªts cin√©matographiques. L'utilisateur cr√©e sa watchlist et l'application lui retourne l'abonnement qui correspond le mieux √† votre besoin (abonnement le plus rentable, abonnement qui propose le plus de films dans la watchlist, etc).

### Fonctionnalit√©s de base

- F1 : Gestion des utilisateurs (Cr√©er un utilisateur, Se connecter, Supprimer un utilisateur)
- F2 : Rechercher un film ou une s√©rie par son nom
- F3 : Pour un film ou une s√©rie, voir la liste des plateformes sur lequel il/elle est disponible
- F4 : Gestion de watchlist (Cr√©er une watchlist, Ajouter un film √† une watchlist, Supprimer une watchlist)
- F5 : Pour une watchlist, proposer l'abonnement de streaming le plus rentable (crit√®re libre, par exemple l'abonnement avec le meilleur ratio prix/nombre de films propos√©s ou l'abonnement qui propose le + de films)

### Fonctionnalit√©s optionnelles

- FO1 : Gestion des diff√©rents tier d'abonnements (par exemple rajouter un crit√®re avec ou sans pub, choisir sa r√©solution d'√©cran)
- FO2 : Gestion de la localisation de l'utilisateur (Les plateformes ne proposent pas les m√™mes films selon les pays)
- FO3 : Gestion des abonnements plus complexes (par exemple l'offre rat+ de Canal qui propose plusieurs services de streaming en un)

### Conseils / Outils ...

Pour r√©aliser ce projet, vous utiliserez l'API de **The Movie Database** :

- API : <https://www.themoviedb.org/>{target="_blank"}
- Documentation de l'API: <https://developer.themoviedb.org/reference/intro/getting-started>{target="_blank"}

Cette API propose d√©j√† un outil pour cr√©er des watchlists, vous devrez cependant fournir votre propre impl√©mentation.


---

## Collection de mangas :books:

Tutrice : Lissa Chen

### Pr√©sentation

Ce projet vous demandera de cr√©er une application qui permettra aux utilisateurs de stocker et de partager des collections de mangas. Les utilisateurs pourront aussi donner leurs avis sur les mangas de leur choix.

Il faudra tenir des contraintes de requ√™tes par secondes √† l'API.

API √† utiliser : [Jikan API](https://docs.api.jikan.moe/){target="_blank"}


### Fonctionnalit√©s de base

En tant qu'utilisateur, je veux pouvoir :

1. M'inscrire/connecter/d√©connecter/d√©sinscrire √† l'application (gestion des utilisateurs et des informations qui leur sont propres).
2. Afficher les informations d'un manga en l'ayant recherch√© par son titre.
4. R√©diger/Mettre √† jour/Supprimer mes avis sur un manga et consulter ceux des autres utilisateurs.
3. Cr√©er/Mettre √† jour/Supprimer des collections "coh√©rentes" de mangas, et consulter celles des autres utilisateurs.
La collection devra contenir : 
    - le titre de ma collection
    - la description de ma collection
    - les titres des mangas de ma collection
3. Cr√©er/Mettre √† jour/Supprimer une collection des mangas que je poss√®de "physiquement", et consulter celle des autres utilisateurs.
La collection devra contenir pour chaque manga : 
    - le titre du manga
    - le num√©ro du dernier tome acquis
    - le(s) num√©ro(s) des tomes manquants par rapport au dernier tome acquis de la s√©rie (ensemble des tomes d'un m√™me titre)
    - le status de la s√©rie, c'est-√†-dire si je continue d'acheter les tomes ou non (reading/dropped) 


Exemple de collection des mangas que je poss√®de "physiquement" : 


| Titre | N¬∞ du dernier tome acquis | N¬∞ des tomes manquants | Status |
| -------- | -------- | -------- | ------ |
| One Piece     | 107     | 106 | En cours |
| One Punch Man | 18 | 16, 17 | En cours |
| Spy x Family | 3 | 0 | Dropped | 

Exemple de collection "coh√©rente" : 

Titre de ma collection : Mangas pr√©f√©r√©s
Description de ma collection : Liste de mes mangas pr√©f√©r√©s
Mangas de ma collection : Oshi no ko, Les Carnets de l'Apothicaire, March comes in like a lion

### Fonctionnalit√©s optionnelles
- Cr√©er/Modifier/Supprimer des tier list de mangas
- Acc√©der aux informations d'un manga depuis une collection
- Toute autre fonctionnalit√© que vous trouvez sympa

### Conseils / Outils ...
Une application avec les fonctionnalit√©s de base, sans bug et avec un code clair sera plus valoris√©e qu'une application avec des fonctionnalit√©s optionnelles mais un code "brouillon" et des bugs.
Favorisez un code maintenable. 

---

## Vous √™tes ici :dart: 

> l'API qui vous dit o√π vous √™tes... enfin si c'est en France

Tuteur : Thierry Math√© 

### Pr√©sentation

Comme vous le savez la France est divis√©e en plusieurs zonages : zonages administratifs, zonages d'√©tudes, ...
Le but du projet est de cr√©er une API qui permettra de :

1. Donner des informations pour une de ces subdivisions, par exemple quel est le d√©partement 27, ou quelle est la commune 13055 ?
2. Dire dans quelle zone se trouve un point rep√©r√© par ses coordonn√©es g√©ographiques. Par exemple: mais dans quel Iris se trouve les coordonn√©es GPS 48.114503, -1.681217 (et d'ailleurs qu'est que c'est qu'un Iris ???...) ?
3. Comme le 2. mais pour une liste de points. Le r√©sultat sera alors un fichier (csv, xlsx, json, ... c'est vous qui voyez) qui sera transmis dans la r√©ponse de la requ√™te. 


### Fonctionnalit√©s de base

- F1 : API-Rest de consultation donnant une URI pour chaque zone d'un zonage. Par exemple l'URI `monAPI/zonage/departement/2023/35` permettra d'avoir les informations pour le d√©partement de l'Ille et Vilaine en 2023 et l'URI `monAPI/zonage/commune/2023/69123` les informations sur la commune de Lyon en 2023,
- F2 : Endpoint permettant la localisation d'un point par exemple `monAPI/ousuisje/departement?lat=48.114503&long=-1.681217&annee=2023` renvoie le d√©partement o√π se trouve le point dont les coordonn√©es sont indiqu√©es (latitude et longitude),
- F3 : Endpoint permettant de transmettre une liste de points dans une requete `POST` qui renvoie les m√™mes informations pour chacun des points sous la forme d'un fichier.


### Fonctionnalit√©s optionnelles

- FO1 : Ajouter des zonages
- FO2 : Ajouter des ann√©es de g√©ographies (et oui la g√©ographie change tous les ans !)
- FO2 : Ajouter d'autres formats de retour pour la F3, voire m√™me retourner une carte au format jpeg ou SVC!...

**Remarques**: M√™me si ces fonctionnalit√©s ne sont pas r√©alis√©es, il faudra construire l'application de telle sorte qu'elle puisse les accueillir facilement.

### Conseils / Outils ...

Pour r√©aliser ce projet vous vous appuierez sur le [code officiel g√©ographique](https://www.insee.fr/fr/information/2560452){target="_blank"} de l'Insee et sur les [contours de ces diff√©rents zonages](https://geoservices.ign.fr/adminexpress){target="_blank"} donn√©s par l'IGN au format shape.

Enfin pour ceux qui se demanderaient ce que c'est qu'un [Iris](https://www.insee.fr/fr/information/7708995){target="_blank"} et √† quoi ils [ressemblent](https://geoservices.ign.fr/contoursiris){target="_blank"}...

---


## R√©seau social cin√© üçø

Tuteur : Cl√©ment Valot

### Pr√©sentation

L'inspiration de ce sujet est [SensCritique](https://www.senscritique.com/){target="_blank"}, un site communautaire o√π les utilisateurs notent et critiquent des films (et s√©ries, livres... Mais on va centrer le sujet sur les films üé•)

Le projet va √™tre pens√© comme une application web, qui va exposer une API REST, qu'on pourra tester avec un client API (e.g. Postman ou Bruno).

La base de donn√©es de films sera construite en s'interfa√ßant avec l'API [TheMovieDB](https://www.themoviedb.org/){target="_blank"}. Le reste de la base de donn√©es devra √™tre aliment√© par vos soins. 

### Fonctionnalit√©s de base

- F1 : Inscription et authentification s√©curis√©e
- F2 : Rechercher un film et lui attribuer une note sur 10 (modifiable et effa√ßable)
- F3 : Obtenir des informations sur un film (Informations techniques, note moyenne des utilisateurs du site, note moyenne de mes √©claireurs...)
- F4 : Ajouter un autre utilisateur √† ma liste d'"√©claireurs" et obtenir des informations sur sa collection de films (Nombre de films vus, notes sur chacun des films, films vus en commun...)

### Fonctionnalit√©s optionnelles

- FO1 : Ajout de commentaires ou critiques sur les films
- FO2 : Algorithme de recommandation bas√© sur les films d√©j√† vus et not√©s
- FO3 : Les axes d'extension de l'application sont nombreux, vous avez un site entier existant pour puiser l'inspiration, toute fonctionnalit√© int√©ressante peut √™tre sugg√©r√©e √† votre tuteur üòä
- FO4 : Trouver un nom qui claque pour l'application, votre tuteur ne brille pas par sa cr√©ativit√© 

### Conseils / Outils...

Un template de projet sera fourni, avec une configuration d'environnement de d√©veloppement √† respecter imp√©rativement, ainsi que des suggestions de librairies √† utiliser pour la DB/API. 

---

## Spotify Analytics üì∂

Tuteur : Samuel Goutin

### Pr√©sentation

Ce projet vise √† cr√©er un outil permettant l'analyse de la fr√©quentation d'un site de musique (de type Spotify). Pour cela, nous avons √† notre disposition le flux d'√©v√©nements de navigation du site. Il nous informe en temps r√©el de chaque action r√©alis√©e sur le site.
L'outil devra permettre de mieux comprendre *par qui*, *quand* et *comment* le site est consult√© en r√©pondant √† des questions strat√©giques.

### Fonctionnalit√©s de base

L'outil devra proposer un webservice permettant de r√©pondre aux questions suivantes :

- F1 : Quelle est la dur√©e moyenne d'une session sur le site ?
- F2 : Quelle est la localisation g√©ographique des utilisateurs du site ?
- F3 : Quels sont les artistes les plus √©cout√©s ?

La granularit√© temporelle devra √™tre un param√®tre ajustable pour chaque question. Par exemple, il devra √™tre possible d'obtenir la liste des artistes les plus √©cout√©s pour chaque *minute*, *heure*, *jour* ou *mois*.

### Fonctionnalit√©s optionnelles

- FO1 : Proposez une visualisation graphique dynamique pour les questions F1, F2 et F3. Pour cela, vous pouvez utiliser les biblioth√®ques [streamlit](https://docs.streamlit.io/){target="_blank"} ou [dash](https://dash.plotly.com/){target="_blank"}.
- FO2 : Mettez en place une cha√Æne d'int√©gration continue (CI) pour automatiser vos tests et le packaging de votre projet avec Docker.