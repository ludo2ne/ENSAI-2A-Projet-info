[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Projet informatique 2e ann√©e",
    "section": "",
    "text": "D√©doublement du cours (une partie de la promo suivra le cours et les TP en Anglais)\nSupports de cours et de TP en Anglais\nUtilisation du Datalab\n\nLa VM restera en backup\n\nMaj des TP2, 3, 4 (s‚Äôappuyer sur le template pour dev des fonctionnalit√©s simples)"
  },
  {
    "objectID": "index.html#√©volution-potentielles-pour-2025",
    "href": "index.html#√©volution-potentielles-pour-2025",
    "title": "Projet informatique 2e ann√©e",
    "section": "",
    "text": "D√©doublement du cours (une partie de la promo suivra le cours et les TP en Anglais)\nSupports de cours et de TP en Anglais\nUtilisation du Datalab\n\nLa VM restera en backup\n\nMaj des TP2, 3, 4 (s‚Äôappuyer sur le template pour dev des fonctionnalit√©s simples)"
  },
  {
    "objectID": "index.html#le-projet-info-2a",
    "href": "index.html#le-projet-info-2a",
    "title": "Projet informatique 2e ann√©e",
    "section": "Le projet info 2A",
    "text": "Le projet info 2A\n\nPr√©sentation du projet aux tutrices et tuteurs\nPr√©sentation du projet aux √©l√®ves\nNotice √©l√®ves\n\n\nObjectifs\nLes √©l√®ves de deuxi√®me ann√©e de l‚ÄôENSAI participent √† la r√©alisation du projet informatique par groupes de 4 ou 5 √©l√®ves.\nCe projet permet d‚Äôeffectuer un approfondissement et une mise en pratique des connaissances acquises lors des enseignements informatiques de 1√®re ann√©e.\nLe travail demand√© consiste √† construire une application permettant de r√©pondre √† la probl√©matique d‚Äôun sujet propos√©. Ce travail se d√©compose en 2 grandes phases :\n\n√âtude pr√©alable et Conception g√©n√©rale de l‚Äôapplication\n\n\nd√©crire la solution envisag√©e\nplanifier les grandes phases de la r√©alisation\nd√©crire les exigences fonctionnelles par la mod√©lisation\n\n\nR√©alisation\n\n\nmise en place de la base de donn√©es\nd√©veloppements, tests, documentation"
  },
  {
    "objectID": "index.html#le-cours-de-compl√©ments-dinformatique",
    "href": "index.html#le-cours-de-compl√©ments-dinformatique",
    "title": "Projet informatique 2e ann√©e",
    "section": "Le cours de Compl√©ments d‚Äôinformatique",
    "text": "Le cours de Compl√©ments d‚Äôinformatique\n\n\n\n\n\n\nNote\n\n\n\nLe but de ce cours est de vous aider √† mener √† bien le projet informatique en vous apportant les comp√©tences et les outils n√©cessaires.\n\n\nCours 2023-2024\n\nNotions √©voqu√©es\n\nGit\nRappels POO\nTests unitaires\nWebservices\nCommuniquer avec une base de donn√©es\nUtiliser les logs\n\n\n\nLes TP\n4 TP de 3h permettent de mettre en applications les notions vues en cours. il y a √©galement dans ces TP de nombreux √©l√©ments r√©utilisables en projet.\nLe code des TP est disponible sur ce d√©p√¥t"
  },
  {
    "objectID": "index.html#bibliographie",
    "href": "index.html#bibliographie",
    "title": "Projet informatique 2e ann√©e",
    "section": "Bibliographie",
    "text": "Bibliographie\n\nMise en production des projets de data science, Romain Avouac & Lino Galiana (ENSAE)\nRefactoring.Guru"
  },
  {
    "objectID": "doc/divers/sigles.html",
    "href": "doc/divers/sigles.html",
    "title": "Sigles Usuels",
    "section": "",
    "text": "üöß"
  },
  {
    "objectID": "doc/divers/sigles.html#principes",
    "href": "doc/divers/sigles.html#principes",
    "title": "Sigles Usuels",
    "section": "Principes",
    "text": "Principes\n\n\n\n\n\n\n\n\nSigle\nSignification\nDescription\n\n\n\n\nDRY\nDon‚Äôt Repeat Yourself\n√âvitez les duplications, √©crivez des fonctions\n\n\nKISS\nKeep It Simple, Stupid\nPrivil√©giez les solutions simples et directes\n\n\nYAGNI\nYou Aren‚Äôt Gonna Need It\nN‚Äôimpl√©mentez pas des fonctionnalit√©s tant qu‚Äôelles ne sont pas n√©cessaires\n\n\nTDA\nTell, Don‚Äôt Ask\nDemandez aux objets d‚Äôeffectuer des actions plut√¥t que de leur demander leur √©tat et de prendre des d√©cisions"
  },
  {
    "objectID": "doc/divers/sigles.html#bases-de-donn√©es",
    "href": "doc/divers/sigles.html#bases-de-donn√©es",
    "title": "Sigles Usuels",
    "section": "Bases de donn√©es",
    "text": "Bases de donn√©es\n\n\n\n\n\n\n\n\nSigle\nSignification\nDescription\n\n\n\n\nACID\nAtomicit√©, Coh√©rence, Isolation, Durabilit√©\nGarantit la fiabilit√© des transactions de bases de donn√©es\n\n\nCRUD\nCreate, Read, Update, Delete\nOp√©rations de base pour la gestion des donn√©es"
  },
  {
    "objectID": "doc/divers/sigles.html#r√©seau-et-protocoles",
    "href": "doc/divers/sigles.html#r√©seau-et-protocoles",
    "title": "Sigles Usuels",
    "section": "R√©seau et protocoles",
    "text": "R√©seau et protocoles\n\n\n\n\n\n\n\n\nSigle\nSignification\nDescription\n\n\n\n\nSSO\nSingle Sign-On (Authentification unique)\nPermet √† un utilisateur de s‚Äôauthentifier une seule fois pour acc√©der √† plusieurs applications\n\n\nSSH\nSecure Shell\nProtocole s√©curis√© permettant d‚Äôacc√©der √† un ordinateur distant et d‚Äôex√©cuter des commandes\n\n\nHTTP\nHypertext Transfer Protocol\nProtocole permettant de transf√©rer des pages web entre un serveur et un client\n\n\nFTP\nFile Transfer Protocol\nProtocole de communication utilis√© pour transf√©rer des fichiers"
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html",
    "href": "doc/projet/sujets-2024-2025.html",
    "title": "Sujets de projet informatique 2A",
    "section": "",
    "text": "Tuteur : Adrien Lacaille\n\n\nDans ce projet, vous aurez l‚Äôopportunit√© de plonger dans le monde fascinant des statistiques et des comp√©titions sur le jeu vid√©o Rocket League. En utilisant l‚ÄôAPI https://zsr.octane.gg/, vous allez d√©velopper une application d√©di√©e aux amateurs d‚Äôe-sport et aux fans de ce jeu vid√©o comp√©titif. Le but de cette application est de fournir une plateforme compl√®te et interactive permettant aux utilisateurs de consulter des statistiques d√©taill√©es des matchs, de suivre les prochains √©v√©nements, de g√©rer des tournois personnalis√©s et d‚Äôenrichir l‚Äôexp√©rience utilisateur par des fonctionnalit√©s avanc√©es comme l‚Äôagr√©gation de donn√©es et les syst√®mes de paris.\n\n\n\nVotre application devra int√©grer les fonctionnalit√©s essentielles suivantes :\n\nF1 : Permettre aux utilisateurs de consulter des statistiques d√©taill√©es sur les matchs d√©j√† disput√©s, incluant les scores, les performances des √©quipes et des joueurs\nF2 : Proposer un calendrier des futurs matchs avec des informations telles que les √©quipes en comp√©tition, les dates et heures des rencontres, et les lieux √©ventuels.\nF3 : Mettre en place un syst√®me s√©curis√© d‚Äôauthentification permettant aux utilisateurs autoris√©s d‚Äôajouter ou de modifier des informations relatives aux matchs.\nF4 : Offrir la possibilit√© de cr√©er et de g√©rer des tournois personnalis√©s, avec des fonctionnalit√©s pour inscrire des √©quipes, d√©finir des calendriers de match, et suivre les r√©sultats en temps r√©el.\n\n\n\n\nPour aller au-del√† des exigences de base et rendre votre application encore plus attractive, vous pouvez int√©grer les fonctionnalit√©s optionnelles suivantes :\n\nFO1 : Permettre aux utilisateurs d‚Äôobtenir des analyses consolid√©es par √©quipe et par joueur, en agr√©geant les donn√©es sur les performances individuelles et collectives afin de fournir des indices de performances.\nFO2 : D√©velopper un syst√®me de paris interactif o√π les utilisateurs peuvent parier sur les r√©sultats des matchs et des tournois, ajoutant ainsi une dimension ludique et comp√©titive √† l‚Äôapplication.\n\n\n\n\nPour maximiser votre exp√©rience et la r√©ussite de ce projet, voici quelques conseils et outils essentiels :\n\n\n\nUtilisez une base de donn√©es PostgreSQL pour stocker et g√©rer vos donn√©es.\nD√©veloppez votre application en Python.\nConcentrez-vous uniquement sur une application en ligne de commande (CLI) sans interface web.\n\n\n\n\n\nR√©alisez des tests unitaires pour garantir la fiabilit√© de votre code.\nMesurez la couverture de code (coverage) pour vous assurer que tous les aspects de votre application sont test√©s.\nUtilisez des outils de linting pour maintenir un code propre et conforme aux standards.\n\n\n\n\n\nVersionnez votre projet sur Git pour suivre les modifications et collaborer efficacement.\nMettez en place une int√©gration continue (CI) pour automatiser vos tests.\n\n\n\n\n\nOrganisez un point hebdomadaire pour suivre vos progr√®s, discuter des obstacles rencontr√©s et ajuster votre plan de travail en cons√©quence. Cela vous permettra de progresser r√©guli√®rement et de mener √† bien ce projet.\n\n\n\n\n\nPrenez des initiatives pour r√©aliser d‚Äôautres fonctionnalit√©s optionnelles et apporter votre touche personnelle au projet. Votre cr√©ativit√© et votre capacit√© √† aller au-del√† des attentes de base seront valoris√©es."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#fennec-on-the-road",
    "href": "doc/projet/sujets-2024-2025.html#fennec-on-the-road",
    "title": "Sujets de projet informatique 2A",
    "section": "",
    "text": "Tuteur : Adrien Lacaille\n\n\nDans ce projet, vous aurez l‚Äôopportunit√© de plonger dans le monde fascinant des statistiques et des comp√©titions sur le jeu vid√©o Rocket League. En utilisant l‚ÄôAPI https://zsr.octane.gg/, vous allez d√©velopper une application d√©di√©e aux amateurs d‚Äôe-sport et aux fans de ce jeu vid√©o comp√©titif. Le but de cette application est de fournir une plateforme compl√®te et interactive permettant aux utilisateurs de consulter des statistiques d√©taill√©es des matchs, de suivre les prochains √©v√©nements, de g√©rer des tournois personnalis√©s et d‚Äôenrichir l‚Äôexp√©rience utilisateur par des fonctionnalit√©s avanc√©es comme l‚Äôagr√©gation de donn√©es et les syst√®mes de paris.\n\n\n\nVotre application devra int√©grer les fonctionnalit√©s essentielles suivantes :\n\nF1 : Permettre aux utilisateurs de consulter des statistiques d√©taill√©es sur les matchs d√©j√† disput√©s, incluant les scores, les performances des √©quipes et des joueurs\nF2 : Proposer un calendrier des futurs matchs avec des informations telles que les √©quipes en comp√©tition, les dates et heures des rencontres, et les lieux √©ventuels.\nF3 : Mettre en place un syst√®me s√©curis√© d‚Äôauthentification permettant aux utilisateurs autoris√©s d‚Äôajouter ou de modifier des informations relatives aux matchs.\nF4 : Offrir la possibilit√© de cr√©er et de g√©rer des tournois personnalis√©s, avec des fonctionnalit√©s pour inscrire des √©quipes, d√©finir des calendriers de match, et suivre les r√©sultats en temps r√©el.\n\n\n\n\nPour aller au-del√† des exigences de base et rendre votre application encore plus attractive, vous pouvez int√©grer les fonctionnalit√©s optionnelles suivantes :\n\nFO1 : Permettre aux utilisateurs d‚Äôobtenir des analyses consolid√©es par √©quipe et par joueur, en agr√©geant les donn√©es sur les performances individuelles et collectives afin de fournir des indices de performances.\nFO2 : D√©velopper un syst√®me de paris interactif o√π les utilisateurs peuvent parier sur les r√©sultats des matchs et des tournois, ajoutant ainsi une dimension ludique et comp√©titive √† l‚Äôapplication.\n\n\n\n\nPour maximiser votre exp√©rience et la r√©ussite de ce projet, voici quelques conseils et outils essentiels :\n\n\n\nUtilisez une base de donn√©es PostgreSQL pour stocker et g√©rer vos donn√©es.\nD√©veloppez votre application en Python.\nConcentrez-vous uniquement sur une application en ligne de commande (CLI) sans interface web.\n\n\n\n\n\nR√©alisez des tests unitaires pour garantir la fiabilit√© de votre code.\nMesurez la couverture de code (coverage) pour vous assurer que tous les aspects de votre application sont test√©s.\nUtilisez des outils de linting pour maintenir un code propre et conforme aux standards.\n\n\n\n\n\nVersionnez votre projet sur Git pour suivre les modifications et collaborer efficacement.\nMettez en place une int√©gration continue (CI) pour automatiser vos tests.\n\n\n\n\n\nOrganisez un point hebdomadaire pour suivre vos progr√®s, discuter des obstacles rencontr√©s et ajuster votre plan de travail en cons√©quence. Cela vous permettra de progresser r√©guli√®rement et de mener √† bien ce projet.\n\n\n\n\n\nPrenez des initiatives pour r√©aliser d‚Äôautres fonctionnalit√©s optionnelles et apporter votre touche personnelle au projet. Votre cr√©ativit√© et votre capacit√© √† aller au-del√† des attentes de base seront valoris√©es."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#the-dms-sound-buddy",
    "href": "doc/projet/sujets-2024-2025.html#the-dms-sound-buddy",
    "title": "Sujets de projet informatique 2A",
    "section": "2 The DM‚Äôs Sound Buddy üéµ",
    "text": "2 The DM‚Äôs Sound Buddy üéµ\nTuteur : Cyriel Mallart\n\nPr√©sentation\nLors de ce projet, vous allez cr√©er une application de gestion de banque de sons. Le but final est de pouvoir g√©rer des effets sonores pour cr√©er une ambiance lors de parties de jeu de r√¥le ou autre storytelling. Le but est donc de pouvoir rechercher des effets sonores, et en cr√©er des playlists pour les jouer de fa√ßon simple lors d‚Äôune partie de jeu de r√¥le. Les sons seront issus de Freesound, qui propose une API de recherche de sons bas√©e sur des mots-cl√©s. Votre r√¥le sera d‚Äôidentifier les besoins des utilisateur-ice-s, de modeliser l‚Äôapplication en cons√©quence et de d√©cider comment g√©rer le stockage des sons et des informations sur les sons. Les fonctionnalit√©s de bases ci-dessus, et au moins une fonctionnalit√© optionelle au choix sont attendues.\nAPI : https://freesound.org/apiv2/\nSite web Freesound (pour vous faire une id√©e des possibilit√©s): https://freesound.org/\n\n\nFonctionnalit√©s de base\n\nF1 : Cr√©ation d‚Äôutilisateurs, de playlists\nF2 : Recherche de sons et t√©l√©chargement (sans redondances !)\nF3 : Lecture des sons lors d‚Äôune partie\nF4 : Consultation et copie des playlists d‚Äôautres utilisateur.ice.s\n\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Recherche avanc√©e de sons par similarit√© avec le reste de la playlist, termes connexes, commentaires des utilisateur.ice.s Freesound ou information de popularit√©\nF02 : Choix de lecture r√©p√©t√©e √† des temps al√©atoires (bruits de nature, de grincement de porte, etc.)\nF03 : Jeu d‚Äôun son en boucle\nF04 : Jeu de plusieurs sons en simultan√©\n\n\n\nConseils / Outils ‚Ä¶\n\nLa librairie Nava est conseill√©e pour jouer les sons, mais tout autre librairie est autoris√©e si vous avez une autre pr√©f√©rence.\nAu vu des t√©l√©chargements n√©cessaires (t√©l√©chargement de certains sons de base notamment), un script d‚Äôinitialisation sera attendu dans le code.\nUne suite de tests est aussi attendue, mais les tests feront partie int√©grante des techniques que nous apprendons ensemble et cela fera moins mal que vous ne le pensez ;)\nLe produit final sera un menu interactif en console. Aucune interface graphique n‚Äôest attendue, et une interface autre que console ne sera donc pas prise en compte pour l‚Äô√©valuation du projet.\nPour les fonctionnalit√©s optionnelles, toute initiative ou proposition originale sera valoris√©e, si valid√©e avec votre tuteur."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#my-kitchen",
    "href": "doc/projet/sujets-2024-2025.html#my-kitchen",
    "title": "Sujets de projet informatique 2A",
    "section": "3 My Kitchen üë®‚Äçüç≥",
    "text": "3 My Kitchen üë®‚Äçüç≥\nTuteur : Bryan Truwant\n\nPr√©sentation\nCe projet consiste en le d√©veloppement d‚Äôune application de recettes de cuisines. Pour cela vous devrez utiliser les donn√©es des recettes via l‚ÄôAPI TheMealDB. Vous devrez d√©cider quelles donn√©es conserver ou non dans votre base de donn√©es PostgreSQL pour les besoins de votre application. Vous cr√©erez aussi un mod√®le de donn√©es adapt√© aux fonctionnalit√©s que vous allez d√©velopper allant de l‚Äôaffichage d‚Äôune recette √† la suggestion de recettes en fonction des go√ªts de l‚Äôutilisateur en passant par la gestion d‚Äôune liste de courses.\n\n\nFonctionnalit√©s de base\n\nF1 : Afficher la liste des recettes\nF2 : Afficher une recette (Au minimum : Titre, ingr√©dients, consignes, note, commentaires)\nF3 : Recettes favorites : Ajout, visualisation, suppression\nF4 : Avis sur les recettes : Notes et commentaires\n\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Recherche des recettes par ingr√©dients\nFO2 : Liste de courses : Ajout des ingr√©dients d‚Äôune recette √† la liste de courses, visualisation de la liste et suppression des √©l√©ments achet√©s\nFO3 : Ingr√©dients favoris et Ingr√©dients non d√©sir√©s (Ajout, visualisation, suppression)\nFO4 : Proposer des recettes qui ne sont pas dans les recettes favorites contenant au moins un ingr√©dient favori et aucun ingr√©dient non d√©sir√©"
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#streamsmart",
    "href": "doc/projet/sujets-2024-2025.html#streamsmart",
    "title": "Sujets de projet informatique 2A",
    "section": "4 StreamSmart üé•",
    "text": "4 StreamSmart üé•\nTuteur : Alexandre Bidon\n\nPr√©sentation\nQuel abonnement streaming choisir pour ne rater aucun de mes films pr√©f√©r√©s ? Ce projet vise √† d√©velopper un outil comparatif qui analyse les catalogues de diff√©rentes plateformes et recommande l‚Äôabonnement le plus adapt√© √† vos go√ªts cin√©matographiques. L‚Äôutilisateur cr√©e sa watchlist et l‚Äôapplication lui retourne l‚Äôabonnement qui correspond le mieux √† votre besoin (abonnement le plus rentable, abonnement qui propose le plus de films dans la watchlist, etc).\n\n\nFonctionnalit√©s de base\n\nF1 : Gestion des utilisateurs (Cr√©er un utilisateur, Se connecter, Supprimer un utilisateur)\nF2 : Rechercher un film ou une s√©rie par son nom\nF3 : Pour un film ou une s√©rie, voir la liste des plateformes sur lequel il/elle est disponible\nF4 : Gestion de watchlist (Cr√©er une watchlist, Ajouter un film √† une watchlist, Supprimer une watchlist)\nF5 : Pour une watchlist, proposer l‚Äôabonnement de streaming le plus rentable (crit√®re libre, par exemple l‚Äôabonnement avec le meilleur ratio prix/nombre de films propos√©s ou l‚Äôabonnement qui propose le + de films)\n\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Gestion des diff√©rents tier d‚Äôabonnements (par exemple rajouter un crit√®re avec ou sans pub, choisir sa r√©solution d‚Äô√©cran)\nFO2 : Gestion de la localisation de l‚Äôutilisateur (Les plateformes ne proposent pas les m√™mes films selon les pays)\nFO3 : Gestion des abonnements plus complexes (par exemple l‚Äôoffre rat+ de Canal qui propose plusieurs services de streaming en un)\n\n\n\nConseils / Outils ‚Ä¶\nPour r√©aliser ce projet, vous utiliserez l‚ÄôAPI de The Movie Database :\n\nAPI : https://www.themoviedb.org/\nDocumentation de l‚ÄôAPI: https://developer.themoviedb.org/reference/intro/getting-started\n\nCette API propose d√©j√† un outil pour cr√©er des watchlists, vous devrez cependant fournir votre propre impl√©mentation."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#collection-de-mangas",
    "href": "doc/projet/sujets-2024-2025.html#collection-de-mangas",
    "title": "Sujets de projet informatique 2A",
    "section": "5 Collection de mangas üìö",
    "text": "5 Collection de mangas üìö\nTutrice : Lissa Chen\n\nPr√©sentation\nCe projet vous demandera de cr√©er une application qui permettra aux utilisateurs de stocker et de partager des collections de mangas. Les utilisateurs pourront aussi donner leurs avis sur les mangas de leur choix.\nIl faudra tenir des contraintes de requ√™tes par secondes √† l‚ÄôAPI.\nAPI √† utiliser : Jikan API\n\n\nFonctionnalit√©s de base\nEn tant qu‚Äôutilisateur, je veux pouvoir :\n\nM‚Äôinscrire/connecter/d√©connecter/d√©sinscrire √† l‚Äôapplication (gestion des utilisateurs et des informations qui leur sont propres).\nAfficher les informations d‚Äôun manga en l‚Äôayant recherch√© par son titre.\nR√©diger/Mettre √† jour/Supprimer mes avis sur un manga et consulter ceux des autres utilisateurs.\nCr√©er/Mettre √† jour/Supprimer des collections ‚Äúcoh√©rentes‚Äù de mangas, et consulter celles des autres utilisateurs. La collection devra contenir :\n\nle titre de ma collection\nla description de ma collection\nles titres des mangas de ma collection\n\nCr√©er/Mettre √† jour/Supprimer une collection des mangas que je poss√®de ‚Äúphysiquement‚Äù, et consulter celle des autres utilisateurs. La collection devra contenir pour chaque manga :\n\nle titre du manga\nle num√©ro du dernier tome acquis\nle(s) num√©ro(s) des tomes manquants par rapport au dernier tome acquis de la s√©rie (ensemble des tomes d‚Äôun m√™me titre)\nle status de la s√©rie, c‚Äôest-√†-dire si je continue d‚Äôacheter les tomes ou non (reading/dropped)\n\n\nExemple de collection des mangas que je poss√®de ‚Äúphysiquement‚Äù :\n\n\n\nTitre\nN¬∞ du dernier tome acquis\nN¬∞ des tomes manquants\nStatus\n\n\n\n\nOne Piece\n107\n106\nEn cours\n\n\nOne Punch Man\n18\n16, 17\nEn cours\n\n\nSpy x Family\n3\n0\nDropped\n\n\n\nExemple de collection ‚Äúcoh√©rente‚Äù :\nTitre de ma collection : Mangas pr√©f√©r√©s Description de ma collection : Liste de mes mangas pr√©f√©r√©s Mangas de ma collection : Oshi no ko, Les Carnets de l‚ÄôApothicaire, March comes in like a lion\n\n\nFonctionnalit√©s optionnelles\n\nCr√©er/Modifier/Supprimer des tier list de mangas\nAcc√©der aux informations d‚Äôun manga depuis une collection\nToute autre fonctionnalit√© que vous trouvez sympa\n\n\n\nConseils / Outils ‚Ä¶\nUne application avec les fonctionnalit√©s de base, sans bug et avec un code clair sera plus valoris√©e qu‚Äôune application avec des fonctionnalit√©s optionnelles mais un code ‚Äúbrouillon‚Äù et des bugs. Favorisez un code maintenable."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#vous-√™tes-ici",
    "href": "doc/projet/sujets-2024-2025.html#vous-√™tes-ici",
    "title": "Sujets de projet informatique 2A",
    "section": "6 Vous √™tes ici üéØ",
    "text": "6 Vous √™tes ici üéØ\n\nl‚ÄôAPI qui vous dit o√π vous √™tes‚Ä¶ enfin si c‚Äôest en France\n\nTuteur : Thierry Math√©\n\nPr√©sentation\nComme vous le savez la France est divis√©e en plusieurs zonages : zonages administratifs, zonages d‚Äô√©tudes, ‚Ä¶ Le but du projet est de cr√©er une API qui permettra de :\n\nDonner des informations pour une de ces subdivisions, par exemple quel est le d√©partement 27, ou quelle est la commune 13055 ?\nDire dans quelle zone se trouve un point rep√©r√© par ses coordonn√©es g√©ographiques. Par exemple: mais dans quel Iris se trouve les coordonn√©es GPS 48.114503, -1.681217 (et d‚Äôailleurs qu‚Äôest que c‚Äôest qu‚Äôun Iris ???‚Ä¶) ?\nComme le 2. mais pour une liste de points. Le r√©sultat sera alors un fichier (csv, xlsx, json, ‚Ä¶ c‚Äôest vous qui voyez) qui sera transmis dans la r√©ponse de la requ√™te.\n\n\n\nFonctionnalit√©s de base\n\nF1 : API-Rest de consultation donnant une URI pour chaque zone d‚Äôun zonage. Par exemple l‚ÄôURI monAPI/zonage/departement/2023/35 permettra d‚Äôavoir les informations pour le d√©partement de l‚ÄôIlle et Vilaine en 2023 et l‚ÄôURI monAPI/zonage/commune/2023/69123 les informations sur la commune de Lyon en 2023,\nF2 : Endpoint permettant la localisation d‚Äôun point par exemple monAPI/ousuisje/departement?lat=48.114503&long=-1.681217&annee=2023 renvoie le d√©partement o√π se trouve le point dont les coordonn√©es sont indiqu√©es (latitude et longitude),\nF3 : Endpoint permettant de transmettre une liste de points dans une requete POST qui renvoie les m√™mes informations pour chacun des points sous la forme d‚Äôun fichier.\n\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Ajouter des zonages\nFO2 : Ajouter des ann√©es de g√©ographies (et oui la g√©ographie change tous les ans !)\nFO2 : Ajouter d‚Äôautres formats de retour pour la F3, voire m√™me retourner une carte au format jpeg ou SVC!‚Ä¶\n\nRemarques: M√™me si ces fonctionnalit√©s ne sont pas r√©alis√©es, il faudra construire l‚Äôapplication de telle sorte qu‚Äôelle puisse les accueillir facilement.\n\n\nConseils / Outils ‚Ä¶\nPour r√©aliser ce projet vous vous appuierez sur le code officiel g√©ographique de l‚ÄôInsee et sur les contours de ces diff√©rents zonages donn√©s par l‚ÄôIGN au format shape.\nEnfin pour ceux qui se demanderaient ce que c‚Äôest qu‚Äôun Iris et √† quoi ils ressemblent‚Ä¶"
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#r√©seau-social-cin√©",
    "href": "doc/projet/sujets-2024-2025.html#r√©seau-social-cin√©",
    "title": "Sujets de projet informatique 2A",
    "section": "7 R√©seau social cin√© üçø",
    "text": "7 R√©seau social cin√© üçø\nTuteur : Cl√©ment Valot\n\nPr√©sentation\nL‚Äôinspiration de ce sujet est SensCritique, un site communautaire o√π les utilisateurs notent et critiquent des films (et s√©ries, livres‚Ä¶ Mais on va centrer le sujet sur les films üé•)\nLe projet va √™tre pens√© comme une application web, qui va exposer une API REST, qu‚Äôon pourra tester avec un client API (e.g.¬†Postman ou Bruno).\nLa base de donn√©es de films sera construite en s‚Äôinterfa√ßant avec l‚ÄôAPI TheMovieDB. Le reste de la base de donn√©es devra √™tre aliment√© par vos soins.\n\n\nFonctionnalit√©s de base\n\nF1 : Inscription et authentification s√©curis√©e\nF2 : Rechercher un film et lui attribuer une note sur 10 (modifiable et effa√ßable)\nF3 : Obtenir des informations sur un film (Informations techniques, note moyenne des utilisateurs du site, note moyenne de mes √©claireurs‚Ä¶)\nF4 : Ajouter un autre utilisateur √† ma liste d‚Äô‚Äú√©claireurs‚Äù et obtenir des informations sur sa collection de films (Nombre de films vus, notes sur chacun des films, films vus en commun‚Ä¶)\n\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Ajout de commentaires ou critiques sur les films\nFO2 : Algorithme de recommandation bas√© sur les films d√©j√† vus et not√©s\nFO3 : Les axes d‚Äôextension de l‚Äôapplication sont nombreux, vous avez un site entier existant pour puiser l‚Äôinspiration, toute fonctionnalit√© int√©ressante peut √™tre sugg√©r√©e √† votre tuteur üòä\nFO4 : Trouver un nom qui claque pour l‚Äôapplication, votre tuteur ne brille pas par sa cr√©ativit√©\n\n\n\nConseils / Outils‚Ä¶\nUn template de projet sera fourni, avec une configuration d‚Äôenvironnement de d√©veloppement √† respecter imp√©rativement, ainsi que des suggestions de librairies √† utiliser pour la DB/API."
  },
  {
    "objectID": "doc/projet/sujets-2024-2025.html#spotify-analytics",
    "href": "doc/projet/sujets-2024-2025.html#spotify-analytics",
    "title": "Sujets de projet informatique 2A",
    "section": "8 Spotify Analytics üì∂",
    "text": "8 Spotify Analytics üì∂\nTuteur : Samuel Goutin\n\nPr√©sentation\nCe projet vise √† cr√©er un outil permettant l‚Äôanalyse de la fr√©quentation d‚Äôun site de musique (de type Spotify). Pour cela, nous avons √† notre disposition le flux d‚Äô√©v√©nements de navigation du site. Il nous informe en temps r√©el de chaque action r√©alis√©e sur le site. L‚Äôoutil devra permettre de mieux comprendre par qui, quand et comment le site est consult√© en r√©pondant √† des questions strat√©giques.\n\n\nFonctionnalit√©s de base\nL‚Äôoutil devra proposer un webservice permettant de r√©pondre aux questions suivantes :\n\nF1 : Quelle est la dur√©e moyenne d‚Äôune session sur le site ?\nF2 : Quelle est la localisation g√©ographique des utilisateurs du site ?\nF3 : Quels sont les artistes les plus √©cout√©s ?\n\nLa granularit√© temporelle devra √™tre un param√®tre ajustable pour chaque question. Par exemple, il devra √™tre possible d‚Äôobtenir la liste des artistes les plus √©cout√©s pour chaque minute, heure, jour ou mois.\n\n\nFonctionnalit√©s optionnelles\n\nFO1 : Proposez une visualisation graphique dynamique pour les questions F1, F2 et F3. Pour cela, vous pouvez utiliser les biblioth√®ques streamlit ou dash.\nFO2 : Mettez en place une cha√Æne d‚Äôint√©gration continue (CI) pour automatiser vos tests et le packaging de votre projet avec Docker."
  },
  {
    "objectID": "doc/projet/reunion-lancement.html",
    "href": "doc/projet/reunion-lancement.html",
    "title": "Lancement du projet info 2025-2026",
    "section": "",
    "text": "Rapide tour de table\n\n1 min chacun (Localisation ? INSEE ? Ancien √©l√®ve ? Domaine ?)\nEnsuite parlons rapidement Administratif et Logistique\nN‚Äôh√©sitez pas √† m‚Äôinterrompre si questions"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#merci-bienvenue",
    "href": "doc/projet/reunion-lancement.html#merci-bienvenue",
    "title": "Lancement du projet info 2025-2026",
    "section": "",
    "text": "Rapide tour de table\n\n1 min chacun (Localisation ? INSEE ? Ancien √©l√®ve ? Domaine ?)\nEnsuite parlons rapidement Administratif et Logistique\nN‚Äôh√©sitez pas √† m‚Äôinterrompre si questions"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#myensai",
    "href": "doc/projet/reunion-lancement.html#myensai",
    "title": "Lancement du projet info 2025-2026",
    "section": "MyENSAI",
    "text": "MyENSAI\n\nPamplemousse : Scolarit√©, EDT, Appel\nMoodle : Contenu p√©dagogique\nDatalab : https://onyxia.lab.groupe-genes.fr/\nVM : https://view.ensai.fr/\n\n\nMyENSAI : intranet, compte pour acc√©der √† tout\nPour cr√©er votre compte : nom, prenom, tel, mail"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#dossier-administratif",
    "href": "doc/projet/reunion-lancement.html#dossier-administratif",
    "title": "Lancement du projet info 2025-2026",
    "section": "Dossier Administratif",
    "text": "Dossier Administratif\nQuelques papiers pour √™tre r√©mun√©r√©\n\nFiche de renseignement\nRIB\nAttestation s√©cu\nD√©cision d‚Äôengagement √† signer\nFiche de paie + attestation employeur (sauf INSEE)\nAutorisation de cumul (fonctionnaires)\n\n√Ä envoyer √† vacatairesensai@ensai.fr\n\nVous recevrez un mail avec toutes les infos apr√®s la bascule Pamplemousse\n\n\nPaie\n2-3 mois apr√®s la fin de l‚Äôintervention\n\nd√©cembre : TP\nmars : projet\n\nFiches de paie sur https://ensap.gouv.fr/\n\nCr√©ez un compte ENSAI avec votre num√©ro de s√©cu\n\n\n\nScolarit√©\nPour les questions d‚Äôemploi du temps\n\nscolarite@ensai.fr\nisabelle-laure.dang@ensai.fr\n\n\n\nModop pour faire l‚Äôappel\n\nConseil : faire au d√©but pour pas oublier\n\n\n\n\n\nDossier frais\nSi vous habitez hors aire urbaine de Rennes, vous √™tes rembours√©s de :\n\nBillets de train 2e classe, metro, bus\n\nfournir des scans propres\n\n20‚Ç¨ par repas\nNuit√©e si pas possible d‚Äôarriver le matin m√™me\n\nmission@ensai.fr\n\nPossible de demander l‚Äôachat direct de vos billet :\n\nSi vous ne voulez pas avancer les frais\nSi fait en avance &gt; 15j\n\nNote de frais √† envoyer indiv ou par lots\n\n\n\nRepas Midi\nEntre 12h45 et 14h00, plusieurs possibilit√©s :\n\nMSA ~ 15‚Ç¨\nTi-miam : Menu du jour √† 15‚Ç¨\nPopotte personnelle\n\n\n\nou Subway, McDo\n1h15 : Assez speed, ne pas trop trainer\nRestaurant du Forum : r√©server\nSympa de manger ensemble, apr√®s si vous mangez ailleurs n‚Äôh√©sitez pas √† pr√©venir qu‚Äôon ne vous attende pas\nV√©g√© ?\nQui vient en voiture ?\n\n\n\n\nCaf√©\n\nMachines √©l√®ves au foyer (CB)\nMachine salle des permanents (pi√®ces)\n\n1er √©tage, au milieu, face aux üöΩ\n\n\n\n\nAussi fontaine √† eau (chaude, froide, normale)\nSi vous manquez de sucre, j‚Äôai de quoi faire\nPauses : g√©n√©ralement je me balade dans les couloirs\nPour me reconnaitre -&gt; Linkedin, site GitHub\nVous pouvez passer bureau 161\nLe 29/08, je suis en TP √† 8h"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#les-tp",
    "href": "doc/projet/reunion-lancement.html#les-tp",
    "title": "Lancement du projet info 2025-2026",
    "section": "Les TP",
    "text": "Les TP\n\nTechno et outils\n\nVSCode\nPython\nPostgreSQL\nGit\n\n\n\nContenu\n\nTP1 : Rappels Git, exemple d‚Äôapplication\nTP2 : POO, TU, doc\nTP3 : Webservices\nTP4 : DAO\n\n\nAppli Pokemon cr√©√©e par R√©mi comme un projet\nQuand vous avez TP + projet, l‚Äôordre importe peu (sauf ATPA)\n\n\n\nEnglish\n\n2 groups\nFull english\nVolunteers?\n\n\n\nDatalab\n\nhttps://onyxia.lab.groupe-genes.fr/\nConnexion avec votre compte ENSAI\ndemo\n\n\n\nLancer services\n\nparam√®tres\nopen port\n\nsuivre README\n\n.env\nrun\napi\ninquirerPy\n\n\n\n\n\nAcc√®s VM\nBackup :\n\nhttp://view.ensai.fr/\n\nvia navigateur\nou installer VMWare Horizon Client\n\n\n\nVMWare Horizon Client : D√©sactiver la v√©rification de Certificat\nCTRL + ALT + F12\n\n\n\nMachine perso\n\n\n\n\n\n\nWarning\n\n\n\n√âl√®ves qui ne veulent pas travailler sur la VM :\n\nInstaller IDE, Python, Git, BDD\nManque de ma√Ætrise\nPerte de temps\nTP DAO -&gt; besoin d‚Äôune BDD\n\n\n\n\n\nNe soyez pas trop gentil\nNe les aidez pas √† installer\n√ßa ne leur rend pas service\nSurtout si vous voyez qu‚Äôils ne maitrisent pas"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#le-projet",
    "href": "doc/projet/reunion-lancement.html#le-projet",
    "title": "Lancement du projet info 2025-2026",
    "section": "Le projet",
    "text": "Le projet\n\nAttendus\n\nD√©velopper une application en Python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostgreSQL\nUtiliser et/ou Cr√©er des webservices\nConcevoir et Mod√©liser\n\n\n\nSujets\n\n20 ao√ªt au plus tard dernier d√©lai\nLien vers la liste\n\n\n\nContraintes EDT\nSinon : sujet myst√®re (les √©l√®ves n‚Äôaiment pas)\n\n\n\n\n1√®re s√©ance\n\nPr√©senter le sujet (diapo)\nR√©pondre aux questions\nPr√©senter votre mode de fonctionnement\nPour les √©l√®ves\n\nRecontrer son √©quipe\nLister les comp√©tences\nR√©partir les r√¥les\n\n\n\nLes √©tapes pour les √©l√®ves :\n\nlister les fonctionnalit√©s\nmod√©liser (diag classe)\ncr√©er la base de donn√©es\ncoder\n\nLes √©l√®ves sont sympas mais doivent √™tre bien cadr√©s\n\n\n\nSuivi\n\nPoint hebdo jeudi soir\nDiagramme de Gantt\nBien sonder le groupe si tout va bien\n\nPr√©venir au plus t√¥t si √ßa coince\n\n\n\n\nInclure une backlog\nEn cas de soucis avec un √©l√®ve ou une √©quipe ‚û°Ô∏è me pr√©venir\n\n\n\n\n√âvaluations\n\nDossier d‚Äôanalyse\nCode\nEsprit d‚Äô√©quipe\n\n\n\nDossier d‚Äôanalyse\n\nre√ßu samedi -&gt; retour vendredi suivant\n\nCode -&gt; grille notation\nRapport -&gt; grille, commun avec jury\n\n\n\n\nTemplate\n\nMod√®le qui peut servir de base üöß\nLes √©l√®ves peuvent utiliser ou non\nPossibilit√© de fournir votre propre template"
  },
  {
    "objectID": "doc/projet/reunion-lancement.html#communiquer",
    "href": "doc/projet/reunion-lancement.html#communiquer",
    "title": "Lancement du projet info 2025-2026",
    "section": "Communiquer",
    "text": "Communiquer\n\nMailing list\nServeur Discord\n\nl‚Äôinvitation expire le 10 juillet\n\nLudo : 06.45.45.40.82 ou 02.99.05.33.19\n\nbureau 161 (1er √©tage, 3e gauche apr√®s passerelle)\n\n\n\nN‚Äôh√©sitez pas √† passer √† mon bureau"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#merci-bienvenue",
    "href": "doc/projet/reunion-lancement-slides.html#merci-bienvenue",
    "title": "Lancement du projet info 2025-2026",
    "section": "Merci & Bienvenue",
    "text": "Merci & Bienvenue\n\nRapide tour de table\n\n1 min chacun (Localisation ? INSEE ? Ancien √©l√®ve ? Domaine ?)\nEnsuite parlons rapidement Administratif et Logistique\nN‚Äôh√©sitez pas √† m‚Äôinterrompre si questions"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#myensai",
    "href": "doc/projet/reunion-lancement-slides.html#myensai",
    "title": "Lancement du projet info 2025-2026",
    "section": "MyENSAI",
    "text": "MyENSAI\n\nPamplemousse : Scolarit√©, EDT, Appel\nMoodle : Contenu p√©dagogique\nDatalab : https://onyxia.lab.groupe-genes.fr/\nVM : https://view.ensai.fr/\n\n\nMyENSAI : intranet, compte pour acc√©der √† tout\nPour cr√©er votre compte : nom, prenom, tel, mail"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#dossier-administratif",
    "href": "doc/projet/reunion-lancement-slides.html#dossier-administratif",
    "title": "Lancement du projet info 2025-2026",
    "section": "Dossier Administratif",
    "text": "Dossier Administratif\nQuelques papiers pour √™tre r√©mun√©r√©\n\nFiche de renseignement\nRIB\nAttestation s√©cu\nD√©cision d‚Äôengagement √† signer\nFiche de paie + attestation employeur (sauf INSEE)\nAutorisation de cumul (fonctionnaires)\n\n√Ä envoyer √† vacatairesensai@ensai.fr\n\nVous recevrez un mail avec toutes les infos apr√®s la bascule Pamplemousse"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#les-tp",
    "href": "doc/projet/reunion-lancement-slides.html#les-tp",
    "title": "Lancement du projet info 2025-2026",
    "section": "Les TP",
    "text": "Les TP"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#le-projet",
    "href": "doc/projet/reunion-lancement-slides.html#le-projet",
    "title": "Lancement du projet info 2025-2026",
    "section": "Le projet",
    "text": "Le projet"
  },
  {
    "objectID": "doc/projet/reunion-lancement-slides.html#communiquer",
    "href": "doc/projet/reunion-lancement-slides.html#communiquer",
    "title": "Lancement du projet info 2025-2026",
    "section": "Communiquer",
    "text": "Communiquer\n\nMailing list\nServeur Discord\n\nl‚Äôinvitation expire le 10 juillet\n\nLudo : 06.45.45.40.82 ou 02.99.05.33.19\n\nbureau 161 (1er √©tage, 3e gauche apr√®s passerelle)\n\n\n\nN‚Äôh√©sitez pas √† passer √† mon bureau"
  },
  {
    "objectID": "doc/projet/notice-eleves.html",
    "href": "doc/projet/notice-eleves.html",
    "title": "Notice √©l√®ves",
    "section": "",
    "text": "Tous les √©l√®ves de deuxi√®me ann√©e (except√©s ceux suivant le parcours recherche ATPA), participent √† la r√©alisation du projet informatique. Ils sont r√©partis en groupes de 4 √† 5 √©l√®ves. Ce projet permet d‚Äôeffectuer un approfondissement et une mise en pratique des connaissances acquises lors des enseignements informatiques de 1√®re ann√©e. La composition des groupes est d√©finie par le d√©partement d‚Äôenseignement informatique.\nLe travail demand√© consiste √† construire une application permettant de r√©pondre √† la probl√©matique du sujet propos√©. Ce travail se d√©compose en 3 grandes phases :\n\n√âtude pr√©alable\n\n\nd√©crire la solution envisag√©e\nplanifier les grandes phases de la r√©alisation (diagramme de cas d‚Äôutilisation et diagramme de Gantt)\n\n\nConception g√©n√©rale de l‚Äôapplication\n\n\nd√©crire les exigences fonctionnelles g√©n√©rales par la mod√©lisation (diagramme d‚Äôactivit√© ou d‚Äô√©tats, diagramme de classes, mod√®le de donn√©es‚Ä¶)\nplanifier la mise en place des fonctionnalit√©s (d√©pendances, priorit√©s‚Ä¶)\n\n\nR√©alisation :\n\n\nmise en place de la base de donn√©es\nd√©veloppement continu du syst√®me en python3 accompagn√© d‚Äôune description graphique du ou des mod√®les choisis (le mod√®le d‚Äôimpl√©mentation)\n\n\n\n\n\n\n\nTravaux √† rendre\n\n\n\n√Ä mi-projet, vous livrerez le dossier d‚Äôanalyse correspondant au travail r√©alis√© lors des 2 premi√®res phases.\nEn fin de projet, vous devrez rendre un dossier complet, ainsi que votre code.\nVous pr√©senterez vos travaux lors d‚Äôune soutenance orale."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#introduction",
    "href": "doc/projet/notice-eleves.html#introduction",
    "title": "Notice √©l√®ves",
    "section": "",
    "text": "Tous les √©l√®ves de deuxi√®me ann√©e (except√©s ceux suivant le parcours recherche ATPA), participent √† la r√©alisation du projet informatique. Ils sont r√©partis en groupes de 4 √† 5 √©l√®ves. Ce projet permet d‚Äôeffectuer un approfondissement et une mise en pratique des connaissances acquises lors des enseignements informatiques de 1√®re ann√©e. La composition des groupes est d√©finie par le d√©partement d‚Äôenseignement informatique.\nLe travail demand√© consiste √† construire une application permettant de r√©pondre √† la probl√©matique du sujet propos√©. Ce travail se d√©compose en 3 grandes phases :\n\n√âtude pr√©alable\n\n\nd√©crire la solution envisag√©e\nplanifier les grandes phases de la r√©alisation (diagramme de cas d‚Äôutilisation et diagramme de Gantt)\n\n\nConception g√©n√©rale de l‚Äôapplication\n\n\nd√©crire les exigences fonctionnelles g√©n√©rales par la mod√©lisation (diagramme d‚Äôactivit√© ou d‚Äô√©tats, diagramme de classes, mod√®le de donn√©es‚Ä¶)\nplanifier la mise en place des fonctionnalit√©s (d√©pendances, priorit√©s‚Ä¶)\n\n\nR√©alisation :\n\n\nmise en place de la base de donn√©es\nd√©veloppement continu du syst√®me en python3 accompagn√© d‚Äôune description graphique du ou des mod√®les choisis (le mod√®le d‚Äôimpl√©mentation)\n\n\n\n\n\n\n\nTravaux √† rendre\n\n\n\n√Ä mi-projet, vous livrerez le dossier d‚Äôanalyse correspondant au travail r√©alis√© lors des 2 premi√®res phases.\nEn fin de projet, vous devrez rendre un dossier complet, ainsi que votre code.\nVous pr√©senterez vos travaux lors d‚Äôune soutenance orale."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#lancement-du-projet",
    "href": "doc/projet/notice-eleves.html#lancement-du-projet",
    "title": "Notice √©l√®ves",
    "section": "Lancement du projet",
    "text": "Lancement du projet\n\nLes √©quipes de projet\nLes √©quipes sont compos√©es par le responsable de la mati√®re en tenant compte des niveaux constat√©s en informatique lors de la premi√®re ann√©e et en veillant √† la r√©partition des √©l√®ves admis sur titre. Il est essentiel de veiller √† la bonne int√©gration des √©l√®ves admis sur titre au sein des √©quipes.\n\nUne moyenne pond√©r√©e est calcul√©e pour chaque √©l√®ve √† partir des notes de 1A dans les mati√®res informatiques\n\nPOO doc et tests : 0.5, BDR : 0.2, Algo et complexit√© : 0.2, Projet de traitement de donn√©es : 0.1\n\nSuite √† ce classement, les √©l√®ves sont r√©partis en 4 poules\nChaque √©quipe est compos√©e √† partir d‚Äôun √©l√®ve de chaque poule\n\nLa composition des √©quipes n‚Äôest pas modifiable !\n\n\nChoix du sujet\nChacun des 8 intervenants de projet a propos√© un sujet qui devra permettre l‚Äôapplication de l‚Äôensemble des enseignements informatiques dispens√©s en 1√®re ann√©e :\n\nConception d‚Äôapplications avec UML\nAlgorithmique\nProgrammation orient√©e objet avec Python\nBases de donn√©es relationnelles\n\nChaque intervenant prendra en charge 4 √©quipes d‚Äô√©l√®ves qui traiteront le sujet qu‚Äôil a propos√©.\nVous devrez choisir votre sujet dans la liste accessible sur la plateforme d‚Äôenseignement Moodle, suivant la proc√©dure d√©taill√©e ci-dessous¬†:\n\nPrenez connaissance des sujets pr√©sent√©s sur la plateforme d‚Äôenseignement\nConcertez-vous entre membres d‚Äôun m√™me groupe\nOrdonnez les sujets par ordre de pr√©f√©rence sur l‚Äôapplication en ligne accessible via un lien sur la page Moodle du projet\n\n\n\n\n\n\n\nRemarque\n\n\n\nL‚Äôattribution des sujets se fait par une proc√©dure automatique en essayant de respecter au maximum la pr√©f√©rence des √©quipes.\nUne fois attribu√©s, les sujets ne peuvent pas √™tre modifi√©s.\n\n\n\n\nPremi√®re s√©ance\nDe retour d‚Äô√©tudiants, la premi√®re rencontre entre membres d‚Äôune m√™me √©quipe est importante. C‚Äôest l‚Äôoccasion pour vous de faire connaissance et d‚Äô√©changer honn√™tement sur vos capacit√©s et ce que vous attendez du projet. Les √©quipes qui ont un bon fonctionnement sont celles qui r√©ussissent le mieux. Comme il n‚Äôy a pas de recette magique, chaque √©quipe doit se mettre d‚Äôaccord sur son fonctionnement."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#organisation-et-suivi",
    "href": "doc/projet/notice-eleves.html#organisation-et-suivi",
    "title": "Notice √©l√®ves",
    "section": "Organisation et suivi",
    "text": "Organisation et suivi\n\nLe chef de projet\nAu sein de chaque √©quipe, les √©l√®ves devront d√©signer une cheffe ou un chef de projet qui :\n\nsera responsable de l‚Äôanimation du groupe\norganisera les r√©unions de travail\nveillera √† la r√©partition, au suivi de l‚Äôavancement et au respect du planning\n\nIl est l‚Äôinterlocuteur privil√©gi√© de l‚Äôencadrant pour l‚Äô√©quipe qu‚Äôil repr√©sente. Il doit permettre la discussion et la prise de d√©cision coll√©giale.\nCe r√¥le n‚Äôest pas li√© aux comp√©tences informatiques, mais √† l‚Äôapp√©tence pour la gestion d‚Äô√©quipe. Il faut tout de m√™me s‚Äôinvestir et s‚Äôinteresser aux travaux.\n\n\nLeader technique\nCe r√¥le revient g√©n√©ralement √† la personne ayant le plus d‚Äôapp√©tence pour l‚Äôinformatique. Ses missions principales :\n\nr√©f√©rent git : s‚Äôassurer que tous les membres ont compris les bases de git, ont clon√© le r√©po et savent partager leurs modifications\ncoder une v0 (par exemple en s‚Äôinspirant du template fourni) et expliquer aux autres comment √ßa fonctionne (un diagramme de s√©quence peut-√™tre fort utile)\nassister les membres en cas de blocage technique\n\n\n\n\n\n\n\nCaution\n\n\n\nPour √©viter toute surchage de travail, il est fortement d√©conseill√© de cumuler les roles de tech lead et chef de projet.\n\n\n\nIl peut bien s√ªr y avoir d‚Äôautres r√¥les dans l‚Äô√©quipe. L‚Äôimportant est de prendre des initiatives sur un sujet qui vous plait et d‚Äô√™tre acteur du projet.\nVous √™tes des ing√©nieurs, vous avez des id√©es, vous devez prendre des initiatives. Cela sera un vrai plus lorsque vous serez en poste !\n\n\nCrise\nüöß\nSi le travail ou l‚Äôimplication d‚Äôun ou plusieurs membres de l‚Äô√©quipe √©taient en de√ß√† des attentes, leurs notes pourraient √™tre dissoci√©es de celles du reste du groupe. Cela ne sera possible qu‚Äôapr√®s avoir alert√© votre tuteur et le r√©f√©rent de la mati√®re et qu‚Äôune discussion avec le groupe ait eu lieu.\n\n\nGestion de projet et de communication\nil est recommand√© d‚Äôutiliser Microsoft Teams pour planifier vos travaux et √©changer. Le cr√©ation d‚Äôune conversation pour le groupe semble le minimal. Mais vous pouvez √©galement installer des plugins pour vous aider √† g√©rer votre projet. Voici quelques propositions :\n\nTrello : pour avoir un kanban collaboratif ;\nPriority Matrix : pour prioriser vos t√¢ches ;\n\nVous pouvez √©galement utiliser d‚Äôautres logiciels pour communiquer, comme Slack ou Discord (qui sont propri√©taires comme Teams). Utiliser Facebook Messenger ou autres applications li√©es √† un r√©seau social est d√©conseill√© car elles ne sont pas utilis√©es pour g√©rer un projet en entreprise. La limite de ces logiciels de messagerie est qu‚Äôils ne proposent pas de salon de discussions th√©matiques pour segmenter vos √©changes. Cela entraine de la perte d‚Äôinformations quand plusieurs discussions se m√©langent.\nPour les personnes qui ont du mal √† s‚Äôorganiser mais qui sont sensible √† la gamification vous pouvez √©galement utiliser Habitica (https://habitica.com/static/home) pour vous aider √† travailler r√©guli√®rement.\n\n\nPoint hebdo\nChaque semaine (jusqu‚Äôau rendu du rapport final et sauf pendant les vacances), vous devrez remplir votre point hebdomadaire de suivi de projet :\n\nQuand : le Jeudi soir au plus tard\nO√π : sur votre d√©p√¥t Git, dossier doc/suivi\nComment : cr√©ez un fichier nomm√© YYYY.MM.DD-semaineN.md en utilisant le mod√®le ci-dessous\nQui : tous les membres de l‚Äô√©quipe\nQuoi : listez les t√¢ches accomplies\nPourquoi : il permettra √† votre tutrice ou tuteur de suivre l‚Äô√©volution de votre travail\n\n\n\n\n\n\n\nImportant\n\n\n\nLe point hebdomadaire est obligatoire. Vous serez p√©nalis√©s si vous ne le remplissez pas ou si vous le rendez en retard.\n\nSi vous n‚Äôavez pas travaill√© sur le projet depuis une semaine (et vous avez le droit) ‚û°Ô∏è mettez simplement ras (rien √† signaler)\nSi une t√¢che n‚Äôest pas termin√©e, vous pouvez ajouter le suffixe WIP (Work In Progress)\n\nPour information, le projet informatique vous permet d‚Äôobtenir 4 ECTS, ce qui repr√©sente un investissement d‚Äôenviron 100h (s√©ances en pr√©sentiel comprises) par √©l√®ve.\n\n\n\n\n\n\n\n\nTip\n\n\n\nN‚Äôattendez pas le jeudi soir pour essayer de vous rem√©morer tout ce que vous avez fait depuis une semaine.\nPrenez l‚Äôhabitude de lister vos t√¢ches au fur et √† mesure !\n\n\n\nMod√®leExemple\n\n\n\n\nYYYY.MM.DD-semaineN.md\n\n# Point Hebdomadaire - Projet\n\nDate : Jeudi ...\nSemaine n¬∞ ...\n\n## T√¢ches r√©alis√©es cette semaine\n\n&gt; Exemples : `- [x] T√¢che 1` ou - `ras`\n\n### Nom Pr√©nom √©l√®ve 1\n\n### Nom Pr√©nom √©l√®ve 2\n\n### Nom Pr√©nom √©l√®ve 3\n\n### Nom Pr√©nom √©l√®ve 4\n\n### Nom Pr√©nom √©l√®ve 5\n\n---\n\n## Backlog\n\n&gt; Liste des t√¢ches en attente de prise en charge.\n\n### Prioritaires\n\n### Secondaires\n\n\n\n\n\n2024.09.12-semaine2.md\n\n# Point Hebdomadaire - Projet Ninja\n\nDate : Jeudi 12 septembre 2024\nSemaine n¬∞ 2\n\n## T√¢ches r√©alis√©es cette semaine\n\n### Maud ZARELLA\n- [x] Cr√©ation de la classe JoueurDAO et des m√©thodes\n- [x] Tests unitaires JoueurDAO\n- [x] JoueurService : ajout m√©thode pour supprimer un joueur\n\n### Tom ATE\n- [x] Mise en forme du diagramme de classe avec PlantUML\n- [x] Rapport : pr√©sentation des classes WIP\n\n### Anna NACE\n- ras\n\n### Harry COVER\n- [x] Modification de la base de donn√©es : modification de la table *joueur*, cr√©ation table *arbitre*\n- [x] Refactor : utilisation du package *tabulate* pour avoir de jolis tableaux\n\n### √âva ZION\n- [x] Codage de la fonctionnalit√© *Cr√©er un tournoi* (Vue + Services + Dao)\n- [x] Relecture dossier analyse\n\n## Backlog\n\n### Prioritaires\n- [ ] Corriger Bug de modification de joueur\n- [ ] Fonctionnalit√© *Arbitrer un tournoi*\n- [ ] Menu administrateur\n\n### Secondaires\n- [ ] Ecrire README\n\n\n\n\nL‚Äôencadrement de l‚Äôavancement du projet se d√©roulera g√©n√©ralement sur 3 heures par semaine. Chaque √©quipe fera le bilan avec son intervenant :\n\ndu travail qui a √©t√© r√©alis√© au cours de la semaine\ndes difficult√©s rencontr√©es\nde ce qui doit encore √™tre fait\n\n\n\n\n\n\n\nCaution\n\n\n\n√Ä chaque s√©ance, l‚Äôencadrant notera si un travail s√©rieux a √©t√© r√©alis√© depuis la semaine derni√®re. Un travail r√©gulier tout le long du projet sera r√©compens√©, tandis qu‚Äôun travail fait uniquement avant les rendus sera p√©nalis√©.\n\n\nLes s√©ances de suivi sont obligatoires. L‚Äôappel sera effectu√© en d√©but et en fin de s√©ance. Votre intervenant pourra demander √† tout moment √† parler avec la totalit√© des √©l√®ves qu‚Äôil encadre."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#outils-et-cours",
    "href": "doc/projet/notice-eleves.html#outils-et-cours",
    "title": "Notice √©l√®ves",
    "section": "Outils et Cours",
    "text": "Outils et Cours\n\nLien avec le module de Compl√©ments d‚Äôinformatique\nPour vous aider √† mener √† bien votre projet, un cours de 6h, et quatre TP de 3h sont mis en place dans le module de Compl√©ments d‚Äôinformatique. Lors du cours, vous seront pr√©sent√©s l‚Äôorganisation g√©n√©rale du projet et quelques concepts nouveaux mis en ≈ìuvre lors des TP :\n\nprogrammation en couches,\nsyst√®mes de versionnement (git),\nappel √† un webservice,\nliens entre donn√©es dans un programme et dans une base de donn√©es\n\nBien que ce cours ait pour utilit√© directe de vous aider √† mener √† bien votre projet, il a √©galement pour but final de vous donner des connaissances suppl√©mentaires en informatique pour que vous puissiez √©voluer facilement dans le milieu professionnel et en particulier dans le monde de la data science.\n\n\nOutils de d√©veloppement\nLes outils de d√©veloppement √† votre disposition seront :\n\nL‚Äôenvironnement de d√©veloppement Visual Studio Code disponible sur votre VM\nLe logiciel de partage de code et versionnement Git, accessible depuis l‚Äôenvironnement de d√©veloppement, accompagn√© d‚Äôun d√©p√¥t (priv√©) que vous devrez cr√©er sur un serveur public (GitLab, Github, Bitbucket),\nUne base de donn√©es PostgreSQL (h√©berg√©e √† l‚ÄôEnsai) comme syst√®me de gestion de base de donn√©es (SGBD) pour la persistance des donn√©es,\nUn certain nombre de librairies et outils pour le lien entre Python et le SGBD, les tests unitaires, la g√©n√©ration automatique de documentations\n\npsycopg2 pour se connecter √† la base de donn√©es postgreSQL,\nrequests pour r√©aliser des requ√™tes http\npytest pour les tests unitaires,\npydoc pour la documentation,\nabc pour les classes abstraites,\nfastAPI pour la cr√©ation d‚Äôun webservice REST\n\n\nEn plus de cette liste, vous √™tes libre d‚Äôutiliser les outils de votre choix, √† condition d‚Äô√™tre capable de les utiliser en toute autonomie.\n\n\n\n\n\n\nRemarque\n\n\n\nDemander de l‚Äôaide est normal et fait partie de l‚Äôapprentissage. Nous ne notons pas quels sont les groupes qui nous demandent de l‚Äôaide. Faire preuve d‚Äôautonomie ne veut pas dire travailler sans demander de l‚Äôaide. Si vous rencontrez une difficult√©, qu‚Äôapr√®s plusieurs tentatives vous ne trouvez pas de solution et que vous demandez finalement de l‚Äôaide pour la r√©soudre, vous √™tes autonome.\nSi par contre vous attendez que le probl√®me disparaisse ou que l‚Äôon vienne vous aider, l√† vous manquez d‚Äôautonomie. Soyez proactif dans votre d√©marche ! Vous progresserez bien plus vite."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#travail-attendu",
    "href": "doc/projet/notice-eleves.html#travail-attendu",
    "title": "Notice √©l√®ves",
    "section": "Travail attendu",
    "text": "Travail attendu\n\nProcessus de d√©veloppement\nLe d√©veloppement s‚Äôeffectuera collectivement et en cascade. Les phases d‚Äô√©tude pr√©alable, de conception g√©n√©rale, de r√©alisation et de validation s‚Äôencha√Ænent successivement dans le temps.\n\n\n√âtude pr√©alable\nCette 1√®re phase d‚Äôanalyse consiste en la formalisation des besoins d√©crits par le cahier des charges (le sujet, le point de vue du demandeur ou du ma√Ætre d‚Äôouvrage). Elle devra permettre d‚Äô√©tablir¬†:\n\nLe p√©rim√®tre du syst√®me d‚Äôinformation cible en repr√©cisant les aspects du sujet qui peuvent appara√Ætre flous\nLes besoins √† satisfaire par le syst√®me d‚Äôinformation cible (cas d‚Äôutilisation et description des menus)\nLes exigences particuli√®res et les contraintes (normes de d√©veloppement, architecture)\n\n\n\nConception g√©n√©rale\nCette 2e phase d‚Äôanalyse aboutira √† un mod√®le de conception pour r√©pondre aux objectifs fix√©s par le cahier des charges. Le choix des diagrammes est fait par chaque groupe apr√®s validation de leur intervenant. Nous y trouverons cependant au minimum :\n\nUn diagramme de cas d‚Äôutilisation\nUn diagramme de classes\nUn mod√®le physique de donn√©es\n\nEn fonction de votre sujet et de ce que vous demande votre intervenant vous pourrez y ajouter¬†:\n\nUn diagramme de d‚Äôactivit√© ou d‚Äô√©tat\nUn diagramme de s√©quence\nUn mod√®le logique de donn√©es (diagramme entit√©-relation)\n\n\n\n\n\n\n\nTip\n\n\n\n\nles sujets et les encadrants sont diff√©rents, alors pr√©f√©rez faire des choses coh√©rentes avec ses attendus, que simplement cocher des cases\nsi certains diagrammes ne vous disent rien, il y a plusieurs livres sur la mod√©lisation UML √† la biblioth√®que.\n\n\n\n\n\nR√©alisation et Validation du logiciel\n\nLa base de donn√©es\nL‚Äôapplication s‚Äôappuiera sur une base de donn√©es, que vous devez cr√©er. Pour vous sensibiliser √† la vari√©t√© des donn√©es, votre travail devra comporter l‚Äôimportation ou l‚Äôexportation d‚Äôun jeu de donn√©es. Ce jeu de donn√©es sera fourni par l‚Äôencadrant dans le format de son choix (XML, JSON, CSV‚Ä¶).\n\n\nCodage de l‚Äôapplication\nL‚Äôapplication sera r√©alis√©e en Python. Le code sera naturellement coh√©rent avec les diagrammes du mod√®le de conception d√©j√† √©tablis. Si n√©cessaire, ces derniers seront mis √† jour afin que cette coh√©rence soit maintenue.\nIl n‚Äôy a pas d‚Äôinterface graphique √† d√©velopper, la communication avec l‚Äôapplication se faisant par l‚Äôinterm√©diaire de la console ou d‚Äôun webservice. Toutes les fonctionnalit√©s de votre application doivent pouvoir √™tre test√©es et d√©montr√©es via la console ou des requ√™tes http.\n\n\nValidation du logiciel\nTout au long du d√©veloppement, vous d√©velopperez un ensemble de tests :\n\nTests unitaires\nTests utilisateurs pour chaque cas d‚Äôutilisation important."
  },
  {
    "objectID": "doc/projet/notice-eleves.html#livraisons",
    "href": "doc/projet/notice-eleves.html#livraisons",
    "title": "Notice √©l√®ves",
    "section": "Livraisons",
    "text": "Livraisons\n\nDossier d‚Äôanalyse\n\n\n\n\n\n\nImportant\n\n\n\n\nO√π : sur Moodle, dans la section pr√©vue √† cet effet\nQuand : d√©but octobre\nComment : en format pdf. Il n‚Äôest pas obligatoirement r√©dig√© en LaTeX mais doit-√™tre ¬´¬†propre¬†¬ª\nCombien : 10 √† 15 pages, annexes comprises est une taille raisonnable\nPourquoi : il sera not√© par votre intervenant qui vous en fera un retour\n\n\n\nCe premier livrable est l‚Äôaboutissement de la phase d‚Äô√©tude pr√©alable et de conception g√©n√©rale. Il doit montrer que vous avez compris votre sujet et que vous avez une premi√®re mod√©lisation de votre application. Ainsi cette livraison contiendra :\n\nUn planning d√©taill√© des 3 phases d√©crites ci-dessus (diagramme de Gantt)\nLes diagrammes r√©alis√©s pendant la phase d‚Äôanalyse\nUn document d‚Äôarchitecture sp√©cifiant l‚Äôorganisation logique des sous-syst√®mes techniques (paquetages m√©tier, persistance)\nLes principaux menus de l‚Äôapplication et leurs enchainements si cela a du sens\nLes principaux endpoints de votre application si cela a du sens\nUne description des fonctionnalit√©s de votre application\nUne liste des composants √† impl√©menter ainsi que :\n\nLeur r√¥le\nLa description de leurs d√©pendances r√©ciproques\nLe temps de d√©veloppement pr√©vu pour chacun d‚Äôentre eux\nL‚Äôordre de priorit√© initiale\n\n\n\n\nLe rapport final\nVotre rapport final doit pr√©senter le travail r√©alis√© pendant ces 3 mois. Il est √† d√©poser sur Moodle et contiendra les √©l√©ments ci-dessous.\n\nLe contexte de votre application\nCette partie doit permettre √† une personne externe √† votre projet et sans exp√©rience particuli√®re en informatique de comprendre l‚Äôint√©r√™t de votre travail. Ainsi, il vous est conseill√© de faire relire cette partie par une personne externe √† votre groupe (ami, famille). La r√©daction de cette partie peut commencer tr√®s t√¥t car elle ne repose pas sur des √©l√©ments techniques que vous allez impl√©menter.\n\n√Ä quels besoins r√©pond-elle¬†? Le diagramme de cas d‚Äôutilisation n‚Äôest pas n√©cessaire dans le rapport final¬†;\nQuels sont les utilisateurs¬†de l‚Äôapplication ?\nQuelles sont les donn√©es int√©ressantes de votre application. Si vous utilisez des donn√©es externes pr√©sentez leur source, le format, et les concepts associ√©s. Si vous en produisez, pr√©sentez le format des donn√©es et comment elles peuvent √™tre utilis√©es. Par exemple¬†:\n\nVous r√©cup√©rez des annonces immobili√®res via webscrapping, quel est le site ou quels sont les sites utilis√©s¬†? Quelles donn√©es r√©cup√©rez-vous de la page¬†? Vous pourrez d√©crire plus tard comment vous les r√©cup√©rez¬†;\nVous devez traiter des donn√©es g√©ographiques, comment sont stock√©es vos donn√©es dans votre source¬†? Y-a-t-il des difficult√©s particuli√®res dans ces donn√©es¬†?\nVous r√©cup√©rez des donn√©es d‚Äôun service externe, quel est le sch√©ma de ces donn√©es¬†?\n\n\n\n\nArchitecture g√©n√©rale\n\nEst-ce un module python¬†? Un script sans interaction avec l‚Äôutilisateur¬†? Une application en console¬†? Une application avec un client et un serveur qui communiquent via requ√™te http¬†?\nLes technologies n√©cessaires √† son fonctionnement (python, biblioth√®ques majeures utilis√©es, syst√®me de persistance, sources de donn√©es externes)\nUn sch√©ma d‚Äôarchitecture (pour faire le lien entre les diff√©rents composants de votre application comme votre code, syst√®me de persistance, etc.)\n\n\n\nR√©ponse aux besoins\nComment votre application permet de r√©pondre aux besoins que vous avez d√©crits :\n\nLe fonctionnement votre application :\n\nZoom sur un processus central en le d√©taillant compl√®tement pour que le jury comprenne la logique que vous avez mis en place. Qu‚Äôest-ce que l‚Äôutilisateur fait ? Qu‚Äôest-ce que votre produit fait¬†? Comment interagit-il avec les autres composants¬†? Quelles sont les classes utilis√©es¬†? Il n‚Äôest pas utile de pr√©ciser les m√©thodes appel√©es, sauf si vous pensez que cela a un int√©r√™t. Pour aider le lecteur, vous pouvez ajouter des diagrammes de cas d‚Äôutilisations, mais aussi des sch√©mas divers¬†;\nExplication rapide pour les autres. Votre rapport ne doit pas √™tre un listing des fonctions pythons de votre application¬†;\n\n\nPrivil√©giez la qualit√© des explications √† la quantit√©. Si vous d√©crivez s√©rieusement une fonctionnalit√© centrale int√©ressante, le jury supposera que vous √™tes capable de faire la m√™me chose pour les autres. Vous pouvez illustrer vos propos en utilisant votre diagramme de classe. Cela vous permet¬†:\n\nD‚Äôexpliquer les h√©ritages/associations utilis√©s\nDe pr√©senter les objets m√©tiers et comment ils sont utilis√©s par l‚Äôapplication\nDe mettre en avant une d√©composition en couche, un d√©couplage entre les objets\n\n\n\n\n\n\n\nRemarque\n\n\n\nUn diagramme de classe n‚Äôest pas une finalit√© en soit, il est initialement produit pour servir de boussole lors de l‚Äôimpl√©mentation de votre application. De la m√™me mani√®re, dans votre rapport il doit servir √† guider vos explications.\nAinsi, il n‚Äôest pas n√©cessaire de produire un diagramme de classe unique si celui-ci est illisible. Vous pouvez le d√©composer en petits diagrammes qui vont se concentrer sur des fonctionnalit√©s particuli√®res. De m√™me, il est fortement d√©conseill√© de lister et d√©crire exhaustivement toutes les classes et les m√©thodes.\n\n\n\n\nSyst√®me de stockage\n√Ä quels moments il est utilis√© dans votre application et pourquoi¬†? Vous pouvez mettre en avant l‚Äôutilisation de formes normales.\nEn effet ce projet doit vous permettre de mettre en avant vos acquis de 1A en la mati√®re. Il est inutile de nous pr√©senter l‚Äôint√©gralit√© de vos DAOs\n\n\nOutils mis en place\nLes outils mis en place pour r√©aliser le projet¬†:\n\nL‚Äôorganisation que vous avez choisie dans votre groupe¬†;\nLes outils mis en place et leur utilisation¬†;\nLa d√©marche d‚Äôassurance qualit√©. Le but de cette partie est de montrer que vous avez pris en compte les √©v√®nements ext√©rieurs qui peuvent impacter votre application.\n\nAvez-vous fait des tests¬†? Pourquoi¬†avez-vous test√© ces classes en particulier¬†? Qu‚Äôest-ce que cela vous a apport√©¬†?\nAvez-vous rencontr√© des temps de traitement longs¬†? D‚Äôo√π viennent-ils¬†? Les avez-vous surmont√©s¬†?\nSi votre source de donn√©es venait √† disparaitre mais qu‚Äôune nouvelle source similaire existait, comment cela impacterait-il votre application¬†?\nSi vous avez mis de c√¥t√© des fonctionnalit√©s au cours de votre d√©veloppement, comment peuvent-elles √™tre mis en place dans le futur¬†?\n\n\n\n\nNote individuelle\nLors du rendu du rapport chaque √©l√®ve de chaque groupe joindra une note d√©crivant son exp√©rience au sein du groupe de projet. Cette note devra √™tre ins√©r√©e dans le rapport final en fin de rapport. Dans cette note d‚Äôune page maximum, vous relaterez aussi bien les bonnes pratiques mises en ≈ìuvre que les probl√®mes rencontr√©s.\nVous pouvez adopter un style moins formel que pour le rapport, mais gardez en t√™te que cette note est lue par le jury au m√™me titre que le reste du rapport. Conservez une mise en page correcte pour cette note. Pour vous aider voici des √©l√©ments qui ont leur place dans cette note¬†:\n\nVotre participation effective au projet (chef de projet, code, animation‚Ä¶)\nComment avez-vous v√©cu le projet avec votre groupe. Est-ce difficile¬†? Enrichissant¬†? √âviter les lieux communs, et pr√©f√©rez utiliser des exemples concrets. Vous pouvez mettre en avant des points de tensions qui se sont produits.\nLes enseignements que vous en tirez, ce que vous referiez, ce que vous changeriez. Vous pouvez construire cette partie comme une liste de conseils que vous donneriez √† vos successeurs.\n\nNous vous conseillons la relecture de cette production individuelle par une autre personne (membre de l‚Äô√©quipe, ami, famille) pour limiter les fautes et ainsi vous assurer qu‚Äôelle est compr√©hensible. Cette note personnelle est appr√©ci√©e par les membres du jury, faites-la s√©rieusement et honn√™tement.\n\nBien entendu, cette liste ne d√©finit que les composantes minimales de votre rendu. Chaque groupe de projet est libre de fournir toutes les informations compl√©mentaires qui lui parait pertinentes pour mettre en avant son travail. Cela peut-√™tre¬†: expliquer des choix de conceptions qui vous semblent pertinents, des outils que vous avez utilis√©s ou toute autre information qui vous permet de valoriser votre travail. Vous avez le droit d‚Äôillustrer vos propos avec des figures pour aider le lecteur. Les images qui n‚Äôapportent rien √† votre propos sont √† proscrire.\nL‚Äôordre de pr√©sentation des diff√©rents points, et de leur classement en annexe est libre. La taille optimale de ce rapport est de 25 pages hors annexe. Vous pouvez faire plus long mais dans ce cas posez-vous la question¬†:¬†¬´¬†Ce que j‚Äôajoute est-il n√©cessaire¬†?¬†¬ª. Il n‚Äôest pas obligatoire de le r√©diger en LaTeX. Enfin, un minimum de rigueur est attendu de futurs ing√©nieurs. Un nombre limit√© de coquilles dans votre production est tol√©r√©, par contre si cela nuit √† la compr√©hension de votre rapport vous serez sanctionn√©s.\n\n\n\n\n\n\nRemarque\n\n\n\nDans le cas o√π vous r√©digez votre rapport en LaTeX, faites attention au placement des images. Certains d‚Äôentre vous usent et abusent du package float et l‚Äôoption [H] pour fixer les images.\nCela entraine de gros espaces laiss√©s blancs dans vos rapports et donne une mauvaise impression au lecteur. Privil√©gier l‚Äôoption [htb]. Le placement sera moins pr√©cis, mais limitera ces zones blanches.\n\n\n\n\n\nLe code\nVous cr√©erez une archive contenant tout le contenu de votre d√©p√¥t git, et en particulier le code source de votre application.\nVous d√©poserez ce livrable sur Moodle.\n\n\n\n\n\n\nTaille du r√©po\n\n\n\nAttention √† ne pas inclure dans votre livrable des fichiers trop lourds (&gt; 10Mo), comme par exemple des fichiers de donn√©es.\n\n\nLe code source complet de l‚Äôapplication contenant √† minima :\n\nUn fichier README.md √† la racine du projet pr√©sentant votre projet. Cette page sera r√©dig√©e en anglais et devra¬†:\n\nPr√©senter rapidement votre application (fonctionnalit√©s, besoins auquels elle r√©pond)\nExpliquer comment l‚Äôinstaller\n\nUn fichier requirements.txt avec tous les modules pythons √† installer pour faire fonctionner votre application\nun dossier src contenant votre code source et un fichier main.py ou __main__.py qui permet de lancer votre application\nun fichier data/init_db.sql permettant la cr√©ation des tables et des donn√©es\n\nEntre ce rendu de code et la soutenance, vous avez le droit de modifier votre code. Cependant, ces modifications ne serviront qu‚Äô√† am√©liorer la qualit√© de la d√©monstration car ce nouveau code ne comptera pas pour la notation.\n\n\nLa soutenance\nVous pr√©senterez votre travail devant un jury de 3 personnes :\n\nun pr√©sident de jury (professionnel de l‚Äôinformatique)\nvotre encadrant de projet\nun enseignant informatique de l‚ÄôENSAI\n\nLa soutenance consistera en une pr√©sentation orale de votre logiciel, partag√©e √©quitablement entre les membres du groupe. Elle fera appara√Ætre la m√©thode de d√©veloppement utilis√©e, les choix et options de conception et de programmation retenues.\nVous avez 20 minutes pour r√©aliser votre pr√©sentation. Suivrons ensuite les questions et les retours du jury.\n\n\n\n\n\n\nTiming type\n\n\n\n\nExpos√© : 20 min, dont environ :\n\n12 min de pr√©sentation type diaporama\n8 min de d√©monstration de l‚Äôapplication\nLa gestion de ce temps est libre mais doit √™tre dynamique\nVous pouvez mixer d√©mo et pr√©sentation, c‚Äôest m√™me plut√¥t conseill√©\n\nQuestions du jury : 15 min\nRetours du jury : 10 min\n\n\n\nLe jury est bienveillant et ne cherchera pas √† vous pi√©ger¬†!\n\nQuelques conseils pour cette soutenance :\n\nPr√©sentez bri√®vement les membres de l‚Äô√©quipe\nM√™me si les membres du jury ont lu votre rapport, prenez le temps de pr√©senter sommairement le besoin initial et les donn√©es impliqu√©es s‚Äôil y en a\n\n√âvitez les pr√©sentations catalogues du type : ¬´ On a fait √ßa, √ßa et aussi √ßa ¬ª. Le jury d√©teste, surtout quand c‚Äôest la 4e √©quipe de suite qui raconte la m√™me chose. Soyez un minimum original, prenez un angle d√©cal√©, racontez une histoire !\nPr√©sentez la plus-value de l‚Äô√©quipe :\n\nAvez-vous fait des choix forts¬†?\nAvez-vous mis en place un processus int√©ressant¬†?\nR√©pondez-vous au besoin¬†?\n\nIl n‚Äôest pas n√©cessaire de suivre le m√™me d√©roul√© que le rapport (c‚Äôest d‚Äôailleurs g√©n√©ralement une erreur), ni de repr√©senter le rapport (le jury l‚Äôa lu). Par exemple, si vous avez expliqu√© rapidement une fonctionnalit√© dans le rapport mais qu‚Äôelle vous semble int√©ressante, vous pouvez la d√©tailler plus lors de la soutenance. Le jury aime la nouveaut√©.\nMettez en avant le projet (comment avez-vous travaill√© ces 3 mois) et pas seulement le logiciel produit (vous n‚Äôessayez pas de nous vendre votre application).\nVotre diaporama :\n\nNum√©rotez les diapos !!!\nNe chargez pas trop vos slides en texte\nVous pouvez utiliser des sch√©mas, graphiques, captures d‚Äô√©cran utiles √† la compr√©hension. Faites attention que vos images soient lisible une fois projet√©es.\nNe mettez pas de code, mais du pseudo-code (et uniquement si l‚Äôalgorithme est int√©ressant)\n\nLa d√©mo :\n\nN‚Äôallez pas trop vite !\nNe pr√©sentez pas la cr√©ation / modification de compte, cela n‚Äôa aucune plus-value aux yeux du jury\nSur certains points interessants, prenez le temps d‚Äôexpliquer ce qu‚Äôil se passe dans votre code (√† la mani√®re d‚Äôun diagramme de s√©quence)\nNe d√Ætes pas ‚Äúl‚Äôutilisateur peut faire-ci, faire √ßa‚Äù. Nous ne sommes pas √† Hollywood mais un petit effort quand m√™me, personnalisez votre d√©mo, jouez un r√¥le !\n\n\n\n\n\n\n\nImportant\n\n\n\nTravaillez votre introduction et votre conclusion !\nNe terminez pas votre pr√©sentation par : ‚ÄúVoil√† c‚Äôest fini‚Ä¶‚Äù.\nSoyez solidaires !\n\n\n\n\n\nNotation finale\nLa note finale du projet se r√©partit comme suit :\n\nDossier d‚Äôanalyse et investissement dans le projet (1/3)\nRapport final et investissement dans le projet (1/3)\nSoutenance (1/3)\n\nLe code est not√© √† part. Il compte pour un tiers de la note de Compl√©ments d‚Äôinformatique.\n\n\n\n\n\n\nP√©nalit√©s\n\n\n\nDes malus seront appliqu√©s √† votre note si :\n\nvous avez des absences injustifi√©es en suivi de projet et/ou en TP de Compl√©ments d‚Äôinfo\nvous n‚Äôavez pas √©t√© pr√©sent dans les locaux de l‚ÄôENSAI durant l‚Äôimmersion\nvous n‚Äôavez pas rempli les fichiers de suivi hebdomadaires\nvotre participation aux travaux de votre √©quipe est jug√© insuffisant"
  },
  {
    "objectID": "doc/projet/notice-eleves.html#calendrier",
    "href": "doc/projet/notice-eleves.html#calendrier",
    "title": "Notice √©l√®ves",
    "section": "Calendrier",
    "text": "Calendrier\n\n\n\nDate\nSujet\n\n\n\n\nvendredi 6 septembre\nSuivi 1\n\n\nvendredi 13 septembre\nSuivi 2\n\n\nvendredi 27 septembre\nSuivi 3\n\n\nsamedi 5 octobre 12h00\nDossier d‚ÄôAnalyse\n\n\nvendredi 11 octobre\nSuivi 4\n\n\n21 au 23 octobre\n3j immersion (Suivi 5 et 6)\n\n\nvendredi 15 novembre\nSuivi 7\n\n\nsamedi 23 novembre 20h00\nRapport final et Code\n\n\njeudi 12 d√©cembre\nSoutenances\n\n\n\n\nImmersion\nLes 21, 22 et 23 octobre aura lieu une p√©riode d‚Äôimmersion. Pendant ces 3 jours, vous n‚Äôaurez pas cours et pourrez avancer votre projet. La pr√©sence dans l‚Äô√©cole est obligatoire et sera contr√¥l√©e.\n√Ä la fin de ces 3 jours, avec un travail s√©rieux et efficace, vous devriez avoir bien avanc√© la phase de code (&gt; 80 %) et commenc√© le squelette du rapport final. Ainsi, vous serez beaucoup plus sereins pour attaquer la derni√®re ligne droite en novembre.\nVous verrez votre tuteur le premier jour pour qu‚Äôil vous aide √† prioriser vos travaux, et le dernier pour vous aider. Une d√©monstration, m√™me limit√©e, de votre application sera demand√©e le mercredi."
  },
  {
    "objectID": "doc/tp/tp5.html",
    "href": "doc/tp/tp5.html",
    "title": "Git et Cr√©ation d‚Äôune IHM",
    "section": "",
    "text": "Note\n\n\n\nAncien TP4 dont une partie du contenu a √©t√© d√©plac√© au TP1."
  },
  {
    "objectID": "doc/tp/tp5.html#bilan-des-trois-premiers-tp",
    "href": "doc/tp/tp5.html#bilan-des-trois-premiers-tp",
    "title": "Git et Cr√©ation d‚Äôune IHM",
    "section": "1 Bilan des trois premiers TP",
    "text": "1 Bilan des trois premiers TP\nSi l‚Äôon reprend le mod√®le en couches pr√©sent√© en cours, voici ce que l‚Äôon a fait depuis le d√©but des TP :\n\n\n1.1 La couche service\nActuellement notre couche service est bien maigre. En effet notre application n‚Äôa aucune logique m√©tier. On a bien des objets m√©tiers que l‚Äôon persiste mais aucune r√©elle application derri√®re. La raison √† ce manque provient du fait que cette couche est la partie la plus longue √† d√©velopper car elle contient la logique m√©tier de l‚Äôapplication.\nEt le but de ces TP n‚Äôest pas de vous montrer comment faire une petit application type jeu Pok√©mon en console. Ils ont pour vocations √† vous montrer une architecture de base en couche et vous pr√©senter comment la r√©aliser. Dans votre projet, il est possible que ce soit la couche service qui vous demande le plus de travail.\n\n\n\n1.2 La couche contr√¥leur\nLa notion de contr√¥leur apparait avec le design pattern MVC (Model-View-Controler). Mais c‚Äôest un patron de conception beaucoup trop complexe pour faire un simple affichage en console.\n√Ä la place vous allez utiliser le patron Model-View-Presenter qui est plus simple car il reprend le principe de couches qui se succ√®dent.\nIl n‚Äôy aura donc pas de couche Controleur mais une couche View qui fera office d‚ÄôIHM et appelera directement les services n√©cessaires.\n\n\n\n1.3 La couche view\nLe fonctionnement est le suivant lorsque vous lancez l‚Äôapplication :\n\nvous arrivez sur une vue d‚Äôaccueil qui propose diff√©rents choix\nselon le choix, z√©ro, un ou plusieurs services sont appel√©s\npuis vous arrivez vers une nouvelle vue (ou √©ventuellement resterez sur la m√™me)\n\nExemple :\n\nVous √™tes sur la Vue d‚Äôaccueil et vous s√©lectionner se connecter\nVous basculez vers la Vue de connexion\n\ndans cette vue, on vous demande de saisir user et password\nune fois la saisie termin√©e, le Service des utilisateur va √™tre appel√©\nce service a une m√©thode verification_connexion()\n\ncette m√©thode va appeler la DAO Utilisateur pour v√©rifier que l‚Äôutilisateur et son mot de passe existent bien en base de donn√©es\n\n\nsi la v√©rification est ok, vous basculez vers la Vue Menu utilisateur o√π va par exemple s‚Äôafficher la liste des actions autoris√©es\n‚Ä¶"
  },
  {
    "objectID": "doc/tp/tp5.html#une-session-pour-les-gouverner-toutes",
    "href": "doc/tp/tp5.html#une-session-pour-les-gouverner-toutes",
    "title": "Git et Cr√©ation d‚Äôune IHM",
    "section": "2 Une session pour les gouverner toutes",
    "text": "2 Une session pour les gouverner toutes\nL√† vous pouvez vous dire :\n\nok on va se balader de vues en vues, √ßa √ßa va\nmais imaginons l‚Äôexemple suivant :\n\non passe par la Vue de connexion et on se connecte avec l‚Äôutilisateur Michel\non arrive sur la Vue Menu utilisateur et on se balade dans les diff√©rentes vues\nun peu plus tard, on arrive sur la Vue d‚Äôajout de Pokemon, on s√©lectionne celui qui nous plait et on valide\ncela va aboutir √† l‚Äôappel d‚Äôune m√©thode DAO du type ajouter_pokemon(utilisateur, pokemon)\nCette m√©thode a 2 arguments\n\npokemon : ok facile √† r√©cup√©rer, on vient juste avant de le s√©lectionner\nutilisateur : l√† c‚Äôest moins facile car la derni√®re fois qu‚Äôon avait l‚Äôobjet utilisateur √† port√©e c‚Äô√©tait dans la Vue de connexion\n\n\nEst-ce que une fois connect√©, on doit passer l‚Äôutilisateur en param√®tre de toutes les m√©thodes que l‚Äôon va appeler ?\n\nHeureusement NON, ce serait trop compliqu√©\nüí° c‚Äôest ici que l‚Äôobjet Session va nous √™tre utile\n\n\nDans notre Session, nous allons pouvoir stocker des objets utiles, par exemple l‚Äôutilisateur actif.\nAinsi, une fois connect√©, on stocke l‚Äôutilisateur en session et on peut se servir de cet objet √† tout moment !\nVoici les liens entre notre Session et nos Views :\n\n\n\n\n\nclassDiagram\n\nclass Session{\n    &lt;&lt;singleton&gt;&gt;\n    user_name : str\n    selected_pokemon : AbstractPokemon\n}\n\nclass AbstractView{\n    &lt;&lt;abstract&gt;&gt;\n    +display_info()* None\n    +make_choice()* AbstractView\n}\n\nclass StartView{\n    +display_info() None\n    +make_choice() AbstractView\n}\n\nclass ListPokemonView{\n    +display_info() None\n    +make_choice() AbstractView\n}\n\nclass ListAttackView{\n    +display_info() None\n    +make_choice() AbstractView\n}\n\nSession &lt;..AbstractView: \"use\"\n\nAbstractView &lt;|-- StartView\nAbstractView &lt;|-- ListPokemonView\nAbstractView &lt;|-- ListAttackView\n\n\n\n\n\n\nToute nos Views vont h√©riter de la classe AbstractView. Cette classe va contenir deux m√©thodes abstraites :\n\ndisplay_info() : qui va juste d√©terminer l‚Äôaffichage en console\nmake_choice() : qui va g√©rer les choix de l‚Äôutilisateur et l‚Äôenvoyer vers une autre page.\n\nEn plus de cela nous allons g√©rer tous les attributs utilis√©s par les View dans un objet Session qui sera un singleton ce qui nous assurera que chaque acc√®s √† cet objet retourne la m√™me instance et donc les m√™mes valeurs stock√©es.\nCette architecture vous permet de s√©parer vos diff√©rents menu en fichiers s√©par√©s et d‚Äôavoir un fonctionnement simple car chaque menu retourne un autre menu simplement.\n‚ö†Ô∏è La cr√©ation de vos menus peut g√©n√©rer des probl√®mes de d√©pendances circulaires. En effet si la page A envoie sur la page B et la page B envoie sur la page A, en fonction de la fa√ßon dont vous g√©rez vos imports vous allez voir un probl√®me de d√©pendances circulaires. Quand le probl√®me se pr√©sentera voici 2 solutions possibles :\n\nremplacer from X import Y en import Y as name\nd√©placer vos imports dans la fonction qui en a besoin"
  },
  {
    "objectID": "doc/tp/tp5.html#inquirerpy",
    "href": "doc/tp/tp5.html#inquirerpy",
    "title": "Git et Cr√©ation d‚Äôune IHM",
    "section": "3 InquirerPy",
    "text": "3 InquirerPy\nPour nous faciliter la gestion de la console nous allons utiliser la biblioth√®que python InquirerPy. Elle permet de cr√©er facilement des applications interactives en console. Le projet est bien document√© avec plusieurs exemples de code, faciles √† transposer.\n\nLancez le main.py et testez un peu l‚Äôapplication\nRegardez les fichiers du package view pour essayer de comprendre comment fonctionnent les vues. Le principe est toujours le m√™me lorsque l‚Äôon arrive sur une nouvelle vue :\n\non r√©pond aux questions demand√©es\nun traitement est √©ventuellement fait (appel √† des services)\non bascule vers une autre vue\n\n\n\n3.1 Mes premi√®res View\n‚úçHand on 3\nR√©partissez vous le travail entre membre du groupe pour impl√©menter les Views suivantes :\n\nAffichage Pok√©mon:\n\nPokemonListView : qui permet de visualiser 30 Pok√©mons sommairement. Il est possible de s√©lectionner un pok√©mon pour aller sur PokemonDetailsView. Vous pouvez permettre un retour arri√®re sur la StartView si vous le souhaitez.\nPokemonDetailsView : qui affiche les d√©tails du Pok√©mon s√©lectionn√© comme ses statistiques et ses attaques. Renvoie sur la StartView ou PokemonListeView en fonction du choix de l‚Äôutilisateur.\n\nAffichage attaque:\n\nAttackListView : qui permet de visualiser 50 attaques sommairement et d‚Äôen s√©lectionner une pour aller sur AttackDetailsView. Vous pouvez permettre un retour arri√®re sur la StartView.\nAttackDetailsView : qui affiche les d√©tails de l‚Äôattaque s√©lectionn√©e, comme par exemple ses caract√©ristiques (name, power, description), mais √©galement quels sont les Pok√©mons qui peuvent l‚Äôapprendre. Renvoie sur la StartView ou AttackListView en fonction du choix de l‚Äôutilisateur.\n\nCreatePokemonView : qui permet de cr√©er un Pok√©mon et le mettre en session. Apr√®s validation de l‚Äôutilisateur on retourne sur StartView\n\nQuelques astuces :\n\nPokemonService dispose d‚Äôune m√©thode get_pokemon_from_webservice(limit:int, offset:int) pour r√©cup√©rer des pok√©mons de la base\nAttackService dispose d‚Äôune m√©thode get_attacks_from_webservice(limit:int, offset:int) pour r√©cup√©rer des attaques de la base\nde nombreux exemples sont disponibles sur la doc InquirerPy\n\nQuand vous avez termin√© une classe, faites un commit, puis poussez sur le d√©p√¥t distant.\n\nMerci d‚Äôavoir particip√© et Vive les Pokemons !"
  },
  {
    "objectID": "doc/tp/tp3.html",
    "href": "doc/tp/tp3.html",
    "title": "Webservices et formats de donn√©es",
    "section": "",
    "text": "üò± Comme vous pouvez le constater, le sujet de ce TP est lui aussi long. Cela ne doit pas vous effrayer.\nIl m√©lange explications compl√®tes et manipulations pour √™tre au maximum autosuffisant.\nVous n‚Äôallez surement pas terminer le sujet, ce n‚Äôest pas grave. Il est l√† pour vous aider lors du projet informatique.\n\n\n\n\n\n\nObjectifs\n\n\n\nDans ce TP vous allez :\n\nFaire des appels √† un webservice √† la main avec Insomnia\nFaire des appels √† un webservice avec la biblioth√®que python requests\nD√©couvrir la page swagger d‚Äôun webservice\nManipuler diff√©rents formats de donn√©es\nCr√©er un webservice avec le framework python fastAPI"
  },
  {
    "objectID": "doc/tp/tp3.html#avant-de-commencer",
    "href": "doc/tp/tp3.html#avant-de-commencer",
    "title": "Webservices et formats de donn√©es",
    "section": "",
    "text": "üò± Comme vous pouvez le constater, le sujet de ce TP est lui aussi long. Cela ne doit pas vous effrayer.\nIl m√©lange explications compl√®tes et manipulations pour √™tre au maximum autosuffisant.\nVous n‚Äôallez surement pas terminer le sujet, ce n‚Äôest pas grave. Il est l√† pour vous aider lors du projet informatique.\n\n\n\n\n\n\nObjectifs\n\n\n\nDans ce TP vous allez :\n\nFaire des appels √† un webservice √† la main avec Insomnia\nFaire des appels √† un webservice avec la biblioth√®que python requests\nD√©couvrir la page swagger d‚Äôun webservice\nManipuler diff√©rents formats de donn√©es\nCr√©er un webservice avec le framework python fastAPI"
  },
  {
    "objectID": "doc/tp/tp3.html#appeler-un-webservice-√†-la-main",
    "href": "doc/tp/tp3.html#appeler-un-webservice-√†-la-main",
    "title": "Webservices et formats de donn√©es",
    "section": "1 Appeler un webservice √† la main",
    "text": "1 Appeler un webservice √† la main\nLa premi√®re partie de ce TP ne n√©cessite pas d‚Äô√©crire du code, mais seulement de faire des requ√™tes √† un webservice en utilisant le logiciel Insomnia install√© sur votre machine.\n\n1.1 Webservices\n\n\n\n\n\n\nNote\n\n\n\nWebservice : le terme webservice est un terme vaste et il serait compliqu√© d‚Äôen donner une d√©finition courte (article wikipedia).\nDans le cadre du projet un webservice d√©signe une application accessible via le protocole HTTP (HyperText Transfer Protocol) qui respecte g√©n√©ralement l‚Äôarchitecture REST (REpresentational State Transfer).\nMais il en existe d‚Äôautre comme SOAP (Simple Objet- Access Protocol) ou RPC (Remote Procedure Call)\n\n\nEn d‚Äôautres termes, un webservice est une application accessible via le web que l‚Äôon va pouvoir requ√™ter soit :\n\npour obtenir des ressources\npour modifier les ressources accessibles.\n\nUn webservice peut seulement avoir pour but d‚Äô√™tre une point d‚Äôacc√®s unique et normalis√© √† des donn√©es (comme une interface √† une base de donn√©es), mais il peut √©galement √™tre une mani√®re de contr√¥ler un syst√®me d‚Äôinformations (lancer des travaux, les mettre en attente, r√©cup√©rer des r√©sultats‚Ä¶)\nLes webservices utilisent le protocole HTTP qui est le protocole du web (et pas d‚Äôinternet). C‚Äôest celui que vous utilisez sans le savoir avec votre navigateur web. Requ√™ter un webservice se fait presque comme requ√™ter une page web.\nPour cela il vous faut :\n\nl‚Äôadresse de la ressource, son Uniforme Resource Identifier (URI)\n\nc‚Äôest une notion plus g√©n√©rale que les Uniforme Resource Locator (URL)\n\nune m√©thode (GET, POST, PUT, DELETE, liste des m√©thodes)\net potentiellement des donn√©es\n\n\n\n1.2 Premi√®res requ√™tes GET\n\nLancez le programme Insomnia\n\nIcone Windows en bas √† gauche &gt; 5-Informatique\n\nCr√©ez une collection de requ√™te\n\nbouton Create √† droite\npuis cliquez sur votre collection\n\nCr√©ez une nouvelle requ√™te\n\nen appuyant sur CTRL+N\ndonnez lui un nom\nv√©rifiez que c‚Äôest bien une requ√™te de type GET\n\n\nDans la barre d‚Äôadresse, testez les requ√™tes des webservices ci-dessous :\n\nRegardez la r√©ponse dans la partie droite de votre √©cran\nQuelles sont les similarit√©s entre les r√©ponses ?\n\n\n1.2.1 Carbon intensity\nWebservice sur les √©missions carbone du Royaume-Uni\n\nDocumentation\n\nLes endpoints\nLes sch√©mas\n\n\nRequ√™tes √† tester :\n\napi.carbonintensity.org.uk/intensity\napi.carbonintensity.org.uk/intensity/date/{date}\n\nen rempla√ßant {date} par la date de votre choix au format YYYY-MM-DD\n\n\n\n\n1.2.2 Rennes M√©tropole en acc√®s libre\nWebservice Rennes M√©tropole en acc√®s libre\nR√©cup√©rez les donn√©es de divers datasets :\n\nhttps://data.rennesmetropole.fr/api/explore/v2.1/catalog/datasets/&lt;dataset_id&gt;/records\n\nRemplacez &lt;dataset_id&gt; par une des valeurs ci-apr√®s\n\nmenus-cantines\neco-counter-data\nresultats-des-elections-municipales-2020-a-acigne\nAjoutez √† la fin de l‚ÄôURI le param√®tre rows\n\npour faire varier le nombre de lignes que vous recevez\najoutez simplement ?rows=N avec N le nombre de lignes\n\n\n\n\n1.2.3 Webservice de votre projet\n\nExplorez quelques m√©thodes utiles du webservice de votre projet informatique (voyez cela avec votre tuteur).\n\n\n\n\n1.3 Requ√™tes avanc√©es\nApr√®s avoir explor√© quelques webservices externes, vous allez travaillez avec un webservice h√©berg√© √† l‚ÄôENSAI sp√©cialement cr√©√© pour ces TP.\nToujours avec Insomnia :\n\nFaites une requ√™te avec la m√©thode GET sur la ressource suivante. Qu‚Äôobtenez-vous ?\n\nweb-services.domensai.ecole/attack\n\nFaites une requ√™te avec la m√©thode GET sur la ressource suivante. Qu‚Äôobtenez-vous ?\n\nweb-services.domensai.ecole/attack/{identifier}\nen rempla√ßant {identifier} par le nom ou l‚Äôid d‚Äôune attaque que vous venez de r√©cup√©rer\n\nFaites une requ√™te avec la m√©thode GET sur la ressource suivante. Qu‚Äôobtenez-vous ?\n\nweb-services.domensai.ecole/attack?type_attack_id={id_type}\nen rempla√ßant {id_type} par un entier entre 1 et 4.\n\nFaites une requ√™te avec la m√©thode GET sur la ressource suivante\n\nweb-services.domensai.ecole/attack?type_attack_name={type attack}\nen rempla√ßant {type attack} par special attack ou physical attack ou fixed damage ou status attack\n\nFaites une requ√™te de type POST sur la ressource suivante\n\nweb-services.domensai.ecole/attack\nCliquez sur Body, puis JSON, coller le texte ci-dessous, puis remplacez les valeurs des attributs pour cr√©er votre propre attaque\n\n{\n  \"name\": \"An awesome name\",\n  \"attack_type\": \"physical attack\"/\"physical attack\"/\"fixed damage\"/\"status attack\",\n  \"power\": 0,\n  \"accuracy\": 0,\n  \"element\": \"An awesome element\",\n  \"description\": \"An awesome description\"\n}\nFaites une requ√™te avec la m√©thode GET sur la ressource suivante\n\nweb-services.domensai.ecole/attack/{identifier}\nen rempla√ßant {identifier} par le nom ou l‚Äôid de l‚Äôattaque que vous venez de cr√©er\n\n\n\n\n1.4 Swagger\nDans votre navigateur web allez sur la page http://web-services.domensai.ecole/docs.\nCela vous am√®ne sur la page swagger du webservice. Cette page recense tous les endpoints du webservice, et comment les utiliser. Essayez via l‚Äôinterface de :\n\nmodifier une attaque\nsupprimer une attaque\nafficher une liste de pok√©mon\najouter un pok√©mon"
  },
  {
    "objectID": "doc/tp/tp3.html#webservice-en-python",
    "href": "doc/tp/tp3.html#webservice-en-python",
    "title": "Webservices et formats de donn√©es",
    "section": "2 Webservice en Python",
    "text": "2 Webservice en Python\nAujourd‚Äôhui, les plus grands consommateurs de webservices sont les machines. Nous allons voir comment automatiser des appels √† un webservice en Python.\n\n\n\n\n\n\nNote\n\n\n\nAujourd‚Äôhui beaucoup d‚Äôapplications web (par exemple Facebook, Netflix, Dailymotion, Uber) utilisent ce que l‚Äôon appelle des architectures ‚Äúmicro services‚Äù.\nLes √©changes entre leurs composants applicatifs (par exemple entre leur interface homme machine (IHM) et leurs services internes) se font via des webservices √† but unique. Cela permet d‚Äôavoir des modules d√©coupl√©s les uns des autres car ils communiquent uniquement via des requ√™tes HTTP, ou avec des syst√®mes de gestion d‚Äô√©v√®nements. Ils ont seulement √† savoir comment ils doivent communiquer les uns avec les autres et pas le fonctionnement interne des autres modules.\nCela demande de bien documenter ses webservices et de g√©rer √âNORM√âMENT d‚Äôapplications en parall√®le. Amazon, Google, Facebook peuvent se le permettre, par contre une petite entreprise de 10 employ√©s non.\n\n\n\n2.1 La biblioth√®que requests\nLe principe va rester le m√™me que faire une requ√™te √† la main avec Insomnia. Vous allez utiliser la biblioth√®que requests pour avoir seulement √† remplir les parties int√©ressantes de vos requ√™tes.\nPour faire une requ√™te GET vous allez simplement faire :\nimport requests\n\nresponse = requests.get(\"http://mon-webservice.com\") \nEx√©cuter cette ligne de code va :\n\nEnvoyer la requ√™te GET au serveur que vous contactez\nStockez le r√©sultat dans la variable response\n\nCette variable response est un objet, et comme tout objet elle a des attributs et des m√©thodes, par exemple :\n\nresponse.text : le corps du r√©sultat sous forme de string en laissant requests inf√©rer l‚Äôencodage (cela fonctionne souvent)\n\nProbl√®me : vous avez un string, et ce n‚Äôest pas le meilleur format de donn√©es √† manipuler\n\nresponse.json() : le corps du r√©sultat comme un dictionnaire.\n\nC‚Äôest ce que vous allez faire le plus souvent car le format json est un format simple √† manipuler\n\nresponse.encoding : l‚Äôencoding de votre requ√™te (utile en cas de probl√®me d‚Äôencoding)\nresponse.status_code : le statut de la requ√™te. les principaux sont :\n\n200 : retour g√©n√©ral pour dire que tout c‚Äôest bien pass√©\n201 : ressource cr√©√©e avec succ√®s\n202 : requ√™te accept√©e, sans garantie du r√©sultat (par exemple dans un syst√®me asynchrone)\n400 : erreur de syntaxe dans la requ√™te\n401 : erreur, une authentification est n√©cessaire\n403 : la ressource est interdite (droits insuffisants)\n404 : ressource non trouv√©e\n405 : une mauvaise m√©thode http a √©t√© utilis√©e\n500 : erreur c√¥t√© serveur\n503 : service temporairement indisponible\n\n\nPour r√©sumer, les r√©sultats :\n\n2xx indiquent un succ√®s\nun r√©sultat 4xx ou 5xx un probl√®me\n\n\n\n2.2 Exemples d‚Äôutilisation\nLe principe sera toujours le m√™me :\n\nVous lancez la requ√™te\nVous v√©rifiez si le statut est OK\nVous r√©cup√©rez le json et traitez le r√©sultat (affichage, convertion en dataframe‚Ä¶)\n\n\nMod√®leMenus-cantines\n\n\nimport requests\nimport json\n\nresponse = requests.get(\"http://mon-webservice.com\")\n\nif response.status_code != 200:\n    raise Exception(\n        f\"Cannot reach (HTTP {response.status_code}): {response.text}\"\n    )\nelse:    \n    print(json.dumps(response.json(), indent=2))       # JSON Pretty print\n\n\nimport requests\nimport pandas as pd\n\nurl = \"https://data.rennesmetropole.fr/api/explore/v2.1/catalog/datasets/menus-cantines/records?limit=20\"\nreq = requests.get(url)\n\nif req.status_code == 200:\n    raw_menus = req.json()\n    records = raw_menus.get(\"results\")\n\n    if records:\n        menus = pd.DataFrame(records)\n        print(menus)\n    else:\n        print(\"No records found.\")\nelse:\n    print(f\"Failed to retrieve data. Status code: {req.status_code}.\\n{req.text}\")\n\n\n\n\n\n2.3 Mise √† jour de votre d√©p√¥t git\n\n\n\n\n\n\nCaution\n\n\n\nSi vous n‚Äôavez pas le d√©p√¥t sur votre machine, cr√©ez un clone en suivant la section Clone du d√©p√¥t du TP2.\n\n\n\nOuvrez Visual Studio Code\nOuvrez votre d√©p√¥t local\n\nFile &gt; Open Folder\nAllez dans le dossier P:\\Cours2A\\UE3-Complements-info\\TP2\nCliquez une seule fois sur üìÅ ENSAI-2A-complement-info-TP\nPuis sur le bouton S√©lectionner un dossier\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\nV√©rifiez que le dossier parent dans l‚ÄôExplorer VS Code est ENSAI-2A-complement-info-TP\n\nL‚ÄôExplorer, √† gauche, permet d‚Äôexplorer l‚Äôarborsence des fichiers et dossiers\n\n\n‚ö†Ô∏è Si le dossier parent n‚Äôest pas le bon, recommencez l‚ÄôOpen Folder o√π vous aurez de gros soucis par la suite !!!\n\n\n\nOuvrez le Git Bash int√©gr√© dans VS Code\n\nTerminal &gt; New Terminal (ou CTRL + √π)\nPassez sur la branche du TP3 et mettez-l√† √† jour\n\nsi vous ne l‚Äôavez pas fait √† la fin du dernier TP, commencer par un add et un commit\ngit switch tp3-base\ngit pull\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nPour pour v√©rifier que tout fonctionne :\n\nlancez les tests unitaires du package business_object\n\ndans le terminal : python -m pytest -v src/tests/test_business_object/\n\nlancez le main : python src/main.py\n\nS‚Äôil vous manque des packages, suivez les instructions du README.\n\n\n\n\n2.4 Mes premi√®res requ√™tes en Python\n\nOuvrez le fichier /src/client/attack_client.py\nCompl√©tez la m√©thode get_attack(int) qui :\n\nprend en param√®tre un id d‚Äôattaque\nva chercher toutes les informations disponibles sur cette attaque\nretourne un objet de type AbstractAttack\n\n\n\n\n\n\n\n\nTip\n\n\n\nPour vous aider, observez la m√©thode instantiate_attack() de la classe AttackFactory (business_object).\nRegardez le fonctionnement de cette m√©thode et utilisez la.\n\n\n\nCr√©ez la m√©thode get_all_attacks()\n\nretourne la liste de tous les attaques disponibles sous la forme d‚Äôune liste d‚Äôobjets AbstractAttack\n\nV√©rifiez que vos 2 m√©thodes fonctionnent\n\nLancez les tests unitaires du package test_client\n\n\n\n\n2.5 Les requ√™tes plus complexes\nPour le moment nous nous sommes concentr√©s sur les requ√™tes GET (simple lecture des donn√©es).\nMais il est bien s√ªr possible d‚Äôen faire d‚Äôautres. Par exemple pour les requ√™tes POST, PUT ou DELETE. Voici la syntaxe :\npost = requests.post(\"http://example.org\", json = {'key':'value'})\nput = requests.put(\"http://example.org\", json = {'key':'value'})\ndelete = requests.delete(\"http://example.org\")\nComme vous le voyez, les syntaxes sont tr√®s proches de la syntaxe de la m√©thode GET. Nous avons seulement ajout√© pour certaines requ√™tes des donn√©es. C‚Äôest ce que vous avez fait plus t√¥t avec Insomnia. Pour passer des param√®tres √† votre requ√™te je vous conseille n√©anmoins de pr√©f√©rer ce genre de syntaxe :\nurl = \"http://example.org\"\ndata = {'key':'value'}\npost = requests.post(url, json = data)\nFonctionnellement, c‚Äôest la m√™me chose, mais il vaut mieux d√©finir les √©l√©ments hors de la requ√™te pour ne pas se perdre.\nIl est √©galement possible de passer des ent√™tes http en ajoutant le param√®tre headers √† la fonction utilis√©e.\nheaders = {'accept': 'application/xml'}\nrequests.get('http://example.org', headers=headers)\n\n\n2.6 Requ√™tes avanc√©es en python\nDans le module attack_client.py impl√©mentez les m√©thodes suivantes :\n\ncreate_attack(AbstractAttack)\n\nprend une AbstractAttack en param√®tre\ncr√©e une nouvelle ressource dans notre webservice\n\nupdate_attack(AbstractAttack)\n\nprend une AbstractAttack en param√®tre\nmodifie la ressource associ√©e dans notre webservice\n\ndelete_attack(AbstractAttack)\n\nprend une AbstractAttack en param√®tre\nsupprime la ressource associ√©e dans notre webservice\n\nTestez vos m√©thodes"
  },
  {
    "objectID": "doc/tp/tp3.html#codez-un-webservice-en-python",
    "href": "doc/tp/tp3.html#codez-un-webservice-en-python",
    "title": "Webservices et formats de donn√©es",
    "section": "3 Codez un webservice en Python",
    "text": "3 Codez un webservice en Python\n\n\n\n\n\n\nNote\n\n\n\nJusqu‚Äô√† maintenant vous avez utilis√© des webservices existants. Maintenant vous allez cr√©er votre propre webservice.\n\n\nAvec les outils √† disposition aujourd‚Äôhui, il est facile de faire un webservice soit m√™me.\nIl y a trois leaders sur le march√© actuellement pour faire un webservice REST en Python :\n\nDjango REST\nFlaskRESTful\nFastAPI\n\nChacun √† ses avantages et inconv√©nients. Django est s√ªrement le plus complet mais le plus lourd, Flask et FastApi sont plus l√©gers et rapides √† mettre en place. Le gros avantage de FastApi est la simplicit√© pour cr√©er une page swagger de documentation.\nVoici le code minimal d‚Äôun webservice REST avec FastAPI (documentation officielle)\nfrom fastapi import FastAPI\n\n# On instancie le webservice\napp = FastAPI()\n\n# Cr√©ation d'un enpoint qui r√©pond √† la m√©thode GET √† l'adresse \"/\" qui va retourne le message \"Hello World\"\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello World\"}\n\n# Lancement de l'application sur le le port 80\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=80)\nAppeler la ressource ‚Äú/‚Äù du webservice va retourner le json : {\"message\": \"Hello World\"}\nVoici un exemple plus complet inspir√© de la documentation officielle (vous voulez cr√©er un webservice pour exposer vos todos)\nfrom fastapi import FastAPI\nfrom pydantic import BaseModel\nfrom starlette import status\nimport uvicorn\n\n# On instancie le webservice\napp = FastAPI()\n\nclass Todo(BaseModel):\n    id : int\n    content : str\n\ntodos = {1 : Todo(1,\"Step 1 : Learn python\")\n        , 2 : Todo(2,\"Step 2 : Work on the IT project\")\n        , 3 : Todo(3,\"Step 3 : ???\")\n        , 4 : Todo(4,\"Step 4 : Profit\")}\n\n# D√©finition du endpoint get /todo\n@app.get(\"/todo\")\nasync def get_all_todo():\n    return todos.values()\n\n# D√©finition du endpoint get /todo/{id_doto}\n@app.get(\"/todo/{id_toto}\")\nasync def get_todo_by_id(id_toto : int = Path(..., description = \"The `id` of the todo you want to get\")):\n    if todos.get[id_toto] :\n        return todos.get[id_toto]\n    else :\n        return JSONResponse(status_code=status.HTTP_404_NOT_FOUND)\n\n# D√©finition du endpoint post /todo\n@app.post(\"/todo\", todo, status_code=201)\nasync def post_todo(todo:Todo):\n    if not todos.get(todo.id):\n        return JSONResponse(status_code=status.HTTP_409_CONFLICT)\n    else :\n        todos[todo.id] = todo\n        return todo\n\n# Lancement de l'application sur le le port 8XXX avec XXX les 3 derniers num√©ros de votre id\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8XXX)\nCe code va cr√©er un web service qui va r√©pondre aux requ√™tes suivantes :\n\nGET host/todo : retourne toutes les t√¢ches √† faire\nGET host/todo/{todo_id} : retourne la t√¢che derri√®re l‚Äôid en param√®tre\nPOST host/todo/ : ajoute la t√¢che pass√©e en corps de la r√™quete\n\nFastAPI s√©rialise pour vous les objets que vous retournez. Donc pas besoin de mettre en forme vos donn√©es. N√©anmoins, pour plus de clart√©, vous pouvez utiliser des classes BaseModel. Ce sont des classes qui ne vont contenir que des attributs que vous pouvez d√©clarer sans constructeur :\nclass Todo(BaseModel):\n    id : int\n    content : str\nCes classes peuvent √™tre utilis√©es en sortie de votre webservice, comme en entr√©e (ligne 33). FastApi va faire pour vous tout une s√©rie de contr√¥les sur les types des variables et renvoyer une erreur au client si sa requ√™te n‚Äôest pas bien format√©e.\nFondamentalement un webservice est une application comme les autres, mais au lieu d‚Äôavoir une interface graphique comme on en a l‚Äôhabitude en tant qu‚Äôhumain, l‚Äôinterface est une interface HTTP qui va accepter des requ√™tes et envoyer des r√©sultats. Ainsi le diagramme de s√©quence des diff√©rentes couches qui vont √™tre impliqu√©es dans une requ√™te GET pour r√©cup√©rer une ressource va ressembler √† cela. Reprenons le mod√®le 3 couches vu en cours.\n\n\n\n\n\nsequenceDiagram\n    participant U as User\n    participant R as Webservice\n    participant S as Service\n    participant D as DAO\n    participant B as Base de donn√©es\n    U -&gt;&gt; R : HTTP requ√™te\n    R -&gt;&gt; S : get_by_id()\n    S -&gt;&gt; D : find_by_id()\n    D -&gt;&gt; B : requ√™te SQL (psycopg)\n    B -&gt;&gt; D : curseur SQL (psycopg)\n    D -&gt;&gt; S : instance objet metier\n    S -&gt;&gt; R : instance objet metier\n    Note over S,R: l'objet est potentiellement alt√©r√©\n    R -&gt;&gt; U : R√©ponse HTTP\n\n\n\n\n\n\n\n3.1 Mon premier webservice\n\nOuvrez le fichier app.py\nLancez ce fichier\nTestez les requ√™tes suivantes :\n\nGET http://localhost/hello\nGET http://localhost/hello/everybody\n\nArr√™tez le webservice\n\nCliquez dans le terminal de VSCode puis CTRL + C\n\n\nEn utilisant la liste de personnages d√©finie dans le fichier app.py, ajoutez les endpoints suivants :\n\nGET localhost:80/character : retournera un json contenant une liste des personnages\nPUT localhost:80/character/{id} qui modifiera le nom du personnage √† l‚Äôindex {id} √† partir d‚Äôun body\nDELETE localhost:80/character/{id} qui supprimera l‚Äô√©l√©ment √† l‚Äôindex {id}\n\nPour tester les endpoints n√©cessitant un body json, vous pouvez utiliser :\n{\n  \"nom\":\"Agneta\",\n  \"age\": 30\n}\nSavoir utiliser un webservice est essentiel, car ils repr√©sentent une vaste source de donn√©es accessibles en temps r√©el. Les webservices permettent de collecter des informations provenant de multiples sources, comme des APIs publiques ou des syst√®mes internes, sans avoir besoin de t√©l√©charger manuellement des fichiers. √Ä vous ensuite de convertir ces donn√©es dans le format que vous pr√©f√©rez."
  },
  {
    "objectID": "doc/cours/outils-dev.html",
    "href": "doc/cours/outils-dev.html",
    "title": "Outils de d√©veloppement",
    "section": "",
    "text": "Python 3.10 : la version de Python install√©e √† l‚ÄôENSAI\nVisual Studio Code : votre √©diteur de code\nGit : pour g√©rer vos d√©p√¥ts\nPostgreSQL : une base de donn√©es\n\nDBeaver : pour consulter, modifier cette base de donn√©es"
  },
  {
    "objectID": "doc/cours/outils-dev.html#stack-vm",
    "href": "doc/cours/outils-dev.html#stack-vm",
    "title": "Outils de d√©veloppement",
    "section": "",
    "text": "Python 3.10 : la version de Python install√©e √† l‚ÄôENSAI\nVisual Studio Code : votre √©diteur de code\nGit : pour g√©rer vos d√©p√¥ts\nPostgreSQL : une base de donn√©es\n\nDBeaver : pour consulter, modifier cette base de donn√©es"
  },
  {
    "objectID": "doc/cours/outils-dev.html#visual-studio-code",
    "href": "doc/cours/outils-dev.html#visual-studio-code",
    "title": "Outils de d√©veloppement",
    "section": "Visual Studio Code",
    "text": "Visual Studio Code\n\n√âditeur de code source populaire\nInt√©gre un explorer et un terminal\nNombreuses extensions\nPersonnalisation avanc√©e\n\n\nZoom sur les Settings\n\nfichier .vscode/settings.json\nFormater : Black\nLinter : Flake8\n\n\n\nMontrer le fichier settings.json (DEMO)\nicone ‚öôÔ∏è niveau workspace ou user\n√† priori vous n‚Äôavez rien √† modifier\nvous pouvez int√©grer ce fichier dans votre d√©p√¥t projet\nFormater et Linter en phase\n\nFormater :\n\nLigne trop longue\nEspaces superflux"
  },
  {
    "objectID": "doc/cours/outils-dev.html#qualit√©-du-code",
    "href": "doc/cours/outils-dev.html#qualit√©-du-code",
    "title": "Outils de d√©veloppement",
    "section": "Qualit√© du Code",
    "text": "Qualit√© du Code\n\nPourquoi la Qualit√© ?\n\nMaintenabilit√© : plus facile √† comprendre, √† maintenir et √† modifier\nLisibilit√© : facilite la collaboration et r√©duit les erreurs\nPerformance : fonctionne mieux et consomme moins de ressources\nS√©curit√© : moins susceptible de contenir des vuln√©rabilit√©s\n\n\n\nPylint\nOutil d‚Äôanalyse statique pour Python qui :\n\nV√©rifie la conformit√© du code aux normes de style\nD√©tecte les erreurs potentielles\nIdentifie les mauvaises pratiques\n\n\n\nCommandes\n\npylint src\npylint --output-format=colorized --disable=C0114,C0411,C0415,W0718 $(git ls-files '*.py') --fail-under=7.5\n\n\n\nVous pouvez disable les r√®gles qui vous ennuient\n√Ä faire r√©guli√®rement\n\n\n\n\nAborescence du d√©p√¥t\nPROJET-INFO-2A\n    ‚îú‚îÄ‚îÄ .vscode\n    ‚îÇ   ‚îî‚îÄ‚îÄ settings.json\n    ‚îú‚îÄ‚îÄ data\n    ‚îÇ   ‚îî‚îÄ‚îÄ init_db.sql\n    ‚îú‚îÄ‚îÄ doc\n    ‚îÇ   ‚îî‚îÄ‚îÄ suivi\n    ‚îÇ       ‚îî‚îÄ‚îÄ YYYY.MM.DD-semaineN.md\n    ‚îú‚îÄ‚îÄ src\n    ‚îÇ   ‚îú‚îÄ‚îÄ business_object\n    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ une_classe.py\n    ‚îÇ   ‚îú‚îÄ‚îÄ dao\n    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ une_classe_dao.py\n    ‚îÇ   ‚îú‚îÄ‚îÄ service\n    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ une_classe_service.py\n    ‚îÇ   ‚îú‚îÄ‚îÄ tests\n    ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ dao\n    ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ service\n    ‚îÇ   ‚îú‚îÄ‚îÄ utils\n    ‚îÇ   ‚îî‚îÄ‚îÄ view\n    ‚îÇ       ‚îî‚îÄ‚îÄ accueil_view.py\n    ‚îú‚îÄ‚îÄ .gitignore\n    ‚îú‚îÄ‚îÄ LICENCE\n    ‚îú‚îÄ‚îÄ README.md\n    ‚îî‚îÄ‚îÄ requirements.txt\n\n\nDocumentation\n\n\noperations_mathematiques.py\n\nclass OperationsMathematiques:\n    \"\"\"Op√©rations Math√©matiques\"\"\"\n    def diviser_cinq_par(self, nombre) -&gt; float:\n        \"\"\"Divise le nombre 5 par un nombre donn√©.\n        Parameters\n        ----------\n        nombre : float or int\n            Le nombre par lequel 5 sera divis√©.\n        Returns\n        -------\n        float or None\n            Le r√©sultat de la division de 5 par le nombre donn√©.\n            Si le nombre est √©gal √† 0, la m√©thode retourne None.\n        \"\"\"\n        if nombre != 0:\n            return 5 / nombre\n        else:\n            return None\n\n\n\nDoc classes\n\nAttributs\n\nDoc m√©thodes\n\nbr√®ve description\nparam√®tres\nretour"
  },
  {
    "objectID": "doc/cours/outils-dev.html#logs",
    "href": "doc/cours/outils-dev.html#logs",
    "title": "Outils de d√©veloppement",
    "section": "Logs",
    "text": "Logs\n\nQu‚Äôest-ce que les logs\n\n\n\n\n\n\nNote\n\n\n\nLa journalisation (ou logging) est le processus d‚Äôenregistrement des √©v√©nements, des erreurs, et des informations dans une application.\n\n\nUn log capture des informations sur ce qui s‚Äôest pass√© √† un moment donn√© :\n\nSurveillance\nD√©bogage\n\n\n\nIls permettent de surveiller l‚Äô√©tat d‚Äôun syst√®me, des comportements inattendus\nIls aident √† identifier et r√©soudre les probl√®mes\n\n\n\n\nLevel 1 - D√©butant\n\nVous avez une erreur dans votre code\nMais vous ne savez pas exactement o√π ?\nQue faites-vous ?\n\n\nVous mettez des ‚Äúprints‚Äù partout\n\n\n\nLevel 2 - Mode Debug\n\nVous ajoutez un point d‚Äôarr√™t\nVous lancez en mode debug\nVous avancez jusqu‚Äô√† l‚Äôerreur\n\n\nDemo\n\n\n\nLevel 3 - Logs\n\nImportez le module logging et configurez\n\nimport logging\n\nlogging.basicConfig(\n    filename='logs/example.log',  \n    level=logging.INFO,     \n    format=\"%(asctime)s - %(levelname)-8s - %(message)s\",\n    datefmt=\"%d/%m/%Y %H:%M:%S\")\nPossible d‚Äôexternaliser la config dans un fichier logging_config.yml\n\n\nLevel 3 - Logs\n\nPostionnez vos logs\n\nlogger.debug(\"Ceci est un message de d√©bogage\")\nlogger.info(\"Ceci est un message d'information\")\nlogger.warning(\"Ceci est un message d'avertissement\")\nlogger.error(\"Ceci est un message d'erreur\")\n\n\nLes niveaux de logs\n\nDEBUG : utile pour le d√©bogage lors du d√©veloppement\nINFO : suivi du code ex√©cut√©\nWARNING : situation inhabituelle mais non bloquante\nERROR : affecte la logique du programme mais ne l‚Äôarr√™te pas compl√®tement\nCRITICAL : n√©cessite une intervention urgente\n\n\n\nUn bon d√©but\nimport logging\n\ndef ma_methode(a):\n    logging.debug(\"ma_methode - DEBUT\")\n\n    ...\n\n    logging.debug(\"ma_methode - FIN\")\n\n\nAller plus loin\nUtiliser les modules :\n\nsrc/utils/log_init.py\nsrc/utils/log_decorator.py\n\nEt ajouter un d√©corateur @Log avant chaque m√©thode\n\nWrapper : va encapsuler la m√©thode\nD√©mo log_decorator"
  },
  {
    "objectID": "doc/cours/outils-dev-slides.html#stack-vm",
    "href": "doc/cours/outils-dev-slides.html#stack-vm",
    "title": "Outils de d√©veloppement",
    "section": "Stack VM",
    "text": "Stack VM\n\nPython 3.10 : la version de Python install√©e √† l‚ÄôENSAI\nVisual Studio Code : votre √©diteur de code\nGit : pour g√©rer vos d√©p√¥ts\nPostgreSQL : une base de donn√©es\n\nDBeaver : pour consulter, modifier cette base de donn√©es"
  },
  {
    "objectID": "doc/cours/outils-dev-slides.html#visual-studio-code",
    "href": "doc/cours/outils-dev-slides.html#visual-studio-code",
    "title": "Outils de d√©veloppement",
    "section": "Visual Studio Code",
    "text": "Visual Studio Code\n\n√âditeur de code source populaire\nInt√©gre un explorer et un terminal\nNombreuses extensions\nPersonnalisation avanc√©e"
  },
  {
    "objectID": "doc/cours/outils-dev-slides.html#qualit√©-du-code",
    "href": "doc/cours/outils-dev-slides.html#qualit√©-du-code",
    "title": "Outils de d√©veloppement",
    "section": "Qualit√© du Code",
    "text": "Qualit√© du Code"
  },
  {
    "objectID": "doc/cours/outils-dev-slides.html#logs",
    "href": "doc/cours/outils-dev-slides.html#logs",
    "title": "Outils de d√©veloppement",
    "section": "Logs",
    "text": "Logs"
  },
  {
    "objectID": "doc/cours/intro.html",
    "href": "doc/cours/intro.html",
    "title": "Introduction",
    "section": "",
    "text": "6h CM\n12h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de R√©mi P√©pin\n\n\nWIN + P : Etendre ou dupliquer\nPr√©sentation :\n\n15 ans d‚Äôinfo (SQL, Java, Python)\nINSEE, informatique, Orl√©ans GEOLOC, Lille enqu√™tes, Nautile\nENSAI\nR√©mi P√©pin, assistant d‚Äôenseignement entre 2018 et 2023\n\nCours de Cloud Computing\n\n\n\n\n\n\n\n\n\n\n\nBut du cours\n\n\n\nVous apporter les connaissances n√©cessaires pour mener √† bien un projet informatique.\n\n\n\nConduire un projet\nD√©passer les 50 lignes de code\nVivre la vie de d√©veloppeur\nTravailler en √©quipe\n\n\n\nJe reviens ensuite sur le projet\nOrganiser votre code\n\n\n\n\n\n\nVersionnage avec git\nAnalyse fonctionnelle, G√©nie logiciel\nProgrammation orient√©e objet avanc√©e\nCommunication avec une base de donn√©es en python\nS√©curit√© informatique\nCommunication client-serveur\n\n\n\nQuelques rappels POO en TP\n\n\n\n\n\n\n4 x 3h\nSettings VScode, Formateur, Linter\nSuivez pr√©cis√©ment les consignes, n‚Äôallez pas trop vite et ne sautez pas les √©tapes (‚ö†Ô∏è Open Folder)\n\n\n\n\n\n\n\nWarning\n\n\n\n\nV√©rifiez sur votre EDT si vous √™tes en salle info !!!\nSi vous faites sur votre machine, utilisez une souris\n\n\n\n\n\nTP : truc √† r√©cup pour le projet\nSujets tr√®s longs, travail √† la maison\nSi un truc ne marche pas et que vous passez √† la suite -&gt; √† un moment : BOOM\nSoyez solidaires\n\n13/09 -&gt; manque de salles info\n\n\n\n\n\nLundi 7 Octobre 14h\n2h\nsur papier\n1 feuille A4 recto / verso manuscrite\n\n\n\nBut : voir si vous avez retenu le principal\npas de pi√®ge\nsur papier car TP trop compliqu√© √† organiser, chatGPT\nMANUSCRITE : pas de photocopie\n\n\n\n\n\nPr√©sentation du projet\n\n\nN‚Äôoubliez pas vos voeux\n\nQuestions ?"
  },
  {
    "objectID": "doc/cours/intro.html#cours-de-compl√©ments-dinfo",
    "href": "doc/cours/intro.html#cours-de-compl√©ments-dinfo",
    "title": "Introduction",
    "section": "",
    "text": "6h CM\n12h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de R√©mi P√©pin\n\n\nWIN + P : Etendre ou dupliquer\nPr√©sentation :\n\n15 ans d‚Äôinfo (SQL, Java, Python)\nINSEE, informatique, Orl√©ans GEOLOC, Lille enqu√™tes, Nautile\nENSAI\nR√©mi P√©pin, assistant d‚Äôenseignement entre 2018 et 2023\n\nCours de Cloud Computing\n\n\n\n\n\n\n\n\n\n\n\nBut du cours\n\n\n\nVous apporter les connaissances n√©cessaires pour mener √† bien un projet informatique.\n\n\n\nConduire un projet\nD√©passer les 50 lignes de code\nVivre la vie de d√©veloppeur\nTravailler en √©quipe\n\n\n\nJe reviens ensuite sur le projet\nOrganiser votre code\n\n\n\n\n\n\nVersionnage avec git\nAnalyse fonctionnelle, G√©nie logiciel\nProgrammation orient√©e objet avanc√©e\nCommunication avec une base de donn√©es en python\nS√©curit√© informatique\nCommunication client-serveur\n\n\n\nQuelques rappels POO en TP\n\n\n\n\n\n\n4 x 3h\nSettings VScode, Formateur, Linter\nSuivez pr√©cis√©ment les consignes, n‚Äôallez pas trop vite et ne sautez pas les √©tapes (‚ö†Ô∏è Open Folder)\n\n\n\n\n\n\n\nWarning\n\n\n\n\nV√©rifiez sur votre EDT si vous √™tes en salle info !!!\nSi vous faites sur votre machine, utilisez une souris\n\n\n\n\n\nTP : truc √† r√©cup pour le projet\nSujets tr√®s longs, travail √† la maison\nSi un truc ne marche pas et que vous passez √† la suite -&gt; √† un moment : BOOM\nSoyez solidaires\n\n13/09 -&gt; manque de salles info\n\n\n\n\n\nLundi 7 Octobre 14h\n2h\nsur papier\n1 feuille A4 recto / verso manuscrite\n\n\n\nBut : voir si vous avez retenu le principal\npas de pi√®ge\nsur papier car TP trop compliqu√© √† organiser, chatGPT\nMANUSCRITE : pas de photocopie\n\n\n\n\n\nPr√©sentation du projet\n\n\nN‚Äôoubliez pas vos voeux\n\nQuestions ?"
  },
  {
    "objectID": "doc/cours/intro-slides.html#cours-de-compl√©ments-dinfo",
    "href": "doc/cours/intro-slides.html#cours-de-compl√©ments-dinfo",
    "title": "Introduction",
    "section": "Cours de Compl√©ments d‚Äôinfo",
    "text": "Cours de Compl√©ments d‚Äôinfo\n\n6h CM\n12h TP\nludovic.deneuville@ensai.fr\nbureau 161\nsur la base des cours de R√©mi P√©pin\n\n\nWIN + P : Etendre ou dupliquer\nPr√©sentation :\n\n15 ans d‚Äôinfo (SQL, Java, Python)\nINSEE, informatique, Orl√©ans GEOLOC, Lille enqu√™tes, Nautile\nENSAI\nR√©mi P√©pin, assistant d‚Äôenseignement entre 2018 et 2023\n\nCours de Cloud Computing"
  },
  {
    "objectID": "doc/cours/webservices.html",
    "href": "doc/cours/webservices.html",
    "title": "Les Webservices",
    "section": "",
    "text": "API\nWebservice\n\nD√©finition\nExemples\nArchitecture microservices\n\nHyper Text Transfer Protocol\n\nD√©finition\nExemples"
  },
  {
    "objectID": "doc/cours/webservices.html#le-plan",
    "href": "doc/cours/webservices.html#le-plan",
    "title": "Les Webservices",
    "section": "",
    "text": "API\nWebservice\n\nD√©finition\nExemples\nArchitecture microservices\n\nHyper Text Transfer Protocol\n\nD√©finition\nExemples"
  },
  {
    "objectID": "doc/cours/webservices.html#api",
    "href": "doc/cours/webservices.html#api",
    "title": "Les Webservices",
    "section": "API",
    "text": "API\n\nD√©finition\n\n\n\n\n\n\nNote\n\n\n\nInterface entre deux ordinateurs ou deux programmes.\nC‚Äôest une application qui offre des services √† d‚Äôautres applications.\nL‚Äôapplication impl√©mente une API ou expose une API."
  },
  {
    "objectID": "doc/cours/webservices.html#d√©finition-1",
    "href": "doc/cours/webservices.html#d√©finition-1",
    "title": "Les Webservices",
    "section": "D√©finition",
    "text": "D√©finition\nTermes assez vaste qui recouvre :\n\nLes biblioth√®ques / frameworks :\n\nPandas\nNumpy\n\nDes webservices\nUn moyen d‚Äôacc√©der aux ressources d‚Äôun hardware\n\nNvidia API\n\n\n\nAPI in a nutshell\n\nExpose des m√©thodes/fonctions aux utilisateurs\nR√©utilisation\nContractualisation des inputs/outputs\nBo√Æte noire\n\n\nPour reprendre l‚Äôexemple du dessus, le module d‚Äôauthentification peut √™tre utilis√© aussi bien par les utilisateurs pour la version site marchand, que par les admins pour la partie administration.\n\n\n\n\n\n\n\n\nNote\n\n\n\nUne API rend un service aux utilisateurs sans qu‚Äôils aient √† savoir comment elle fait.\nIls connaissent juste ce qu‚Äôelle attend en entr√©e et ce qu‚Äôelle produit !"
  },
  {
    "objectID": "doc/cours/webservices.html#les-webservices",
    "href": "doc/cours/webservices.html#les-webservices",
    "title": "Les Webservices",
    "section": "Les webservices",
    "text": "Les webservices\nUne API particuli√®re\n\n\n\n\nQuestion\n√Ä votre avis, X permet-il √† tout le monde d‚Äôacc√©der √† leurs bases de donn√©es directement ?\n\nBien s√ªr non !\n\n\n\nWait what ?!\n\nPourtant de nombreux sites utilisent les donn√©es de X !\nComment font-ils ?\n\n\n\nDes id√©es ?\n\n\n\n\nSolution : web scraper\nConsiste √† √©crire une application qui :\n\nse connecte √† un site\net va lire la page pour en tirer des informations\n\nProbl√®mes\n\nCr√©e du trafic artificiel (c√¥t√© site)\nChaque changement dans le site casse notre application\nG√©rer le JavaScript üò±üò±üò±üò±\n\n\nDire que derri√®re un site il y a du HTML.\nMontrer un exemple ?\nPrix SNCF √† l‚ÄôINSEE\n\n\n\nAutre solution : cr√©er un point d‚Äôentr√©e pour les machines\n\nAccessible depuis le web\nFait pour les machines\nContr√¥le ce que l‚Äôon rend accessible\n\n\n\n\n\n\n\nInterface entre l‚Äôext√©rieur et notre syst√®me\n\n\n\n\n\nD√©mo\n\n\nhttps://api.gouv.fr/documentation/api_data_gouv\n\nhttps://anapioficeandfire.com/\nLe trafic √† Rennes en temps r√©el\n\n\n\n\nLes webservices\n\nApplication web\nAccessible via requ√™te HTTP/HTTPS\nSans interface graphique\nRenvoie des donn√©es compr√©hensibles par les machines (JSON, XML‚Ä¶)\n\n\nWebservice : une API particuli√®re que nous allons utiliser\n\n\n\nPlusieurs types\n\nREST : le plus courant, le type que vous allez manipuler, JSON\nSOAP : plus complet donc plus lourd que le REST, XML\nRPC : Remote Procedure Call\n\n\nREST est un style architectural qui d√©finit un ensemble de contraintes et de principes\n\n\n\nEn r√©sum√©\n\n\n\n\n\n\nNote\n\n\n\nUn web service est un module applicatif, accessible sur le protocole HTTP via une URL qui va r√©pondre √† une demande\n\n\n‚û°Ô∏è Comme un site web, mais pour les machines\n\n\nArchitecture microservices\nSite de e-commerce\n\nWS authentification\nWS gestion de compte\nWS paiement\nWS de recherche\nWS analyse des donn√©es\nWS gestion panier\n\n\n\nArchitecture microservices\n\nChaque module est un webservice ind√©pendant\nC‚Äôest l‚Äôapplication c√¥t√© client qui va les contacter\n\n\n\n\n\n\n\nNote\n\n\n\nUtile pour les grandes entreprises avec beaucoup de dev et de projets en parall√®le.\n\n\n\nUn dessin pourrait peut-√™tre aider\n\n\n\nComment √ßa fonctionne ?\n\n\n\n\nLa notion de client-serveur\n\nLE MOD√àLE QUI R√âGIT LE WEB\nDes machines qui attendent des demandes : serveurs\nDes machines qui font des demandes : clients\nLe client initie le contact, le serveur r√©pond\n\n\n\nComparaison avec vie r√©elle\n\nVous marchez dans la rue et vous avez envie d‚Äôun caf√© frapp√© Double shot espresso and Cream\nVous rentrez dans un Starbucks et demandez votre caf√©\nLe serveur traite votre demande et vous donne votre caf√©\nVous partez avec votre caf√©\n\n\nVous vous moquez de comment √† √©t√© fait votre caf√©, tant que c‚Äôest bon"
  },
  {
    "objectID": "doc/cours/webservices.html#hyper-text-transfer-protocol-http",
    "href": "doc/cours/webservices.html#hyper-text-transfer-protocol-http",
    "title": "Les Webservices",
    "section": "Hyper Text Transfer Protocol (HTTP)",
    "text": "Hyper Text Transfer Protocol (HTTP)\n\nHTTP\nProtocole de communication client-serveur d√©velopp√© pour le World Wide Web\nN‚Äôest pas le seul : FTP, SMTP, IRC ‚Ä¶\nIl existe des protocoles non client-serveur : BitTorrent\n\nAvez vous une id√©e de requ√™te HTTP ?\n\nInternet est l‚Äôinfrastructure\nWeb est un service qui fonctionne dessus\n\nhttps : http + SSL\nLe navigateur cache le protocole\n\n\n\nSecure Sockets Layer (SSL)\nConnexion s√©curis√©e entre un client et un serveur :\n\nLe client envoie un message au serveur\nLe serveur r√©pond et envoie son certificat\nLe client v√©rifie la validit√© du certificat\nLe client g√©n√©re une cl√© de session chiffr√©e avec la cl√© publique du serveur\nLes deux camps communiquent avec la cl√© de session\n\n\nCommencer par parler chiffrage :\n\nChiffrage sym√©trique : Une seule cl√© est utilis√©e pour chiffrer et d√©chiffrer les donn√©es\nChiffrage asym√©trique : une cl√© publique pour chiffrer les donn√©es et une cl√© priv√©e pour les d√©chiffrer\n\nCertificat :\n\nCl√© publique\nInformations sur le propri√©taire\nP√©riode de validit√©\nAutorit√© de certification\nSignature num√©rique : message hach√© puis chiffr√© avec cl√© priv√©e\n\n\n\n\nVideo\n\n\n\nLes √©l√©ments d‚Äôune requ√™te\n\nLa localisation de la ressource : URL (nom de domaine + chemin)\nLa m√©thode employ√©e (GET, POST, UPDATE, DELETE ‚Ä¶)\nLes param√®tres de la requ√™te\nLe corps de la requ√™te\n\n\nLes param√®tres sont derri√®re le ?\nLe corps vous ne le voyez pas, mais il est possible de le voir.\nDans le navigateur, on ne fait que des GET\n\n\n\nLes √©l√©ments d‚Äôune requ√™te\nGET https://pokeapi.co/api/v2/pokemon?limit=10&offset=200\n\nm√©thode\nprotocole\nadresse du ws\nendpoint\nparam√®tres\n\n\nPour aller plus loin : IP, DNS\n\n\n\nLes m√©thodes HTTP\n\nPOST\nGET\nUPDATE\nDELETE\n\n\n\n\n\n\n\nImportant\n\n\n\nC‚Äôest le CRUD !\n\n\n\nComme en SQL\n\n\n\nExemple\n\nGET http://web-services.domensai.ecole/attack\n\nr√©cup√©rer toutes les attaques\n\nGET http://web-services.domensai.ecole/attack/2684\n\nr√©cup√©rer une attaque √† partir de son id\n\nDELETE http://web-services.domensai.ecole/attack/2684\n\nsupprimer une attaque\n\n\n\n\nExemple\n\nPOST http://web-services.domensai.ecole/attack\n\najouter une attaque\n\nPUT http://web-services.domensai.ecole/attack/2684\n\nmodifier une attaque\n\n\n\n\nbody\n\n{\n  \"name\": \"chatouille\",\n  \"attack_type\": \"physical attack\",\n  \"power\": 2,\n  \"accuracy\": 5,\n  \"description\": \"string\"\n}\n\n\n\nPATCH http://web-services.domensai.ecole/attack/2684\n\nmodifier seulement certains attributs d‚Äôune attaque\n\n\n\n\n\nPour r√©sumer\n\nLe HTTP est le protocole du web\nM√©thode\nURL\nParam√®tres dans URL ou corps"
  },
  {
    "objectID": "doc/cours/webservices.html#contacterr√©aliser-un-webservice",
    "href": "doc/cours/webservices.html#contacterr√©aliser-un-webservice",
    "title": "Les Webservices",
    "section": "Contacter/r√©aliser un webservice",
    "text": "Contacter/r√©aliser un webservice\n\nContacter un webservice\nUn outil : un client HTTP\n\nUn navigateur web (assez limit√©)\nInsomnia/Postman\nVscode avec des plugins\nPython avec le plugin requests\n\n\n\nContacter un webservice en python\nimport requests\n\n# Construction de la requ√™te\nurl = \"https://data.rennesmetropole.fr/api/records/1.0/search/\"\nparametres = {\"dataset\": \"etat-du-trafic-en-temps-reel\", \"rows\": 2}\n\n# Lancement de la requ√™te\nres = requests.get(url=url, params=parametres)\n\n# Affichage du r√©sultat\nprint(res.json())\nprint(\"\\nNombre de lignes : \", res.json()[\"parameters\"][\"rows\"])\n\n\nContacter un webservice en python\nimport json\nimport requests\n\nurl = \"https://anapioficeandfire.com/api/\"\nend_point = \"characters\"\nparametres = {\"gender\": \"Female\", \"isAlive\": True, \"culture\": \"Braavosi\"}\nresponse = requests.get(url=url + end_point, params=parametres)\n\n# Teste si le serveur a r√©pondu\nif response.status_code != 200:\n    raise Exception(f\"Cannot reach (HTTP {response.status_code}): {response.text}\")\nprint(json.dumps(response.json()))\n\n\nContacter un webservice en python\n\nTr√®s facile\nres.json() retourne un dictionnaire\nget() peut devenir post(), put(), etc.\n\n\n\nR√©aliser un webservice en python\n\nPeut sembler complexe üòµ\nMais il existe des outils pour nous aider üòé\nPas besoin d‚Äô√™tre un expert de l‚Äôinformatique ! üê±‚Äçüíª\n\n\n\n3 frameworks\n\nFlaskRESTful : mature, l√©ger, flexible\nDjango : mature, robuste, complet\nFastApi : jeune, l√©ger, moderne\n\n\nFastApi pour le TP2\n\n\n\nFastApi : les bases\nfrom fastapi import FastAPI\n\napp = FastAPI()\n@app.get(\"/\")\nasync def root():\n    return {\"message\": \"Hello World\"}\n\n\nif __name__ == \"__main__\":\n    uvicorn.run(app, host=\"0.0.0.0\", port=8000)\n\n\nFastApi\n\nIl est facile de coder vos endpoints\nLa documentation est extr√™mement bien faite\nVous vous concentrez sur l‚Äôessentiel"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#le-plan",
    "href": "doc/cours/webservices-slides.html#le-plan",
    "title": "Les Webservices",
    "section": "Le plan",
    "text": "Le plan\n\nAPI\nWebservice\n\nD√©finition\nExemples\nArchitecture microservices\n\nHyper Text Transfer Protocol\n\nD√©finition\nExemples"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#api",
    "href": "doc/cours/webservices-slides.html#api",
    "title": "Les Webservices",
    "section": "API",
    "text": "API"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#d√©finition-1",
    "href": "doc/cours/webservices-slides.html#d√©finition-1",
    "title": "Les Webservices",
    "section": "D√©finition",
    "text": "D√©finition\nTermes assez vaste qui recouvre :\n\nLes biblioth√®ques / frameworks :\n\nPandas\nNumpy\n\nDes webservices\nUn moyen d‚Äôacc√©der aux ressources d‚Äôun hardware\n\nNvidia API"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#les-webservices",
    "href": "doc/cours/webservices-slides.html#les-webservices",
    "title": "Les Webservices",
    "section": "Les webservices",
    "text": "Les webservices\nUne API particuli√®re"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#hyper-text-transfer-protocol-http",
    "href": "doc/cours/webservices-slides.html#hyper-text-transfer-protocol-http",
    "title": "Les Webservices",
    "section": "Hyper Text Transfer Protocol (HTTP)",
    "text": "Hyper Text Transfer Protocol (HTTP)"
  },
  {
    "objectID": "doc/cours/webservices-slides.html#contacterr√©aliser-un-webservice",
    "href": "doc/cours/webservices-slides.html#contacterr√©aliser-un-webservice",
    "title": "Les Webservices",
    "section": "Contacter/r√©aliser un webservice",
    "text": "Contacter/r√©aliser un webservice"
  },
  {
    "objectID": "doc/cours/poo-avancee.html",
    "href": "doc/cours/poo-avancee.html",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "",
    "text": "Notions avanc√©es de POO\n\nRappels\nClasses abstraites\nBridge pattern\n\nG√©nie logiciel\n\nD√©finition\nSingle responsibility principle\nDesign patterns"
  },
  {
    "objectID": "doc/cours/poo-avancee.html#plan",
    "href": "doc/cours/poo-avancee.html#plan",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "",
    "text": "Notions avanc√©es de POO\n\nRappels\nClasses abstraites\nBridge pattern\n\nG√©nie logiciel\n\nD√©finition\nSingle responsibility principle\nDesign patterns"
  },
  {
    "objectID": "doc/cours/poo-avancee.html#quelques-rappels",
    "href": "doc/cours/poo-avancee.html#quelques-rappels",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "Quelques rappels",
    "text": "Quelques rappels\nLes trois principes de l‚Äôobjet :\n\nEncapsulation : un objet va contenir des attributs et des m√©thodes.\nH√©ritage : un objet peut h√©riter des attributs et m√©thodes d‚Äôune autre classe pour les red√©finir. Il peut √©galement ajouter d‚Äôautres attributs/m√©thodes.\nPolymorphisme : une m√©thode peut √™tre associ√©e √† un code diff√©rent en fonction des param√®tres pass√©s ou de l‚Äôobjet auquel elle appartient.\n\n\nCe sont les trois principes qu‚Äôapporte la programmation orient√©e objet. Ils sont pr√©sent√©s par ordre de ‚Äúsimplicit√©‚Äù. La qualit√© de votre code va d√©pendre de votre ma√Ætrise et application de ces principes. Cela prend du temps pour bien les comprendre.\n\nAttribut : ce qu‚Äôil est\nM√©thode : ce qu‚Äôil peut faire\nH√©ritage : Nouvelles capacit√©s (ex : M√©decin -&gt; Chirurgien)\nPolymorphisme : 2 types (liste d‚ÄôAnimal.parler(malade=True))\n\n\n\nUn exemple pour illustrer cela\nApplication de traitements automatiques des donn√©es :\n\nPlusieurs sources de donn√©es : enqu√™tes, webscraping, fichiers administratifs, ‚Ä¶\nPlusieurs formats de donn√©es : csv, xml, json, ‚Ä¶ (on en reparlera)\nPlusieurs algorithmes de traitement : statistique exploratoire, r√©gression, ‚Äúmachine learning‚Äù, ‚Ä¶\n\n\nFondamentalement, c‚Äôest une application assez simple.\n\n\n\nExemple de diagramme de classe\n\n\nVoyez-vous des choses √† corriger ?\nEst-ce que la m√©thode process() sera la m√™me pour survey et census ?\ndef process(self):\n  if self.type = \"census\":\n    ...\n  elif\n    ...\n\n\n\nUn exemple avec de l‚Äôh√©ritage\n\n\nLa classe Source permet de centraliser des attributs communs et de d√©finir des m√©thodes communes, mais ces m√©thodes vont √™tre surcharg√©es par les classes filles.\nGr√¢ce au polymorphisme, j‚Äôai un comportement diff√©rent mais le code reste clair, avec une partie commune √† tous les types de fichiers et une partie sp√©cifique.\nCode dans le dossier exemple POO.\nQue pensez-vous de la classe Source ?\n\n\n\nLes classes abstraites\n\nClasse Abstraite : classe dont l‚Äôimpl√©mentation n‚Äôest pas compl√®te et qui n‚Äôest pas instantiable. Permet de passer un contrat. Les classes filles vont devoir impl√©menter ce qu‚Äôil manque.\n\nAvantages :\n\nNous savons ce que les classes filles doivent faire üëç\nNous pouvons g√©n√©rer du code üôè\nLimite le risque d‚Äôerreur !! üëå\n\n\nCertains objets n‚Äôont pas besoin d‚Äô√™tre impl√©ment√©s compl√®tement ni de pouvoir √™tre instanti√©s. Souvent, c‚Äôest pour des notions abstraites.\nRappels : classe, objet, abstrait (Vehicule)\n\n\n\nPar exemple\n\n\nPour vous, cela peut sembler marginal comme changement (surtout √† cause de Python), mais ce changement permet de manipuler l‚Äôabstraction au lieu des impl√©mentations et d‚Äôavoir un code propre (vous ferez √ßa en TP).\nv = Vehicule(\"rouge\") -&gt; √ßa marche plus\nM√©thode custom_process abstraite\n\n\n\nEt en Python ?\n\nPas de gestion native des classes abstraites üò±\nModule Abstract Base Classes (abc) pour r√©soudre le probl√®me ü¶æ\nD√©j√† inclus dans votre distribution Python üòå\n\nStep 1 : Importer le module üß≥\nStep 2 : H√©riter de ABC üë®‚Äçüë©‚Äçüëß‚Äçüë¶\nStep 3 : D√©finir les m√©thodes abstraites üìù\nStep 4 : ???\nStep 5 : Profit üí∞üí∞\n\n\n\nStep 4 : impl√©menter les m√©thodes abstraites dans les classes filles\nL‚Äôautre gros d√©faut de Python est son typage dynamique.\nPython va typer les objets au runtime, et pas au compile time. Cela ne permet pas d‚Äôavoir autant d‚Äôoutils que dans d‚Äôautres langages. Mais vous pouvez utiliser les docstrings pour typer vos objets.\n\n\n\nEt si on ajoutait les formats de donn√©es ?\nActuellement, 3 formats de donn√©es dans notre application :\n\nCSV : Comma Separated Values (tabulaire)\nXML : eXtended Markup Language (format √† balise)\nJSON : JavaScript Object Notation (format clef-valeur)\n\n\nOn reviendra plus en d√©tail sur les diff√©rents formats.\nRetour 2 slides avant : si on fait pareil et qu‚Äôon utilise l‚Äôh√©ritage pour le format\n\n\n\nPar exemple\n\nVoyez-vous un probl√®me ?\n\nC√† grossit de mani√®re exponentielle\n\n\n\nLa puissance de la POO\n\nActuellement 4 * 3 classes ‚Äúconcr√®tes‚Äù √† d√©finir üò±\nLa lecture du format est d√©pendante de la source üòµ\n\nMAIS\n\nOn peut externaliser ce traitement ! üòå\nRelation d‚Äôagr√©gation ü§Ø\n\n\nIl faut bien comprendre\n\n\n\nLe bridge pattern\n\n\n\n\n\n\nWork smart, not hard\n\nComposition + h√©ritage : 9 classes üòé\nH√©ritage : 17 classes üò´\nOn peut facilement ajouter des types et des formats ü•≥\n\n\n\n\n\n\n\nPattern Bridge\n\n\n\nD√©coupage d‚Äôune grosse classe en un groupe de petites classes avec leur propre hi√©rarchie qu‚Äôil faut ensuite assembler.\n\n\n\n\nPour r√©sumer\n\nUtiliser la puissance de la POO üí£\nPr√©f√©rer les objets sp√©cifiques (h√©ritage) au if/elif/else üê±‚Äçüèç\nLes classes abstraites sont des plans pour les futures classes üë∑‚Äç‚ôÄÔ∏èüë∑‚Äç‚ôÇÔ∏è\nLa POO permet de cr√©er des codes plus lisibles, √©volutifs et maintenables üëë"
  },
  {
    "objectID": "doc/cours/poo-avancee.html#le-g√©nie-logiciel",
    "href": "doc/cours/poo-avancee.html#le-g√©nie-logiciel",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "Le g√©nie logiciel",
    "text": "Le g√©nie logiciel\n\n\n\nOn va aller un cran au-dessus.\n\n\nC‚Äôest quoi le g√©nie logiciel ?\n\nUn constat : coder b√™tement ne permet pas de faire une application de qualit√©.\nMais empiler des briques b√™tement ne permet pas de faire une maison, m√™me si on a un plan.\nBesoin de planifier, de documenter, de tester‚Ä¶\n\n\nEt cette partie sera la seconde du rapport interm√©diaire.\n\n\n\nPourquoi c‚Äôest important : parall√®le avec la construction d‚Äôune maison\n\n\n\nPourquoi c‚Äôest important : parall√®le avec la construction d‚Äôune maison\n\nVous avez le plan de construction d‚Äôune maison (fourni par l‚Äôarchitecte)\nMais impl√©menter ce plan demande des connaissances techniques\nBesoin de refaire des sch√©mas pour des zones pr√©cises (arches, escaliers, ‚Ä¶)\nCe n‚Äôest pas du temps perdu !\n\nFaire du code de qualit√© c‚Äôest comme faire de l‚Äôartisanat de pr√©cision, cela demande outils, exp√©rience et m√©thodes.\n\nCertains disent m√™me qu‚Äôon devrait passer plus de temps √† analyser qu‚Äô√† coder. Sujet √† d√©bat, mais cela montre bien que la phase d‚Äôanalyse (comment je code les fonctions) est super importante !\n\n\n\nQuelques principes de base\n\nD√©composition d‚Äôun programme en modules simples coh√©rents\nLes modules exposent des m√©thodes utilisables/surchageables par d‚Äôautres modules mais restent prot√©g√©s aux modifications non pr√©vues\nChaque module doit √™tre une bo√Æte noire pour les autres\nSi on garde les m√™mes entr√©es/sorties, on peut changer un module sans risque\nPrivil√©gier abstractions + h√©ritage plut√¥t que if/elif/else\n\n\nModule architecture != module Python. Couche, c‚Äôest quand on a des modules empil√©s (beaucoup de vocabulaire √† assimiler d‚Äôun coup).\nFaire un dessin avec et sans. Expliquer que c‚Äôest le boulot d‚Äôun objet m√©tier de dire comment il s‚Äôaffiche et comment on le stocke.\nPareil c‚Äôest pas le boulot d‚Äôune vue de faire un calcul. Par contre une vue peut demander. Bien insister sur ‚Äúl‚Äôind√©pendance des couches‚Äù. Th√©oriquement si deux personnes travaillent sur 2 couches et se sont mises d‚Äôaccord sur comment elles communiquent le travail peut se faire en parall√®le.\n\n\n\nUn mantra\n\n\n\n\n\n\nImportant\n\n\n\nFaible couplage, forte coh√©rence\n\n\n\nFaible couplage inter-classes : modifier une classe doit impacter les autres le moins possible.\nForte coh√©rence intra-classe : chaque classe doit √™tre un ensemble coh√©rent d‚Äôattributs et de m√©thodes.\n\n\nGardez √ßa en t√™te d√®s que vous faites du code (R, SAS, etc.). Faites des fonctions les plus unitaires possible pour pouvoir les tester et les remplacer facilement. Divisez votre code en plusieurs fichiers pour le rendre r√©utilisable plus facilement. Ce n‚Äôest pas facile au d√©but, mais il faut y penser.\n\n\n\nFaible couplage, forte coh√©rence : pourquoi le respecter ?\n\nTravail en groupe ü¶∏‚Äç‚ôÄÔ∏èüßô‚Äç‚ôÇÔ∏èüë®‚Äçüíºüë©‚Äçüî¨\nLisibilit√© du code üìñ\nD√©bogages üêû\n\nLimiter les risques d‚Äôerreur quand on modifie le code (√©viter l‚Äôassiette de spaghetti) üçù\n\n‚ÄúSpaghetti‚Äù : code tr√®s chaotique o√π tout communique avec tout, et o√π chaque morceau de code fait un peu de tout. Il faut prendre un bout de code et le remonter √† la main en ‚Äútirant‚Äù dessus. Cela devient ing√©rable quand il y a plus de 1000 lignes de code (et diff√©rents langages).\n\n\n\nRetour sur le bridge pattern\n\n\nJe remontre le sch√©ma quelques secondes\n\n\n\nRetour sur le bridge pattern\n\nLa partie ‚ÄúSource‚Äù g√®re les traitements li√©s √† la source.\nLa partie ‚ÄúFichier‚Äù g√®re la lecture de fichier.\nSeules les entr√©es/sorties comptent.\nOn peut ajouter une partie ‚ÄúTraitement‚Äù pour des traitements suppl√©mentaires.\nPas de if/elif/else inutiles.\n\nChaque partie de notre code s‚Äôoccupe d‚Äôune seule chose\n\nAvantages :\n\nLecture du code facilit√©e.\nEn cas de bug, facile de trouver le coupable.\nOn peut r√©partir le travail facilement.\n\n\n\n\nLes design patterns : d√©finition\n\n‚ÄúEn informatique, et plus particuli√®rement en d√©veloppement logiciel, un patron de conception (souvent appel√© design pattern) est un arrangement caract√©ristique de modules, reconnu comme bonne pratique en r√©ponse √† un probl√®me de conception d‚Äôun logiciel. Il d√©crit une solution standard, utilisable dans la conception de diff√©rents logiciels.‚Äù\n‚Äî Source\n\n\n\nLes design patterns : in a nutshell\n\nBonnes pratiques\nSolutions standards √† des probl√®mes de conception\nSolutions robustes\nInd√©pendants de la technologie\nInd√©pendants du m√©tier\n\n\nEst un outil qui est l√† pour vous aider\n\n\nEn plus ils apportent un vocabulaire commun.\nIl est plus rapide de r√©pondre ‚Äútu devrais utiliser un bridge‚Äù que ‚Äútu devrais faire une seconde hi√©rarchie de classes et assembler ces hi√©rarchies‚Äù\n\n\n\nLes design patterns : exemple\nProbl√®me r√©curent :\n\nCr√©er des objets complexes qui sont une composition de caract√©ristiques ind√©pendantes\nDit autrement : d√©coupler l‚Äôabstraction de son impl√©mentation pour qu‚Äôelles puissent varier ind√©pendamment\n\n\n\nLes design patterns : exemple\n\n\nEn ajoutant les m√©thodes stats\n\n\n\nPour r√©sumer\n\nFaire une application complexe demande un code complexe üß©\nSans phase de conception on va dans le mur üß±\nIl existe des solutions pr√™tes √† l‚Äôemploi √† des probl√®mes courants üß∞\n\n\n\n\n\n\n\nImportant\n\n\n\nFaible couplage, forte coh√©rence"
  },
  {
    "objectID": "doc/cours/poo-avancee-slides.html#plan",
    "href": "doc/cours/poo-avancee-slides.html#plan",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "Plan",
    "text": "Plan\n\nNotions avanc√©es de POO\n\nRappels\nClasses abstraites\nBridge pattern\n\nG√©nie logiciel\n\nD√©finition\nSingle responsibility principle\nDesign patterns"
  },
  {
    "objectID": "doc/cours/poo-avancee-slides.html#quelques-rappels",
    "href": "doc/cours/poo-avancee-slides.html#quelques-rappels",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "Quelques rappels",
    "text": "Quelques rappels\nLes trois principes de l‚Äôobjet :\n\nEncapsulation : un objet va contenir des attributs et des m√©thodes.\nH√©ritage : un objet peut h√©riter des attributs et m√©thodes d‚Äôune autre classe pour les red√©finir. Il peut √©galement ajouter d‚Äôautres attributs/m√©thodes.\nPolymorphisme : une m√©thode peut √™tre associ√©e √† un code diff√©rent en fonction des param√®tres pass√©s ou de l‚Äôobjet auquel elle appartient.\n\n\nCe sont les trois principes qu‚Äôapporte la programmation orient√©e objet. Ils sont pr√©sent√©s par ordre de ‚Äúsimplicit√©‚Äù. La qualit√© de votre code va d√©pendre de votre ma√Ætrise et application de ces principes. Cela prend du temps pour bien les comprendre.\n\nAttribut : ce qu‚Äôil est\nM√©thode : ce qu‚Äôil peut faire\nH√©ritage : Nouvelles capacit√©s (ex : M√©decin -&gt; Chirurgien)\nPolymorphisme : 2 types (liste d‚ÄôAnimal.parler(malade=True))"
  },
  {
    "objectID": "doc/cours/poo-avancee-slides.html#le-g√©nie-logiciel",
    "href": "doc/cours/poo-avancee-slides.html#le-g√©nie-logiciel",
    "title": "Programation orient√©e Objet - Avanc√©e",
    "section": "Le g√©nie logiciel",
    "text": "Le g√©nie logiciel\n\n\n\nOn va aller un cran au-dessus."
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle-slides.html#plan",
    "href": "doc/cours/analyse-fonctionnelle-slides.html#plan",
    "title": "Analyse fonctionnelle",
    "section": "Plan",
    "text": "Plan\n\nL‚Äôanalyse fonctionnelle\n\nD√©finition\nDiagrammes UML\n\nL‚Äôarchitecture logicielle\n\nD√©finition\nS√©paration des responsabilit√©s"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle-slides.html#analyse-fonctionnelle",
    "href": "doc/cours/analyse-fonctionnelle-slides.html#analyse-fonctionnelle",
    "title": "Analyse fonctionnelle",
    "section": "Analyse fonctionnelle",
    "text": "Analyse fonctionnelle\n\n\n\nLes questions qu‚Äôil faut se poser avant de commencer :\n\nQu‚Äôest ce qu‚Äôon fait ? Qui le fait\nBesoins du client\nFonctionnalit√©s requises / optionnelles / bonus\nBien g√©rer les priorit√©s\nR√©partition des r√¥les dans l‚Äô√©quipe"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle-slides.html#architecture-logicielle",
    "href": "doc/cours/analyse-fonctionnelle-slides.html#architecture-logicielle",
    "title": "Analyse fonctionnelle",
    "section": "Architecture logicielle",
    "text": "Architecture logicielle"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle.html",
    "href": "doc/cours/analyse-fonctionnelle.html",
    "title": "Analyse fonctionnelle",
    "section": "",
    "text": "L‚Äôanalyse fonctionnelle\n\nD√©finition\nDiagrammes UML\n\nL‚Äôarchitecture logicielle\n\nD√©finition\nS√©paration des responsabilit√©s"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle.html#plan",
    "href": "doc/cours/analyse-fonctionnelle.html#plan",
    "title": "Analyse fonctionnelle",
    "section": "",
    "text": "L‚Äôanalyse fonctionnelle\n\nD√©finition\nDiagrammes UML\n\nL‚Äôarchitecture logicielle\n\nD√©finition\nS√©paration des responsabilit√©s"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle.html#analyse-fonctionnelle",
    "href": "doc/cours/analyse-fonctionnelle.html#analyse-fonctionnelle",
    "title": "Analyse fonctionnelle",
    "section": "Analyse fonctionnelle",
    "text": "Analyse fonctionnelle\n\n\n\nLes questions qu‚Äôil faut se poser avant de commencer :\n\nQu‚Äôest ce qu‚Äôon fait ? Qui le fait\nBesoins du client\nFonctionnalit√©s requises / optionnelles / bonus\nBien g√©rer les priorit√©s\nR√©partition des r√¥les dans l‚Äô√©quipe"
  },
  {
    "objectID": "doc/cours/analyse-fonctionnelle.html#architecture-logicielle",
    "href": "doc/cours/analyse-fonctionnelle.html#architecture-logicielle",
    "title": "Analyse fonctionnelle",
    "section": "Architecture logicielle",
    "text": "Architecture logicielle\n\n\nC‚Äôest quoi l‚Äôarchitecture logicielle ?\n\nLe pendant technique de l‚Äôanalyse fonctionnelle\nMaintenant que l‚Äôon a le qui et quoi, on d√©termine le comment\nOn dessine le code de notre application\nVision macro de notre application (agencement des grandes pi√®ces)\n\n\nPour le moment on ne fait pas encore de code.\nOn va seulement faire une √©bauche de notre application avec les composants qui la compose (aussi bien logique que physique).\nPar exemple dans votre cas vous allez s√ªrement avoir :\n\nUn code python qui tourne sur votre ordinateur\nUn webservice externe qui vous fournis des donn√©es\nUne base de donn√©es postgres.\n\nC‚Äôest d√©j√† 3 composants, mais rapidement on en beaucoup et il faut savoir comment les agencer\n\n\n\nPourquoi c‚Äôest important : parall√®le avec l‚Äôarchitecture\n\n\n\nPourquoi c‚Äôest important : parall√®le avec l‚Äôarchitecture\n\nPi√®ces, l‚Äôinstallation √©lectrique, l‚Äôeau, le gaz, contraintes l√©gislatives, s‚Äôadapter au terrain‚Ä¶\nBesoin de r√©fl√©chir comment il faut agencer tout √ßa d√®s le d√©but\nSi on construit au fil de l‚Äôeau, on risque d‚Äôavoir une maison incoh√©rente (au mieux)\nCe n‚Äôest pas du temps perdu !\n\n\nCertaines personnes disent m√™me qu‚Äôon devrait passer plus de temps √† analyser qu‚Äô√† coder. Sujet √† d√©bat, mais cela montre bien que la phase d‚Äôanalyse (comment je code les fonctions) est super importante !\nChatGPT peut presque coder √† notre place.\n\n\n\nUn grand principe : separation of concerns\n\n\nVersion macro en 3 couches.\n\nPr√©sentation : tout ce qui se charge de l‚Äôaffichage\nBusiness : c‚Äôest le m√©tier de votre application, sa plus-value\nData : stockage des donn√©es\n\nChaque couche communique avec celles adjacentes.\nUne couche a juste √† savoir comment elle doit demander une information et ce qu‚Äôon lui retourne.\nPas √©vident mais tr√®s important !!!\n\n\n\nLes principales couches d‚Äôune application\n\nPr√©sentation : tout ce qui se charge de l‚Äôaffichage (page web, console, fen√™tre)\nM√©tier : c‚Äôest le m√©tier de votre application, sa plus-value\nPersistance : g√®re la persistance des donn√©es. Base de donn√©es ou syst√®me de fichiers\n\n\n\nPour votre projet\n\nPr√©sentation : terminal\nM√©tier : votre code Python\nPersistance : base de donn√©es\n\n\nExemple page web\n\n\n\nZoom sur la couche m√©tier\n\n\n√Ä l‚Äôint√©rieur de la couche M√©tier, il y a plusieurs sous-couches.\nDans les TP :\n\nCouche pr√©sentation : View (on navigue entre des vues)\nDAO, business_object, service\nContr√¥leur (client) : Il re√ßoit les demandes de l‚Äôutilisateur via l‚Äôinterface utilisateur (par exemple, une requ√™te HTTP dans le cas d‚Äôune application Web) et appelle les services appropri√©s pour ex√©cuter les actions demand√©es.\n\n\n\n\nLes couches de la couche m√©tier 1/2\n\nDAO (Data access object) :\n\nC‚Äôest la partie de votre code qui communique avec la base de donn√©es (CM4/TP4)\n\nService :\n\nCode m√©tier\nManipule des objets m√©tiers pour cr√©er de l‚Äôinformation ou de la valeur\nDemande des objets √† la couche DAO (TP4)\nAppelle les webservices externes (TP3)\n\n\n\n\nLes couches de la couche m√©tier 2/2\n\nObjets m√©tiers :\n\nCouche transversale\nRepr√©sentent des concepts m√©tiers que votre code va manipuler\nObjets avec surtout des attributs et peu de m√©thodes\n\nContr√¥leur :\n\nR√©cup√®re les inputs des utilisateurs\nRenvoie les donn√©es √† afficher\n\n\n\nOn d√©coupe les objets :\n\nAttributs -&gt; Objets m√©tiers (~DTO)\nM√©thodes -&gt; Services\n\n\n\n\nPourquoi s√©parer en couches ?\n\nTravail en groupe ü¶∏‚Äç‚ôÄÔ∏èüßô‚Äç‚ôÇÔ∏èüë®‚Äçüíºüë©‚Äçüî¨\nLisibilit√© du code üìñ\nD√©bogages üêû\n\n\nLimiter les risques d‚Äôerreurs quand on modifie le code (√©viter l‚Äôassiette de spaghetti) üçù\n\n\nIl faut savoir qu‚Äôun code doit √™tre lisible par les autres.\nEt les autres, √ßa peut √™tre soi-m√™me dans 2 mois. Blague sur la relecture de code.\nSi on a un code bien s√©par√©, diff√©rentes √©quipes peuvent travailler en parall√®le.\nEt s√©parer en couches permet de trouver rapidement la source du probl√®me.\n\n\n\nInformations √† retenir\n\nPasser du temps √† r√©fl√©chir aux diff√©rents modules d‚Äôune application n‚Äôest pas une perte de temps üïµÔ∏è‚Äç‚ôÄÔ∏è\nDiviser en couches permet de travailler en parall√®le üß™üß´üìö\nMais il faut encore r√©fl√©chir √† comment bien coder ü§ñ\n\n\nPossible en projet de se r√©partir les couches."
  },
  {
    "objectID": "doc/cours/tests-unitaires-slides.html#les-tests",
    "href": "doc/cours/tests-unitaires-slides.html#les-tests",
    "title": "Les tests unitaires",
    "section": "Les Tests",
    "text": "Les Tests\n\nSource : CommitStrip"
  },
  {
    "objectID": "doc/cours/tests-unitaires-slides.html#les-tests-unitaires",
    "href": "doc/cours/tests-unitaires-slides.html#les-tests-unitaires",
    "title": "Les tests unitaires",
    "section": "Les tests unitaires",
    "text": "Les tests unitaires\nNous allons utiliser le package pytest pour r√©aliser nos tests en Python."
  },
  {
    "objectID": "doc/cours/tests-unitaires-slides.html#mock",
    "href": "doc/cours/tests-unitaires-slides.html#mock",
    "title": "Les tests unitaires",
    "section": "Mock",
    "text": "Mock\n\nObjet simul√© qui remplace un composant r√©el lors des tests\nPermet de tester une unit√© de code en isolant ses d√©pendances externes\nSimuler des sc√©narios complexes comme les erreurs de r√©seau"
  },
  {
    "objectID": "doc/cours/tests-unitaires-slides.html#les-test-driven-development-tdd",
    "href": "doc/cours/tests-unitaires-slides.html#les-test-driven-development-tdd",
    "title": "Les tests unitaires",
    "section": "Les Test Driven Development (TDD)",
    "text": "Les Test Driven Development (TDD)"
  },
  {
    "objectID": "doc/cours/tests-unitaires.html",
    "href": "doc/cours/tests-unitaires.html",
    "title": "Les tests unitaires",
    "section": "",
    "text": "Source : CommitStrip\n\n\n\n\n\nCrash test de voiture\nTest de conformit√©\nTest qualit√© en industrie\nTest statistique\n\n\n\n\n\nPour v√©rifier que votre programme fonctionne\nPour d√©tecter des erreurs\nPour √©viter les r√©gressions (quand vous modifiez du code)\n\n\n\n\n\n\n\nNote\n\n\n\nAucun test n‚Äôest parfait, mais cela permet quand m√™me d‚Äô√©carter de nombreuses erreurs.\n\n\n\nD√©j√† tester une fonctionnalit√© d‚Äôun dev dont le cas nominal plante.\n\n\n\n\nUn test ressemble √† une exp√©rience scientifique.\nIl examine une hypoth√®se exprim√©e en fonction de trois √©l√©ments :\n\nles donn√©es en entr√©e\nl‚Äôobjet √† tester\nles r√©sultats attendus\n\nCet examen est effectu√© sous conditions contr√¥l√©es pour pouvoir tirer des conclusions et, dans l‚Äôid√©al, √™tre reproduit.\n\n\n\n\nPourcentage de fonctions test√©es\nIndicateur de qualit√©\nTendance, plut√¥t qu‚Äôune valeur fiable\n\nPr√©f√©rez faire peu de tests, mais des tests utiles !\n\nNombre de fonctions test√©es sur le nombre total de fonctions.\nTendance car facile de tester toutes les m√©thodes √©l√©mentaires pour augmenter m√©caniquement sa couverture et de mettre de c√¥t√© les tests sur les m√©thodes plus compliqu√©es.\n\n\n\n\nIl existe de tr√®s nombreux tests diff√©rents, voici les principaux :\n\nTest unitaire : teste une fonction pour v√©rifier son bon fonctionnement\nTest fonctionnel : teste les cas d‚Äôutilisation du logiciel\nTest de charge : √©valuent la capacit√© d‚Äôun syst√®me √† g√©rer un volume √©lev√© de donn√©es ou de transactions\nTest d‚Äôint√©gration : v√©rifie que diff√©rents composants ou modules d‚Äôun syst√®me interagissent correctement ensemble\nTest d‚Äôintrusion : v√©rifie la s√©curit√© du logiciel en recherchant des vuln√©rabilit√©s et en simulant des attaques potentielles\n‚Ä¶"
  },
  {
    "objectID": "doc/cours/tests-unitaires.html#les-tests",
    "href": "doc/cours/tests-unitaires.html#les-tests",
    "title": "Les tests unitaires",
    "section": "",
    "text": "Source : CommitStrip\n\n\n\n\n\nCrash test de voiture\nTest de conformit√©\nTest qualit√© en industrie\nTest statistique\n\n\n\n\n\nPour v√©rifier que votre programme fonctionne\nPour d√©tecter des erreurs\nPour √©viter les r√©gressions (quand vous modifiez du code)\n\n\n\n\n\n\n\nNote\n\n\n\nAucun test n‚Äôest parfait, mais cela permet quand m√™me d‚Äô√©carter de nombreuses erreurs.\n\n\n\nD√©j√† tester une fonctionnalit√© d‚Äôun dev dont le cas nominal plante.\n\n\n\n\nUn test ressemble √† une exp√©rience scientifique.\nIl examine une hypoth√®se exprim√©e en fonction de trois √©l√©ments :\n\nles donn√©es en entr√©e\nl‚Äôobjet √† tester\nles r√©sultats attendus\n\nCet examen est effectu√© sous conditions contr√¥l√©es pour pouvoir tirer des conclusions et, dans l‚Äôid√©al, √™tre reproduit.\n\n\n\n\nPourcentage de fonctions test√©es\nIndicateur de qualit√©\nTendance, plut√¥t qu‚Äôune valeur fiable\n\nPr√©f√©rez faire peu de tests, mais des tests utiles !\n\nNombre de fonctions test√©es sur le nombre total de fonctions.\nTendance car facile de tester toutes les m√©thodes √©l√©mentaires pour augmenter m√©caniquement sa couverture et de mettre de c√¥t√© les tests sur les m√©thodes plus compliqu√©es.\n\n\n\n\nIl existe de tr√®s nombreux tests diff√©rents, voici les principaux :\n\nTest unitaire : teste une fonction pour v√©rifier son bon fonctionnement\nTest fonctionnel : teste les cas d‚Äôutilisation du logiciel\nTest de charge : √©valuent la capacit√© d‚Äôun syst√®me √† g√©rer un volume √©lev√© de donn√©es ou de transactions\nTest d‚Äôint√©gration : v√©rifie que diff√©rents composants ou modules d‚Äôun syst√®me interagissent correctement ensemble\nTest d‚Äôintrusion : v√©rifie la s√©curit√© du logiciel en recherchant des vuln√©rabilit√©s et en simulant des attaques potentielles\n‚Ä¶"
  },
  {
    "objectID": "doc/cours/tests-unitaires.html#les-tests-unitaires",
    "href": "doc/cours/tests-unitaires.html#les-tests-unitaires",
    "title": "Les tests unitaires",
    "section": "Les tests unitaires",
    "text": "Les tests unitaires\nNous allons utiliser le package pytest pour r√©aliser nos tests en Python.\n\nUn bon test unitaire\n\nTeste une seule fonctionnalit√©\nIsol√©\nReproductible\nD√©terministe\n\n\n\nIsol√© : ind√©pendant des autres tests\n\nsi vous testez une m√©thode A, qui elle-m√™me appelle d‚Äôautres m√©thodes B, C, D‚Ä¶\nle test ne doit se faire que sur la m√©thode A\nil faut mocker le comportement des autres m√©thodes\n\nD√©terministe : donne toujours le m√™me r√©sultat\n\n\n\n\nM√©thode √† tester\n\n\noperations_mathematiques.py\n\nclass OperationsMathematiques:\n    \"\"\"Op√©rations Math√©matiques\"\"\"\n    def diviser_cinq_par(self, nombre) -&gt; float:\n        \"\"\"Divise le nombre 5 par un nombre donn√©.\n        Parameters\n        ----------\n        nombre : float or int\n            Le nombre par lequel 5 sera divis√©.\n        Returns\n        -------\n        float or None\n            Le r√©sultat de la division de 5 par le nombre donn√©.\n            Si le nombre est √©gal √† 0, la m√©thode retourne None.\n        \"\"\"\n        if nombre != 0:\n            return 5 / nombre\n        else:\n            return None\n\n\n\nClasse de test\nCr√©ons une classe de test.\nPour tester le cas nominal, nous :\n\nchoisissons un nombre en entr√©e\nappelons la m√©thode diviser_cinq_par()\nv√©rifions que la valeur retourn√©e est √©gale √† la valeur attendue\n\n\n\nCas Nominal\n\n\ntest_operations_mathematiques.py\n\nimport pytest\nfrom mathematiques.operations_mathematiques import OperationsMathematiques\n\nclass TestOperationsMathematiques():\n    def test_diviser_cinq_par_nombre_non_nul(self):\n        # GIVEN\n        nombre = 2\n\n        # WHEN\n        resultat = OperationsMathematiques().diviser_cinq_par(nombre)\n\n        # THEN\n        assert resultat == 2.5\n\n\nEst-ce suffisant ?\n\n\n\nAutres cas\nMais ce n‚Äôest pas suffisant !\n\nLa m√©thode a √©galement un autre retour possible : None\nIl faut aussi tester ce cas\n\n\n\ntest_operations_mathematiques.py\n\n    def test_diviser_cinq_par_zero(self):\n        # GIVEN\n        nombre = 0\n\n        # WHEN\n        resultat = OperationsMathematiques().diviser_cinq_par(nombre)\n\n        # THEN\n        assert resultat is None\n\n\n\nEt si‚Ä¶\nNous appelons la m√©thode avec ce param√®tre : diviser_cinq_par(\"a\") ?\nVous pouvez aussi √©crire un test pour v√©rifier que votre m√©thode renvoie bien une exception TypeError dans ce cas.\n\n\ntest_operations_mathematiques.py\n\n    def test_diviser_cinq_string(self):\n        # GIVEN\n        nombre = \"a\"\n\n        # WHEN / THEN\n        with pytest.raises(TypeError):\n            OperationsMathematiques().diviser_cinq_par(nombre)\n\n\nMais il est quand m√™me pr√©f√©rable de v√©rifier dans votre m√©thode que le param√®tre est bien de type num√©rique et de d√©cider quoi faire si ce n‚Äôest pas le cas.\n\n\n\nCe qu‚Äôil faut retenir\nLes tests unitaires\n\nv√©rifient qu‚Äôune m√©thode fait ce qu‚Äôelle doit faire\nil faut tester les cas nominaux, mais √©galement les cas √† la marge et les erreurs\nun test unitaire teste UNE et UNE seule chose\nil faut autant de tests unitaires que de retours possibles\n\n\nVu en 1A :\n@pytest.mark.parametrize(\n'a, b, resultat_attendu',\n[(2, 3, 5),\n (2, 5, 7),\n (3, 4, 7)]\n)"
  },
  {
    "objectID": "doc/cours/tests-unitaires.html#mock",
    "href": "doc/cours/tests-unitaires.html#mock",
    "title": "Les tests unitaires",
    "section": "Mock",
    "text": "Mock\n\nObjet simul√© qui remplace un composant r√©el lors des tests\nPermet de tester une unit√© de code en isolant ses d√©pendances externes\nSimuler des sc√©narios complexes comme les erreurs de r√©seau\n\n\nMock - exemple\n\n\njoueur_service.py\n\nclass JoueurService:\n    def creer(self, pseudo, mdp, age, mail, fan_pokemon) -&gt; Joueur:\n        nouveau_joueur = Joueur(\n            pseudo=pseudo,\n            mdp=hash_password(mdp, pseudo),\n            age=age,\n            mail=mail,\n            fan_pokemon=fan_pokemon,\n        )\n        creation_ok = JoueurDao().creer(nouveau_joueur)\n        if creation_ok:\n            return nouveau_joueur\n        else \n            return None\n\n\nComment pr√©voir le comportement de JoueurDao().creer(nouveau_joueur) ?\n\n\n\nMock - exemple\n\n\ntest_joueur_service.py\n\nfrom unittest.mock import MagicMock\n\ndef test_creer_ok():\n    \"\"\" \"Cr√©ation de Joueur r√©ussie\"\"\"\n\n    # GIVEN\n    pseudo, mdp, age, mail, fan_pokemon = \"jp\", \"1234\", 15, \"z@mail.oo\", True\n    JoueurDao().creer = MagicMock(return_value=True)\n\n    # WHEN\n    joueur = JoueurService().creer(pseudo, mdp, age, mail, fan_pokemon)\n\n    # THEN\n    assert joueur.pseudo == pseudo"
  },
  {
    "objectID": "doc/cours/tests-unitaires.html#les-test-driven-development-tdd",
    "href": "doc/cours/tests-unitaires.html#les-test-driven-development-tdd",
    "title": "Les tests unitaires",
    "section": "Les Test Driven Development (TDD)",
    "text": "Les Test Driven Development (TDD)\n\nQuand tester ?\n\nAu d√©but !\n\n\n\n\n\n\nTip\n\n\n\nPlus on teste t√¥t ‚û°Ô∏è plus les tests sont efficaces et peu co√ªteux !\n\n\n\n\n\nTest Driven Development\nLa meilleure pratique :\n\nCr√©er les tests\nCoder la fonction\n\n\n\nLogique\nCela para√Æt un peu √©trange, mais en fait pas tant que √ßa.\nLorsque vous codez une fonction, vous savez avant de commencer :\n\nquels seront les param√®tres en entr√©e\nquels r√©sultats vous attendez en sortie\ndonc vous savez d√©j√† quoi tester !\n\n\n\nPratique du TDD\n\n‚úÖ Am√©lioration de la qualit√© du code\n‚úÖ R√©duction des bugs\n‚ùå puis ‚úÖ Temps\n‚ùå Maintenance des tests\n\n\n\n\n\n\n\nImportant\n\n\n\nAvantages &gt;&gt;&gt; Incov√©nients\n\n\n\nLa pratique du TDD a le gros avantage que cela nous force √† √©crire des tests et de prendre le temps de bien faire les choses. Pour adh√©rer au TDD il faut vraiment se faire violence au d√©but, mais au final cette pratique est tr√®s b√©n√©fique.\nSinon, si l‚Äôon √©crit la fonction en premier, une fois que l‚Äôon a termin√©, il y a 9 chances sur 10 que l‚Äôon se dise : ‚Äúc‚Äôest bon √ßa marche, pas la peine de tester‚Ä¶‚Äù. Et √ßa c‚Äôest pas bien !!!"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#le-plan",
    "href": "doc/cours/dao-securite-slides.html#le-plan",
    "title": "DAO et S√©curit√©",
    "section": "Le plan",
    "text": "Le plan\n\nData Access Object\n\nPourquoi persister des donn√©es ?\nC‚Äôest quoi une DAO\nExemple de DAO\n\nS√©curit√© Informatique\n\nD√©finition\nFailles de s√©curit√©\nInjection SQL\n\nGestion des mots de passe\n\nAuthentification avec cypher\nHashage de mots de passe\nExemple\n\n\n\nNous allons commencer par parler Stockage des donn√©es"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#data-access-object-dao",
    "href": "doc/cours/dao-securite-slides.html#data-access-object-dao",
    "title": "DAO et S√©curit√©",
    "section": "Data access object (DAO)",
    "text": "Data access object (DAO)\n\n\n\n\n\nNotre objectif va √™tre de stocker des donn√©es, mais avant :"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#comment-se-connecter-√†-une-db-en-python",
    "href": "doc/cours/dao-securite-slides.html#comment-se-connecter-√†-une-db-en-python",
    "title": "DAO et S√©curit√©",
    "section": "Comment se connecter √† une DB en python ?",
    "text": "Comment se connecter √† une DB en python ?\nUtilisation d‚Äôune biblioth√®que d√©di√©e\n\nPostgreSQL : psycopg2\nMySQL : mysql-connector-python\nOracle : cx_Oracle\nMongoDB : pymongo\n\n\nVous lirez en entier la doc : psycopg2.\nIl y aura des questions √† l‚Äôexam !"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#s√©curit√©-informatique",
    "href": "doc/cours/dao-securite-slides.html#s√©curit√©-informatique",
    "title": "DAO et S√©curit√©",
    "section": "S√©curit√© informatique",
    "text": "S√©curit√© informatique"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#les-failles-informatiques",
    "href": "doc/cours/dao-securite-slides.html#les-failles-informatiques",
    "title": "DAO et S√©curit√©",
    "section": "Les failles informatiques",
    "text": "Les failles informatiques"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#exemple-de-failles-les-injections-sql",
    "href": "doc/cours/dao-securite-slides.html#exemple-de-failles-les-injections-sql",
    "title": "DAO et S√©curit√©",
    "section": "Exemple de failles, les injections SQL",
    "text": "Exemple de failles, les injections SQL\n\n\n\nSource : https://xkcd.com/"
  },
  {
    "objectID": "doc/cours/dao-securite-slides.html#gestion-des-mots-de-passe",
    "href": "doc/cours/dao-securite-slides.html#gestion-des-mots-de-passe",
    "title": "DAO et S√©curit√©",
    "section": "Gestion des mots de passe",
    "text": "Gestion des mots de passe\nPour tester la solidit√© d‚Äôun mot de passe :\n\nhttps://ssi.economie.gouv.fr/motdepasse"
  },
  {
    "objectID": "doc/cours/dao-securite.html",
    "href": "doc/cours/dao-securite.html",
    "title": "DAO et S√©curit√©",
    "section": "",
    "text": "Data Access Object\n\nPourquoi persister des donn√©es ?\nC‚Äôest quoi une DAO\nExemple de DAO\n\nS√©curit√© Informatique\n\nD√©finition\nFailles de s√©curit√©\nInjection SQL\n\nGestion des mots de passe\n\nAuthentification avec cypher\nHashage de mots de passe\nExemple\n\n\n\nNous allons commencer par parler Stockage des donn√©es"
  },
  {
    "objectID": "doc/cours/dao-securite.html#le-plan",
    "href": "doc/cours/dao-securite.html#le-plan",
    "title": "DAO et S√©curit√©",
    "section": "",
    "text": "Data Access Object\n\nPourquoi persister des donn√©es ?\nC‚Äôest quoi une DAO\nExemple de DAO\n\nS√©curit√© Informatique\n\nD√©finition\nFailles de s√©curit√©\nInjection SQL\n\nGestion des mots de passe\n\nAuthentification avec cypher\nHashage de mots de passe\nExemple\n\n\n\nNous allons commencer par parler Stockage des donn√©es"
  },
  {
    "objectID": "doc/cours/dao-securite.html#data-access-object-dao",
    "href": "doc/cours/dao-securite.html#data-access-object-dao",
    "title": "DAO et S√©curit√©",
    "section": "Data access object (DAO)",
    "text": "Data access object (DAO)\n\n\n\n\n\nNotre objectif va √™tre de stocker des donn√©es, mais avant :\n\n\nUn ordinateur\nQuels sont ses composants (en gros) ?\n\n\nUn processeur (CPU) : fait UNIQUEMENT du calcul\nLa m√©moire RAM : m√©moire volatile rapide\nDisque dur (HDD, SSD) : m√©moire longue dur√©e\nCarte graphique : unit√© de calcul sp√©cialis√©e\n\n\n\nBien insister sur CPU, RAM, disque !\nRendent 3 services diff√©rents :\n\nCPU : processeur\nDD : disque\nRAM : barrettes\n\n\n\n\nComment r√©soudre ce probl√®me ?\n\n\n\n\nQuel probl√®me ??\n\n\nR√©ponse : Conserver les donn√©es une fois le programme Python termin√©\n\n\n\nUne question √† se poser\np = Personnage(prenom=\"Leia\", nom=\"Organa\", age = 35)\nC‚Äôest quoi une variable Python ?\n\n\nUne r√©f√©rence (le nom de la variable)\nUn objet associ√© (sa valeur)\n\n\n\nOn zappe la notion d‚Äôadressage m√©moire.\nPas besoin de stocker la r√©f√©rence, car elle est dans le code source\n\n\n\nUne question qui en d√©coule\n\n\npersonnage.py\n\nclass Personnage:\n    def __init__(self, prenom, nom, age):\n        self.prenom = prenom\n        self.nom = nom\n        self.age = age\n        self.vaisseaux = []\n\n    def anniversaire(self):\n        self.age += 1\n\nC‚Äôest quoi un objet Python ?\n\n\nDes attributs (qui peuvent √™tre eux-m√™mes des objets)\nDes m√©thodes\n\n\n\nPareil, les m√©thodes c‚Äôest du code, nous on veut juste les attributs\n\n\n\nPour r√©sumer\n\nNous voulons sauvegarder des couples clef-valeur\n\nAvec des valeurs qui peuvent √™tre elles-m√™mes constitu√©es de couples clef-valeur\n\n\n\n\n\n\n\nNous voulons sauvegarder un arbre üå≥\n\n\n\n\nBesoin d‚Äôun dessin avec Leia et Vaisseaux\nParall√®le avec les dict Python / JSON\nArbre car les attributs d‚Äôobjets sont parfois eux-m√™mes des objets\n\n\n\nComment faire cela ?\n\n√âcrire nos donn√©es sur le disque dur dans un fichier\n\ncsv, parquet, json, xml\n\nUtiliser une base de donn√©es\n\nSQL tables + relations, NoSQL\n\n\n\nQuestion : Comment fait une BDD ?\n\nElle g√®re dans des fichiers\n\nOn peut faire le parall√®le avec les couches\n\nLa BDD rend un service, j‚Äôignore comment elle fait\n\nJe sais ce qu‚Äôelle attend en entr√©e et ce qu‚Äôelle me donne en sortie !\n\n\n\n\n\nLien persistance / application\n\nPython : Variables volatiles en RAM\nSyst√®me de persistance : Donn√©es stock√©es sur disque\nData Access Objects (DAO) en guise de lien\n\n\nPetite pause r√©cap pour essayer de r√©cup√©rer tout le monde avant la DAO.\nDans la vraie vie, on ne repart pas de 0 quand on relance une appli.\nSi vous cr√©ez un Personnage, la fois suivante il sera toujours l√†\n\n\n\nC‚Äôest quoi une DAO ?\n\n\n\n\nOn vient de dire que l‚Äôon va stocker dans une BDD.\nComment y acc√©der ?\n\n\n\nC‚Äôest quoi une DAO ?\n\nClasse technique\nUne classe DAO par objet m√©tier\nExpose des m√©thodes pour communiquer avec la couche de persistance\n\n\nC‚Äôest une API\nRend un service √† des clients\nComment elle fait ? -&gt; osef\nComme vous au restaurant. Vous voulez manger, comment c‚Äôest fait vous importe peu tant que le service est rendu (avec un niveau d‚Äôexigence)\nDes ORM tels SQLAlchemy existent pour faire le lien Objet Python - Table BDD -&gt; pas le sujet ici\n\n\n\nQuelles m√©thodes exposer ?\n\n\nCreate\nRead\nUpdate\nDelete\n\n\n\nFaire participer\nEssayer de montrer que ces 4 l√† suffisent.\nApr√®s on peut avoir des raffinements en faisant des choses en masse, ou filtrer, etc.\nQuid de la copie ?\nUne copie c‚Äôest une lecture + cr√©ation donc on sait faire\nExemple dessin : classe Personne - table personne - dao personneDAO\n\n\n\nL‚Äôint√©r√™t d‚Äôune classe √† part\nS√©paration des responsabilit√©s\n\nClasse ‚Äújetable‚Äù üöÆ\nModifiable sans risque üî®\nParall√©lisation du travail ü¶∏‚Äç‚ôÄÔ∏èüßô‚Äç‚ôÇÔ∏èüë®‚Äçüíºüë©‚Äçüî¨\n\n\nOn remet une couche, √ßa fait pas de mal\nDans la vraie vie, si changement de syst√®me, plus facile de migrer\nEn projet, la couche DAO peut √™tre tr√®s facile √† faire\n\n\n\nPetit recap\n\n\nPetit exemple pour illustrer.\nExemple : lister toutes les personnes fans de Pokemon"
  },
  {
    "objectID": "doc/cours/dao-securite.html#comment-se-connecter-√†-une-db-en-python",
    "href": "doc/cours/dao-securite.html#comment-se-connecter-√†-une-db-en-python",
    "title": "DAO et S√©curit√©",
    "section": "Comment se connecter √† une DB en python ?",
    "text": "Comment se connecter √† une DB en python ?\nUtilisation d‚Äôune biblioth√®que d√©di√©e\n\nPostgreSQL : psycopg2\nMySQL : mysql-connector-python\nOracle : cx_Oracle\nMongoDB : pymongo\n\n\nVous lirez en entier la doc : psycopg2.\nIl y aura des questions √† l‚Äôexam !\n\n\npsycopg2\n\npip install psycopg2-binary\nconnection : permet d‚Äô√©tablir la connexion avec la base\nPas super int√©ressant √† faire, le code est donn√©\n\n\n\npsycopg2 - connection\n\n\ndb_connection.py\n\nimport os\nimport dotenv\nimport psycopg2\n\nfrom psycopg2.extras import RealDictCursor\nfrom utils.singleton import Singleton\n\nclass DBConnection(metaclass=Singleton):\n    \"\"\"\n    Classe de connexion √† la base de donn√©es\n    Elle permet de n'ouvrir qu'une seule et unique connexion\n    \"\"\"\n\n    def __init__(self):\n        \"\"\"Ouverture de la connexion\"\"\"\n        dotenv.load_dotenv()\n\n        self.__connection = psycopg2.connect(\n            host=os.environ[\"POSTGRES_HOST\"],\n            port=os.environ[\"POSTGRES_PORT\"],\n            database=os.environ[\"POSTGRES_DATABASE\"],\n            user=os.environ[\"POSTGRES_USER\"],\n            password=os.environ[\"POSTGRES_PASSWORD\"],\n            options=f\"-c search_path={os.environ['POSTGRES_SCHEMA']}\",\n            cursor_factory=RealDictCursor,\n        )\n\n    @property\n    def connection(self):\n        return self.__connection\n\n\nSingleton\n\n\n\npsycopg2 - cursor\n\ncursor : encapsule la requ√™te\nfrom dao.db_connection import DBConnection\n\nwith DBConnection().connection as connection:\n    with connection.cursor() as cursor:\ncursor.execute(\"&lt;une requ√™te SQL&gt;\") : permet de faire une requ√™te\ncursor.fetchone()/fetchall()/fetchmany() : R√©cup√©ration des r√©sultats\n\n\n\nForme de base\ndef dao_function(self, arg1, arg2, ...):\n    # R√©cup√©ration de la connexion √† la base\n    with DBConnection().connection as connection:\n    # Cr√©ation d'un curseur pour faire une requ√™te\n        with connection.cursor() as cursor:\n            # On envoie au serveur la requ√™te SQL\n            cursor.execute(\n                \"&lt;une_requete_sql_√†_trous&gt;\",\n                remplisage_des_trous)\n\n            # On r√©cup√®re le r√©sultat de la requ√™te\n            res = cursor.fetchone()  # ou fetchall()/fetchmany()\n\n    # Si la requ√™te renvoie quelque chose\n    if res:\n      something = \"&lt;res mis en forme&gt;\"\n        \n    return something   \n\nPourquoi on ne retourne pas directement res ?\nres : list[dict]\nOn pr√©f√®re retourner un Objet ou une liste[Objet]\n\n\n\nUn petit exemple : LivreDao\n\n\nISBN : International Standard Book Number\n\n\n\nCr√©er un livre\ndef create(self, livre) -&gt; Livre:\n    \"\"\"Pour cr√©er un livre en base\"\"\"\n    with DBConnection().connection as conn:\n        with conn.cursor() as cursor:\n            cursor.execute(\n                \"INSERT INTO livre (isbm, titre, auteur)         \"\n                \"     VALUES (%(isbm)s, %(titre)s, %(auteur)s)   \"\n                \"  RETURNING id_livre;                           \",\n                {\"isbm\": livre.isbm, \n                 \"titre\": livre.titre, \n                 \"auteur\": livre.auteur},\n            )\n            livre.id = cursor.fetchone()[\"id_livre\"]\n    return livre\n\nPossible aussi de retourner une bool√©en :\n\ntrue si cr√©ation r√©ussie\nfalse sinon\n\n\n\n\nLister les livres\ndef find_all(self) -&gt; list[Livre]:\n    \"\"\"Pour r√©cup√©rer tous les livres en base\"\"\"\n    with DBConnection().connection as conn:\n        with conn.cursor() as cursor:\n            cursor.execute(\n                \"SELECT id_livre,                  \"\n                \"       isbm,                      \"\n                \"       titre,                     \"\n                \"       auteur                     \"\n                \"  FROM livre ;                    \"\n            )\n            livre_bdd = cursor.fetchall()\n            \n    liste_livres = []\n\n    if livre_bdd:\n        for livre in livre_bdd:\n            liste_livres.append(\n                Livre(\n                    id=livre[\"id_livre\"],\n                    isbm=livre[\"isbm\"],\n                    titre=livre[\"titre\"],\n                    auteur=livre[\"auteur\"],\n                )\n            )\n            \n    return liste_livres\n\n\nlivre_bdd = [{id_livre=1, isbm=123, ‚ÄúLe Schtroumpf hackeur‚Äù, ‚ÄúPeyo‚Äù}, {‚Ä¶}, ‚Ä¶]\nlivre = {id_livre=1, isbm=123, ‚ÄúLe Schtroumpf hackeur‚Äù, ‚ÄúPeyo‚Äù}\nliste_livres = [Livre(1, 123, ‚ÄúLe Schtroumpf hackeur‚Äù, ‚ÄúPeyo‚Äù), Livre(‚Ä¶), ‚Ä¶]\n\n\n\n\nTrouver un livre\ndef find_by_isbm(self, isbm) -&gt; Livre:\n    \"\"\"Pour r√©cup√©rer un livre depuis son isbm\"\"\"\n    with DBConnection().connection as conn:\n        with conn.cursor() as cursor:\n            cursor.execute(\n                \"SELECT *                          \"\n                \"  FROM livre                      \"\n                \" WHERE isbm = %(isbm)s            \",\n                {\"isbm\": isbm}\n            livre_bdd = cursor.fetchone()\n            \n    livre = None\n    if livre_bdd:\n        livre = Livre(\n            id=livre_bdd[\"id_livre\"],\n            isbm=livre_bdd[\"isbm\"],\n            titre=livre_bdd[\"titre\"],\n            auteur=livre_bdd[\"auteur\"],\n        )\n    return livre\n\nlivre_bdd : dict livre : Livre\nPrincipe √† retenir si vous voulez comprendre : nous allons toujours dans les DAO transformer les dict en objets\n\n\n\nConclusion\n\nPython travaille en RAM (volatile)\nObligation d‚Äôavoir un m√©canisme de persistance des donn√©es\nDAO : centralise les m√©thodes pour lire/√©crire nos donn√©es\nLa couche m√©tier appelle la DAO sans se pr√©occuper du syst√®me de persistance\nPermet un travail d‚Äô√©quipe efficace ü¶∏‚Äç‚ôÄÔ∏èüßô‚Äç‚ôÇÔ∏èüë®‚Äçüíºüë©‚Äçüî¨"
  },
  {
    "objectID": "doc/cours/dao-securite.html#s√©curit√©-informatique",
    "href": "doc/cours/dao-securite.html#s√©curit√©-informatique",
    "title": "DAO et S√©curit√©",
    "section": "S√©curit√© informatique",
    "text": "S√©curit√© informatique\n\nPrincipes CAID\n\n\n\n\n\n4 piliers de la s√©curit√© info\n\nConfidentialit√©\nAuthentification\nInt√©grit√©\nDisponibilit√©\n\n\nOn utilise aussi parfois DICP ou DICPA\nDisponibilit√©, Int√©grit√©, Confidentialit√©, Preuve\n\n\n\nDeux bonus\n\nTra√ßabilit√©\nNon-r√©pudiation\n\n\n\nConfidentialit√©\n\n\n\n\n\n\nSeules les personnes autoris√©es doivent avoir acc√®s aux informations qui leur sont destin√©es (notions de droits ou permissions).\nTout acc√®s ind√©sirable doit √™tre emp√™ch√©.\n\n\n\nM√©canismes associ√©s :\n\ngestion des droits (annuaires, r√¥les ‚Ä¶)\ncryptographie\n\n\nOn parle plut√¥t de chiffrement\n\n\n\nAuthentification\n\n\n\n\n\n\nLes utilisateurs doivent prouver leur identit√© en r√©pondant √† un ‚Äúchallenge‚Äù.\n\n\n\nM√©canismes associ√©s :\n\nauthentification faible (identifiant, mot de passe)\nauthentification forte (donn√©es biom√©triques, multi-facteurs)\n\n\n\nInt√©grit√©\n\n\n\n\n\n\nLes donn√©es doivent √™tre celles que l‚Äôon attend, et ne doivent pas √™tre alt√©r√©es de fa√ßons fortuites, illicites ou malveillantes.\n\n\n\nM√©canismes associ√©s :\n\nsignature √©lectronique\nchecksum\n\n\nSignature √©lectronique : garantir l‚Äôint√©grit√© d‚Äôun document, c‚Äôest-√†-dire s‚Äôassurer que le document n‚Äôa pas √©t√© alt√©r√© entre sa signature et sa consultation; authentifier son auteur, c‚Äôest-√†-dire s‚Äôassurer de l‚Äôidentit√© de la personne signataire.\nChecksum : bit de parit√©.\n\n\n\nDisponibilit√©\n\n\n\n\n\n\nL‚Äôacc√®s aux ressources du syst√®me d‚Äôinformation doit √™tre permanent et sans faille durant les plages d‚Äôutilisation pr√©vues.\n\n\n\nM√©canismes associ√©s :\n\nredondance des serveurs\nvirtualisation\nconteneurisation\n\n\nBackup\nParler de la mise en production avant.\n\n\n\nTra√ßabilit√©\n\n\n\n\n\n\nGarantit que les acc√®s et tentatives d‚Äôacc√®s aux √©l√©ments consid√©r√©s sont trac√©s et que ces traces sont conserv√©es et exploitables.\n\n\n\nM√©canisme associ√© :\n\njournalisation\n\n\nLogs (mieux que les prints)\nProjet 2024-2025\n\n\n\nLa non-r√©pudiation\n\n\n\n\n\n\nAucun utilisateur ne doit pouvoir contester les op√©rations qu‚Äôil a r√©alis√©es dans le cadre de ses actions autoris√©es et aucun tiers ne doit pouvoir s‚Äôattribuer les actions d‚Äôun autre utilisateur.\n\n\n\nM√©canismes associ√©s :\n\ntra√ßabilit√©\nauthentification\nint√©grit√©\n\n\nC‚Äôest pas moi\nMais c‚Äôest votre nom !\nNe laissez pas vos sessions ouvertes aux pauses (CTRL + ALT + F12)"
  },
  {
    "objectID": "doc/cours/dao-securite.html#les-failles-informatiques",
    "href": "doc/cours/dao-securite.html#les-failles-informatiques",
    "title": "DAO et S√©curit√©",
    "section": "Les failles informatiques",
    "text": "Les failles informatiques\n\nTrop de failles !!!\n\nFailles physiques ‚Äúbas niveau‚Äù\nFailles physiques ‚Äúhaut niveau‚Äù\nInjection SQL\nInjection de donn√©es\nFaille XSS\nEx√©cution de code\n‚Ä¶\n\n\n\nFailles physiques ‚Äúbas niveau‚Äù : coupure √©lectrique, inondation salle serveur\nFailles physiques ‚Äúhaut niveau‚Äù : acc√®s physique √† une machine\n\n\n\n\nDe quoi faut-il se m√©fier ?\n\n\n\n\nDe vos utilisateurs"
  },
  {
    "objectID": "doc/cours/dao-securite.html#exemple-de-failles-les-injections-sql",
    "href": "doc/cours/dao-securite.html#exemple-de-failles-les-injections-sql",
    "title": "DAO et S√©curit√©",
    "section": "Exemple de failles, les injections SQL",
    "text": "Exemple de failles, les injections SQL\n\n\n\nSource : https://xkcd.com/\n\n\n\nInjection SQL\nConsiste √† saisir du SQL pour ex√©cuter une autre requ√™te que celle pr√©vue.\nProbl√®mes :\n\nConfidentialit√©\nAuthentification\nInt√©grit√©\nDisponibilit√©\n\n\n\nExemple : s‚Äôauthentifier sans mot de passe\nRequ√™te d‚Äôauthentification\nSELECT * \n  FROM user \n WHERE name = 'input_name' \n   AND mdp = 'input_mdp';\n\n\n\n\n\n\n\nVous saisissez\n\n\n\n\nGennysson\nawsome_password\n\n\n\n\n\nSELECT * \n  FROM user \n WHERE name = 'Gennysson' \n   AND mdp = 'awsome_password';\n\n\nSi dans votre cursor.execute vous avez ce code\n\n\n\nExemple : s‚Äôauthentifier sans mot de passe\nSELECT * \n  FROM user \n WHERE name = 'input_name' \n   AND mdp = 'input_mdp';\n\n\n\n\n\n\n\nVous saisissez\n\n\n\n\nGennysson\n' OR 1=1; --\n\n\n\n\n\nSELECT * \n  FROM user \n WHERE name = 'Gennysson' \n   AND mdp = '' OR 1=1; --';\n\n\n\nExemple : supprimer une table\nSELECT * \n  FROM user \n WHERE name = 'input_name' \n   AND mdp = 'input_mdp';\n\n\n\n\n\n\n\nVous saisissez\n\n\n\n\nGennysson\n'; DROP TABLE user CASCADE; --\n\n\n\n\n\nSELECT * \n  FROM user \n WHERE name='Gennysson' \n   AND mdp=''; DROP TABLE user CASCADE; --;\n\n\n\n\n\n\n\nComment se prot√©ger ?\n\n√âchapper les caract√®res sp√©ciaux\nUtiliser une requ√™te pr√©par√©e\n\nLa biblioth√®que que vous utiliserez ne fait que de l‚Äô√©chappement de caract√®res sp√©ciaux üò®\n\nLa seconde solution est mieux que la premi√®re mais psycopg2 ne semble pas la proposer simplement.\nDonc il faut la conna√Ætre, mais savoir que c‚Äôest la premi√®re solution qui va √™tre faite.\n√âchapper les caract√®res sp√©ciaux : par exemple, ¬´ ‚Äô ¬ª sera remplac√© par ¬´ ' ¬ª\nL‚Äôapostrophe ne sera donc pas interpr√©t√©e comme une fin de cha√Æne par le SGBD\nInstruction ‚Äúprepare‚Äù :\n1. Envoie la requ√™te √† trous √† la BDD\n2. Envoie pour remplir les trous\n\n\n\nCross Site Scripting\nConsiste √† injecter du code provoquant des actions sur le navigateur. Cela peut permettre :\n\nDes redirections de page (phishing)\nDu vol d‚Äôinformation\nDes actions sur le site\nRendre le site difficile √† utiliser\n\n\n\nComment se prot√©ger ?\n\nNe jamais ins√©rer des donn√©es brutes\n√âchapper les caract√®res sp√©ciaux\nV√©rifier vos donn√©es\n\n\n\n\n\n\n\nTip\n\n\n\nLes biblioth√®ques web le font souvent pour vous !\n\n\n\n\nTo sum up : injection\n\nNe jamais faire confiance aux utilisateurs, v√©rifier / nettoyer leurs inputs\nNe jamais faire confiance aux utilisateurs, v√©rifier / nettoyer leurs inputs\nNe jamais faire confiance aux utilisateurs, v√©rifier / nettoyer leurs inputs"
  },
  {
    "objectID": "doc/cours/dao-securite.html#gestion-des-mots-de-passe",
    "href": "doc/cours/dao-securite.html#gestion-des-mots-de-passe",
    "title": "DAO et S√©curit√©",
    "section": "Gestion des mots de passe",
    "text": "Gestion des mots de passe\nPour tester la solidit√© d‚Äôun mot de passe :\n\nhttps://ssi.economie.gouv.fr/motdepasse\n\n\nVotre application doit-elle stocker des mots de passe en clair?\n\n\n\n\n\n\n\nVotre application doit-elle conna√Ætre le mot de passe d‚Äôun utilisateur pour l‚Äôauthentifier ?\n\n\n\n\n\n\n\nComment on fait ?\n\n\n\n\n\nHasher le mot de passe\n\nHashage du mot de passe\nStockage du hash en base\nQuand besoin de comparer on hashe le mdp saisi\nEt on compare les hashs\n\nAuthentification sans persister les mots de passe !!!!\n\nC‚Äôest tellement simple et s√©curis√© !\nMais pas tous les sites le font ‚Ä¶\nUn site qui vous renvoie votre mdp le garde en m√©moire (ou du moins le moyen de le d√©chiffrer)\nDans la vraie vie, on rajoute un ‚Äúsel‚Äù au mdp avant de le hacher.\nC‚Äôest une valeur al√©atoire calcul√©e pour chaque utilisateur que l‚Äôon va rajouter au mdp avant de le hacher\nCela rend une attaque en force brute plus co√ªteuse.\n\n\n\n\n\n\n\nAjouter du sel pour plus de s√©curit√©\n\n\n\n\n\nUne base sans sel ajout√©\n\nVotre base mail/mdp fuite mais les mdp sont hach√©s\nLes attaquants doivent bruteforce les mdp\nIls commencent par les mdp les plus courants, et les hachent avec les algo de hash courants\nPuis ils comparent avec la base\nForte chance d‚Äôavoir plusieurs correspondances\n\n\nbruteforce : tester toutes les combinaisons possibles\n\n\n\nLe sel c‚Äôest bon pour la s√©curit√©\nAu lieu de hacher et stocker le mdp vous stockez et hachez le mdp ET un √©l√©ment li√© √† l‚Äôutilisateur de mani√®re d√©terministe (le sel).\nMaintenant m√™me si 2 personnes ont le m√™me mdp, elles auront des hash diff√©rents.\n\n\nLe sel c‚Äôest bon pour la s√©curit√©\n\nVotre base mail/mdp fuite mais les mdp sont hach√©s et sal√©s\nLes attaquants doivent bruteforce les mdp\nIls commencent par les mdp les plus courants, et les hachent avec les algo de hash courants\nPuis ils comparent avec la base.\nIl y a pas de match car vos mdp sont sal√©s\nEt trouver un mdp ne permet de trouver les autres\n\n\n\n\n\nExemple de hashage de mdp\nimport hashlib\n \ndef hash_password(password, idep):\n    salt = idep\n    return hashlib.sha256(salt.encode() + password.encode()).hexdigest()\n    \nprint(hash_password(\"awsome_password\", \"Gennysson\"))\n\n\nTo sum up the security part\n\nToujours v√©rifier les inputs\nNe jamais faire confiance aux utilisateurs\nPlusieurs niveaux de s√©curit√©\nPas besoin de stocker les mots de passe en clair"
  },
  {
    "objectID": "doc/tp/tp1.html",
    "href": "doc/tp/tp1.html",
    "title": "Git, Example of Application",
    "section": "",
    "text": "The practical labs will be carried out on one of the two datalabs :\nWe will be using the following tools:"
  },
  {
    "objectID": "doc/tp/tp1.html#accounts-and-configuration",
    "href": "doc/tp/tp1.html#accounts-and-configuration",
    "title": "Git, Example of Application",
    "section": "Accounts and Configuration",
    "text": "Accounts and Configuration\n\nGitHub account\n\n\n\n\n\n\nNote\n\n\n\nGitHub is a web-based platform that provides hosting for software development and version control using Git.\nIt‚Äôs widely used by developers to collaborate on projects.\n\n\n\nCreate a GitHub account, if you don‚Äôt already have one\n\n\n\nGit Config\n\n\n\n\n\n\nTip\n\n\n\nTo avoid having to identify yourself every time you want to push code onto GitHub, we‚Äôre going to:\n\ncreate a token on GitHub\ndeclare this token on the datalab\n\nSee this tutorial for more information.\n\n\n\nLog on to the datalab of your choice\nGo to My account &gt; Git tab\n\nYou must have an active Personal Access Token\nIf not :\n\nIn GitHub, Generate a new token (classic)\n\nExpiration: 90 days\ntick repo and workflow\nGenerate token\n\nCopy the token (ghp_xxxxxxxxxx)\nPaste it in the datalab"
  },
  {
    "objectID": "doc/tp/tp1.html#objectives",
    "href": "doc/tp/tp1.html#objectives",
    "title": "Git, Example of Application",
    "section": "Objectives",
    "text": "Objectives\nThe objectives of this first tutorial are as follows:\n\nUse of Git\nGetting to grips with VS Code\nUnderstand how an application works\n\nThis tutorial combines explanations and code phases.\nThe explanations in this tutorial should not take precedence over those of your instructor. Use them as a knowledge base for later, but always prefer oral explanations."
  },
  {
    "objectID": "doc/tp/tp1.html#repositories-creation",
    "href": "doc/tp/tp1.html#repositories-creation",
    "title": "Git, Example of Application",
    "section": "1 Repositories creation",
    "text": "1 Repositories creation\n\n\n\n\n\n\nCaution\n\n\n\nFor this first tutorial, you will work with your project team on a single remote repository.\nOne member of the team will create a repository on GitHub and then all the members (including the creator of the GitHub repository) will create their local repositories by cloning this remote repository.\n\n\n\n1.1 Remote repository\n\n\n\n\n\n\nImportant\n\n\n\nA single team member creates this remote repository.\n\n\n\nConnect on GitHub\nCreate a fork of the repository ENSAI-2A-complement-info-TP\n\nA fork is a copy of a repository, allowing a user to develop independently without affecting the original\n\nAdd your team members\n\nOn the repository page &gt; ‚öôÔ∏è Settings &gt; Collaborators &gt; Add people\n\nSend the address of the remote repository to your team\n\n\n\n1.2 Local repositories\nAll team members will now create a local repository on a VSCode service in the datalab.\n\nLaunch a VSCode-python service\n\nImportant: in tab Network access, enable Port 9876\nIt will be usefull later to expose your webservice\n\nOnce VSCode has been launched, open a new terminal\n\nTop left, icon with 3 horizontal bars &gt; Terminal &gt; New\nor use shortcut CTRL + SHIFT + C\n\nClone the remote repository using the token\n\ngit clone https://${GIT_PERSONAL_ACCESS_TOKEN}@github.com/&lt;user_name&gt;/&lt;repo_name&gt;.git\nGIT_PERSONAL_ACCESS_TOKEN\n\nPosition yourself in your repo\n\nFile &gt; Open Folder &gt; /home/onyxia/work/&lt;repo_name&gt; &gt; OK\n\n\n\n\n\n\n\n\nEnvironment Variables\n\n\n\nAn environment variable is a system-defined value used to configure how applications run or to securely store information like file paths, keys, or access tokens.\nIt is like a key-value pair in a dictionary. For example, GIT_PERSONAL_ACCESS_TOKEN is a variable whose value stores your GitHub personal access token.\nexport MY_VAR_KEY=my_var_value   # Create or replace\necho $MY_VAR_KEY                 # Display\nprintenv                         # Display all\nprintenv | grep GIT              # Display all containing the word GIT"
  },
  {
    "objectID": "doc/tp/tp1.html#repository-content",
    "href": "doc/tp/tp1.html#repository-content",
    "title": "Git, Example of Application",
    "section": "2 Repository content",
    "text": "2 Repository content\n\n\n\n\n\n\nNote\n\n\n\nFocus on some files.\n\n\n\n2.1 README\nThe README file is essential for every project. It contains all the information needed to describe, install and use the application.\nYou will now follow the README instructions to :\n\nInstall required packages\nFill in the environment variables\n\n\n\n\n\n\n\nTip\n\n\n\nYou notice that you need to connect to a PostgreSQL database.\n\nIn the datalab, launch a new PostgreSQL service\n\nRessources tab &gt; Persistent volume size: 1Gi\n\nWhile the service is starting, copy the properties and fill in the .env file\n\n\n\n\n\n2.2 VSCode settings\nMost of these settings concern the automatic formatting of code when you save a file:\n\nFormatter: Ruff\n\"editor.formatOnSave\": true: apply format when you save a file\n`‚Äúeditor.insertSpaces‚Äù: true,: replace tabulation by spaces\n\nAnother important property :\n\n\"PYTHONPATH\": \"${workspaceFolder}/src\": Python code is in folder src"
  },
  {
    "objectID": "doc/tp/tp1.html#application-example",
    "href": "doc/tp/tp1.html#application-example",
    "title": "Git, Example of Application",
    "section": "3 Application example",
    "text": "3 Application example\nTo understand how a layered application is built, we‚Äôll look at a project template.\nYou may be asked to design 2 types of application:\n\nA CLI application\n\nthe user navigates through menus\n\nA webservice\n\nthe application exposes endpoints\nthe user can query these endpoints and retrieve the results\n\n\n\n3.1 CLI application\n\nFollow README instructions to run the application\n\nYou arrive at the home menu. The principle of this type of application is to let you navigate from one view to another. If necessary, the view will call up services in the background.\n\nCreate a new account\n\n\n\n\n\n\n\nNote\n\n\n\nBelow is a sequence diagram explaining the process.\nYou will find the same information in the log file.\n\n\n\n\n\nsequenceDiagram\n    participant CLI\n    participant Vue as InscriptionVue\n    participant Service as JoueurService\n    participant Dao as JoueurDao\n\n    CLI-&gt;&gt;Vue: Enter pseudo\n    Vue-&gt;&gt;Service: pseudo_deja_utilise()\n    Service-&gt;&gt;Dao: lister_tous()\n    Dao--&gt;&gt;Service: All players\n    Service--&gt;&gt;Vue: True or False\n    Vue-&gt;&gt;CLI: continue if True\n\n    CLI-&gt;&gt;Vue: Enter pwd, mail...\n    Vue-&gt;&gt;Service: creer()\n    Service-&gt;&gt;Dao: creer()\n    Dao--&gt;&gt;Service: True\n    Service--&gt;&gt;Vue: Joueur object\n    Vue-&gt;&gt;CLI: Success\n\n\n\n\n\n\n\n\nYou‚Äôll notice that the application asks for a password that‚Äôs a little too long.\n\nFind and change the password required length to 16 characters\n\nYou will find it in one of the classes above\n\nRead the inquirerPy to add a special character\n\n\n\n\n\n\n\nYou can do better\n\n\n\nIn software development, hardcoding fixed values is discouraged because it reduces flexibility and security.\nInstead, using variables or configuration settings allows for easier adjustments and better adaptability across different environments.\n\n\n\nCreate an environment variable called PASSWORD_MIN_LENGTH\nUse it ! üèâ\n\nwith this code os.environ[\"PASSWORD_MIN_LENGTH\"] after importing os\n\n\n\n\n\n\n\n\nTip\n\n\n\nThere are many ways of restricting user input.\nIt is also possible to create custom rules.\n\n\n\nAfter returning to the home page, choose Se connecter\n\nYou will arrive at a new view with a new menu\nüí° to go faster, you can use user ‚Äúa‚Äù, password ‚Äúa‚Äù\n\nDisplay the players\nOpen the log file in the logs folder\n\n\n\n\n\n\n\nNote\n\n\n\nIn the logs, you can see the flow of operations:\n\nYou navigate from view to view\nSome views call services, which in turn call DAOs\n\n\n\n\nLog out and stop the application\n\n\n\n3.2 A webservice\nWe‚Äôll come back to webservices in more detail in TP3.\n\nFollowing the instructions in the README, run the webservice\n\n\n\n\n\n\n\nHow to query it\n\n\n\nInside the Datalab VSCode service, You can query your webservice by running this command in another terminal: curl http://localhost:9876/hello/Alice\nHowever, you may remember that at the beginning we opened port 9876 to the outside world, i.e.¬†the whole Internet.\nSo anyone who knows the address can query this web service from any machine.\nTo get the address:\n\nIn the Datalab, go to My Services tab\nOpen once again the VSCode service\nYou will find a link\n\n\n\n\nIn your browser, test the GET (read) requests\nCheck the logs to see the methods called\nStop the webservice\n\n\n\n\n\n\n\nCaution\n\n\n\nFor other types of http request (PUT, POST, DELETE), the browser is not enough.\nYou will see how to make these requests in a later tutorial."
  },
  {
    "objectID": "doc/tp/tp1.html#git",
    "href": "doc/tp/tp1.html#git",
    "title": "Git, Example of Application",
    "section": "4 Git",
    "text": "4 Git\n\n\n\n\n\n\nNote\n\n\n\nYou‚Äôre now going to do a few basic things with Git :\n\nAdd files to the repository\nCreate save points\nSend your local modifications to remote repositories\nUpdate your local repository\n\n\n\n\n4.1 Git routine\n\nCreate a new file in the src folder using your own first name and paste this code\n\n\n&lt;firstname&gt;.py\n\na, b = 0, 5\n\nfor i in range(b):\n    print(\" \" * a, end=\"\")\n    a += 1\n    print(\"Hello &lt;firstname&gt;\")\n\nIn Git Bash, use the status, add, commit, push and pull commands to send your changes to the remote repository.\n\n\n\n\n\n\n\nAide\n\n\n\n\n\nThe sequence of Git commands should become automatic.\nIf you get this message when you push, you need to start with pull.\nTo https://github.com/ludo2ne/ENSAI-2A-complement-info-TP.git\nMerge branch 'main' of https://github.com/ludo2ne/ENSAI-2A-complement-info-TP\n ! [rejected]        main -&gt; main (fetch first)\nerror: failed to push some refs to 'https://github.com/ludo2ne/ENSAI-2A-complement-info-TP.git'\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first merge the remote changes (e.g.,\nhint: 'git pull') before pushing again.\nhint: See the 'Note about fast-forwards' in 'git push --help' for details.\n\n\n\n\n\n4.2 Creating conflict\n\n\n\n\n\n\nImportant\n\n\n\nOnly one team member will do it!\n\n\n\nFor all &lt;firstname.py&gt; files, first name in the code.\n\ndo not change the file names, only the code inside\n\nprint(\"Hello &lt;firstname&gt;\") ‚û°Ô∏è print(\"Hello Mary-&lt;firstname&gt;\")\n\nAnd it add, commit and push\n\n\n\n\n4.3 Solve conflits\n\nThen the other members each modify their own file\n\nprint(\"Hello &lt;firstname&gt;\") ‚û°Ô∏è print(\"Hello Anna-&lt;firstname&gt;\")\nAnd they add, commit, pull and push.\n\n\nNormally a conflict arises during pull. This is because there is a version conflict\n\n\n\n\n\n\n\nVersion\nCode\n\n\n\n\nOriginal version\nprint(\"Hello &lt;firstname&gt;\")\n\n\nYour modification\nprint(\"Hello Anne-&lt;firstname&gt;\")\n\n\nVersion on remote repository\nprint(\"Hello Marie-&lt;firstname&gt;\")\n\n\n\n&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD\nprint(\"Bonjour Anna-&lt;firstname&gt;\")         # Your code - current change\n=======\nprint(\"Bonjour Mary-&lt;firstname&gt;\")         # Code in the remote repository - incoming change\n&gt;&gt;&gt;&gt;&gt;&gt;&gt;\n\nYou can choose to impose your version\n\neither by clicking on Accept Current Change\nOr by deleting print(‚ÄòHello Mary-&lt;firstname&gt;‚Äô), as well as &lt;&lt;&lt;&lt;&lt;&lt;&lt;, ======= and &gt;&gt;&gt;&gt;&gt;&gt;&gt;.\n\nadd, commit pull and push\n\n\n\n\n\n\n\nImportant\n\n\n\nHaving a conflict isn‚Äôt a big deal!\nHaving a conflict isn‚Äôt a big deal!\nHaving a conflict isn‚Äôt a big deal!\nConflict ‚â† Error\nThis simply happens when Git encounters 2 versions and it doesn‚Äôt have a üîÆ or a üé≤ to choose which is the right one.\nTo avoid conflicts, get organised with your team to avoid working on the same files at the same time as much as possible."
  },
  {
    "objectID": "doc/tp/tp1.html#create-your-project-repository",
    "href": "doc/tp/tp1.html#create-your-project-repository",
    "title": "Git, Example of Application",
    "section": "5 Create your project repository",
    "text": "5 Create your project repository\nA team member :\n\nCreates a remote repository on GitHub (new Repository)\n\nRepository name: for example ENSAI-Projet-info-2A.\nPublic or Private, as you wish\nCheck Add a README file.\n.gitignore : Python\nChoose a license : Apache, GNU, MIT‚Ä¶\n\nInvite your teammates\n\n\n\n\n\n\n\nMandatory\n\n\n\n\nAlso invite your tutor and teacher (username: ludo2ne)\n\n\n\nNext, each team member :\n\nCreates a local clone of the repository\nDoes a test to check that they can push code, for example by creating:\n\ndoc/tracking/2025.09.04-week1.md: the first weekly point\nsrc/main.py: the file to launch your application\nrequirements.txt: the file listing the packages\n\n\n\n\n\n\n\n\nCaution\n\n\n\nAfterwards, you‚Äôll make sure that your depot is ‚Äútidy‚Äù, in the same way as described in the previous section.\n\n\n\n5.1 .env file\nThis file will contain environment variables that will be used, for example, to connect to the PostgreSQL database.\n\nMake sure that this file remains in your local repository and is never sent to GitHub.\n\n\n\n\n\n\n\nTip\n\n\n\n\n\nJust one member of the team needs to modify the appropriate file, push, and then the others pull."
  },
  {
    "objectID": "doc/tp/tp1.html#conclusion",
    "href": "doc/tp/tp1.html#conclusion",
    "title": "Git, Example of Application",
    "section": "Conclusion",
    "text": "Conclusion\nThe aim of this tutorial was to get you up to speed on using Git, and to help you discover and understand how a layered application works.\n\n\n\n\n\n\nImportant\n\n\n\nWhen you have finished coding, don‚Äôt forget to :\n\npush your code to GitHub\npause or delete your services"
  },
  {
    "objectID": "doc/tp/tp2.html",
    "href": "doc/tp/tp2.html",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "",
    "text": "Ce TP m√™le explications et phases de code.\nLes explications de ce TP ne doivent pas prendre le pas sur celles de votre intervenant. Prenez les comme une base de connaissance pour plus tard, mais pr√©f√©rez toujours les explications orales.\n\n\n\n\n\n\nNotions abord√©es\n\n\n\n\nRappels sur la POO\nTests Unitaires\nObjets m√©tier\nPatron de conception strategy"
  },
  {
    "objectID": "doc/tp/tp2.html#avant-de-commencer",
    "href": "doc/tp/tp2.html#avant-de-commencer",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "",
    "text": "Ce TP m√™le explications et phases de code.\nLes explications de ce TP ne doivent pas prendre le pas sur celles de votre intervenant. Prenez les comme une base de connaissance pour plus tard, mais pr√©f√©rez toujours les explications orales.\n\n\n\n\n\n\nNotions abord√©es\n\n\n\n\nRappels sur la POO\nTests Unitaires\nObjets m√©tier\nPatron de conception strategy"
  },
  {
    "objectID": "doc/tp/tp2.html#ce-que-vous-allez-coder",
    "href": "doc/tp/tp2.html#ce-que-vous-allez-coder",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "1 Ce que vous allez coder",
    "text": "1 Ce que vous allez coder\nNotre jeu s‚Äôinspirera de Pok√©mon Unite (aucune connaissance du jeu, ni de Pok√©mon n‚Äôest n√©cessaire).\nEn quelques mots, il y aura des Pokemons qui s‚Äôaffronteront lors de Battles en lan√ßant des Attacks.\n\n1.1 Objets m√©tier\nVous allez cr√©er les objets m√©tier pour un jeu Pok√©mon.\n\n\n\n\n\n\nObjet m√©tier (business object)\n\n\n\nUn objet m√©tier est une repr√©sentation d‚Äôune entit√© sp√©cifique dans le contexte d‚Äôune application m√©tier. Il encapsule les donn√©es et les comportements associ√©s √† cette entit√© et est souvent utilis√© pour mod√©liser des concepts du monde r√©el dans le domaine de l‚Äôapplication.\nCela conduit √† avoir des objets contenant essentiellement des attributs et tr√®s peu de m√©thodes autre que des getter et setter.\n\n\nPour prendre un autre exemple, voici des objets m√©tier pour une application simple qui g√®re la location de v√©los :\n\nVelo : Repr√©sente un v√©lo (id, type, mod√®le‚Ä¶)\nClient : Repr√©sente une personne (id, nom, pr√©nom‚Ä¶)\nLocation : Repr√©sente une transaction de location (id, Client, Velo, debut, fin, montant‚Ä¶)\n\n\n\n1.2 Les objets m√©tier de l‚Äôappli\n\nPokemon : qui ont diverses caract√©ristiques et statistiques\n\nun nom\nun niveau\nun type\n\nici les types sont : Attaquant, D√©fenseur, Polyvalant, Soutient et Rapide (et non pas : Feu, Eau, Plante‚Ä¶)\n\ndes statistiques contenues dans un objet Statistic d√©fini ci-dessous\n\nStatistic : pour √©viter de surcharger la classe Pokemon, leurs stats sont stock√©es dans un objet de la classe Statistic\n\nhp : health points\nattack, defense, speed‚Ä¶ : qui serviront d√©terminer la force de ses attaques\n\nAttack : diff√©rents types d‚Äôattaques dont disposeront les Pokemons (partie 3)\nBattle : servira √† faire s‚Äôaffronter 2 Pokemons pour d√©terminer l‚Äôissue du combat (partie 4)\n\n\n\n1.3 Diagramme de classes\nVoici un diagramme de classes tr√®s simplifi√© des classes principales √† coder lors de ces TP.\n\n\n\n\n\nclassDiagram\n  class Pokemon {\n    # _name : str\n    # _level : int\n    # _type : str\n    # _current_stat : Statistic\n    + get_pokemon_attack_coef() float\n  }\n \n  class Statistic {\n    - __hp : int\n    - __attack : int\n    - __defense : int\n    - __sp_atk : int\n    - __sp_def : int\n    - __speed : int\n  }\n\n  class Attack{\n    # _name : str\n    # _power : int\n    # _description : str\n    + compute_damage(Pokemon, Pokemon) int\n  }\n\n  class Battle{\n    - first_monstie : Pokemon\n    - second_monstie : Pokemon\n    - winner : Pokemon\n  }\n\n  Pokemon o-- Statistic : possesses\n  Pokemon o-- Attack : uses\n  Battle o..\"2\" Pokemon : call"
  },
  {
    "objectID": "doc/tp/tp2.html#clone-du-d√©p√¥t",
    "href": "doc/tp/tp2.html#clone-du-d√©p√¥t",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "2 Clone du d√©p√¥t",
    "text": "2 Clone du d√©p√¥t\nLe code du TP se trouve sur GitHub, vous allez cr√©er un clone local.\n\nOuvrez Git Bash\nCr√©ez un dossier pour stocker votre clone\n\n√Ä la main ou avec cette commande : mkdir -p /p/Cours2A/UE3-Complements-info/TP2 && cd $_\n\nElle cr√©e l‚Äôarborescence demand√©e (mkdir)\nPuis elle vous positionne dans ce dossier (cd)\n\n\nClonez le d√©p√¥t distant\n\ngit clone https://github.com/ludo2ne/ENSAI-2A-complement-info-TP.git\n\nFermez Git Bash si tout s‚Äôest bien pass√©\n\n\n2.1 Ouverture dans VSCode\n\nOuvrez Visual Studio Code\nOuvrez votre d√©p√¥t local\n\nFile &gt; Open Folder\nAllez dans le dossier P:\\Cours2A\\UE3-Complements-info\\TP2\nCliquez une seule fois sur üìÅ ENSAI-2A-complement-info-TP\nPuis sur le bouton S√©lectionner un dossier\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\nV√©rifiez que le dossier parent dans l‚ÄôExplorer VS Code est ENSAI-2A-complement-info-TP\n\nL‚ÄôExplorer, √† gauche, permet d‚Äôexplorer l‚Äôarborsence des fichiers et dossiers\n\n\n‚ö†Ô∏è Si le dossier parent n‚Äôest pas le bon, recommencez l‚ÄôOpen Folder o√π vous aurez de gros soucis par la suite !!!\n\n\n\nOuvrez le Git Bash int√©gr√© dans VS Code\n\nTerminal &gt; New Terminal (ou CTRL + √π)"
  },
  {
    "objectID": "doc/tp/tp2.html#mod√©lisation-et-impl√©mentation",
    "href": "doc/tp/tp2.html#mod√©lisation-et-impl√©mentation",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "3 Mod√©lisation et impl√©mentation",
    "text": "3 Mod√©lisation et impl√©mentation\nDans un premier temps, nous allons travailler uniquement sur les Pokemons (la classe Statistic est d√©j√† cod√©e).\nAvant d‚Äô√©crire du code, nous allons r√©fl√©chir √† la meilleure conception possible pour r√©aliser nos Pok√©mons. Notre conception essaiera au maximum de respecter la r√®gle suivante : faible couplage, forte coh√©sion.\nEn d‚Äôautre termes nous allons essayer de faire :\n\ndes classes les plus disjointes possibles (faible couplage) pour qu‚Äôune modification dans une classe ne nous demande pas de modifier les autres\ntout en essayant d‚Äôavoir dans chaque classe les t√¢ches les plus li√©es possibles (forte coh√©sion).\n\n\n3.1 Premi√®re approche : le ¬´ if/elif/else ¬ª\n\nOuvrez le code de la classe Pokemon\n\nNous nous interessons √† la m√©thode get_pokemon_attack_coef() qui va servir √† d√©terminer la puissance de l‚Äôattaque en fonction du type de Pok√©mon.\n\nExpliquez pourquoi une impl√©mentation √† base de if/elif/else pour les types est une mauvaise id√©e ?\n\nImaginez s‚Äôil y avait plusieurs blocs de code similaires dans notre application, et que nous devions ajouter un nouveau type\n\n\n\n\n3.2 La puissance de la POO\nAu lieu d‚Äôexternaliser les comportements de nos Pokemons, nous allons mettre tous leurs comportements sp√©cifiques dans des classes filles d‚Äôune super classe Pokemon. Ceci est rendu possible gr√¢ce √† deux propri√©t√©s des objets en POO :\n\nh√©ritage : il est possible de sp√©cialiser une classe existante en modifiant son comportement, ou en ajoutant de nouveaux\npolymorphisme : deux fonctions peuvent avoir le m√™me nom mais avoir des comportements diff√©rents\n\nEn plus, comme chacun de nos Pokemons va forcement √™tre d‚Äôun type, aucun ne sera simplement de la classe Pokemon, cela nous permet de rendre cette classe abstraite. En d√©finissant clairement notre classe abstraite nous allons avoir :\n\nUn plan pour toutes les classes qui en h√©ritent. Cela √† pour avantages de :\n\nDonner des informations sur la structuration du code\n\nPermettre de g√©n√©rer automatiquement les m√©thodes √† d√©finir\nLimiter les bug. Si on oublie une m√©thode, le code plante au d√©marrage, ce qui √©vite des comportements non pr√©vus difficiles √† d√©tecter\n\nUne interface unique pour tous les types de Pokemons. Quelque soit le type du Pokemon, il sera consid√©r√© comme un AbstractPokemon partout dans le code.\n\n\n\nTransformez la classe Pokemon en classe abstraite AbstractPokemon\n\nrenommez √©galement le fichier en abstract_pokemon.py\n\nTransformez la m√©thode get_pokemon_attack_coef() en m√©thode abstraite\nCr√©ez les classes Attacker, Defender et AllRounder qui h√©ritent de AbstractPokemon\nDans ces 3 classes, impl√©mentez la m√©thode get_pokemon_attack_coef()\n\nVous devriez arriver √† la fin √† une arborescence proche de celle-ci :\nENSAI-2A-COMPLEMENTS-INFO-TP\n    ‚îî‚îÄ‚îÄ src\n        ‚îî‚îÄ‚îÄ business_object\n            ‚îú‚îÄ‚îÄ pokemon\n            ‚îÇ   ‚îú‚îÄ‚îÄ abstract_pokemon.py\n            ‚îÇ   ‚îú‚îÄ‚îÄ attacker.py\n            ‚îÇ   ‚îú‚îÄ‚îÄ defender.py\n            ‚îÇ   ‚îî‚îÄ‚îÄ all_rounder.py\n            ‚îî‚îÄ‚îÄ statistic.py\n\n\n\n\n\n\nAide\n\n\n\n\n\nPour faire une classe abstraite, utilisez le package abc.\nVoici, pour vous inspirer, un exemple de ce qui est attendu :\n\n\nabstract_personnage.py\n\nfrom abc import ABC, abstractmethod\n\nclass AbstractPersonnage(ABC):\n    def __init__(self, phrase_attaque:str, phrase_defense:str):\n        self._phrase_attaque = phrase_attaque\n        self._phrase_defense = phrase_defense\n       \n    @abstractmethod  # d√©corateur qui d√©finit une m√©thode comme abstraite\n    def degat_attaque(self) -&gt; int:\n        pass\n\n\n\nmagicien.py\n\nfrom abstract_personnage import AbstractPersonnage\n\nclass Magicien(AbstractPersonnage):\n    def __init__(self):\n        super().__init__(\"Lance une boule de feu\", \"Utilise une barri√®re magique\")\n       \n    def degat_attaque(self) -&gt; int:\n        return 10\n\n\n\n\nPour vous aider, voici le diagramme de classes :\n\n\n\n\n\nclassDiagram\n  class AbstractPokemon {\n    &lt;&lt;abstract&gt;&gt;\n    # _name : str\n    # _level : int\n    # _type : str\n    # _current_stat : Statistic\n    + get_pokemon_attack_coef() float\n  }\n \n  class Statistic {\n    - __hp : int\n    - __attack : int\n    - __defense : int\n    - __sp_atk : int\n    - __sp_def : int\n    - __speed : int\n  }\n \n  AbstractPokemon &lt;|-- Attacker\n  AbstractPokemon &lt;|-- Defender\n  AbstractPokemon &lt;|-- AllRounder\n  AbstractPokemon o-- Statistic\n\n\n\n\n\n\n\n\n3.3 Testez votre code\n\nTestez la m√©thode get_pokemon_attack_coef() pour les classes AttackerPokemon et AllRounderPokemon.\n\npython -m pytest -v\n\n\nPour cela vous allez utiliser le package pytest de python.\nCe package permet de r√©aliser des tests unitaires dans des classes s√©par√©es. L‚Äôavantage par rapport √† doctest, c‚Äôest que les tests ne ‚Äúpolluent‚Äù pas vos classes, et qu‚Äôil est possible de patcher certains comportements des classes.\nUn exemple de test est donn√© dans la classe testDefenderPokemon. Pour rappel, un test se d√©compose en 3 parties :\n\nGIVEN : cr√©ation des objets n√©cessaires √† la r√©alisation du test\nWHEN : appel de la m√©thode √† tester\nTHEN : v√©rification du r√©sultat\n\nLes classes de test seront organis√©es de la mani√®re suivante, en reproduisant l‚Äôarchitecture de votre application :\nENSAI-2A-COMPLEMENTS-INFO-TP\n    ‚îî‚îÄ‚îÄ src\n        ‚îú‚îÄ‚îÄ business_object\n        ‚îÇ   ‚îú‚îÄ‚îÄ pokemon\n        ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ abstract_pokemon.py\n        ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ attacker.py\n        ‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ defender.py\n        ‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ all_rounder.py\n        ‚îÇ   ‚îî‚îÄ‚îÄ statistic.py\n        ‚îî‚îÄ‚îÄ test\n            ‚îî‚îÄ‚îÄ test_business_object\n                ‚îî‚îÄ‚îÄ test_pokemon\n                    ‚îú‚îÄ‚îÄ test_attacker.py\n                    ‚îú‚îÄ‚îÄ test_defender.py\n                    ‚îî‚îÄ‚îÄ test_all_rounder.py\n\n\n\n\n\n\nSi vous rencontrez des probl√®mes d‚Äôimports\n\n\n\n\nV√©rifiez que le dossier parent dans l‚Äôexplorer de VSCode est : ENSAI-2A-complement-info-TP\nUtilisez des chemins complets d‚Äôimport plut√¥t que des chemins relatifs\n\nla racine des chemins est param√©tr√©e au niveau du dossier src\nexemple : from business_object.pokemon.abstract_pokemon import AbstractPokemon\n\nCr√©ez des fichiers __init__.py (vide)\n\ndans TOUS les dossiers que vous cr√©ez\nc‚Äôest un peu p√©nible mais √ßa peut d√©bloquer la situation\n\n\n\n\n\nPouvez-vous tester la m√©thode level_up() directement sur un AbstractPokemon ?"
  },
  {
    "objectID": "doc/tp/tp2.html#lagr√©gation-lautre-fa√ßon-dajouter-de-la-souplesse-dans-le-code",
    "href": "doc/tp/tp2.html#lagr√©gation-lautre-fa√ßon-dajouter-de-la-souplesse-dans-le-code",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "4 L‚Äôagr√©gation, l‚Äôautre fa√ßon d‚Äôajouter de la souplesse dans le code",
    "text": "4 L‚Äôagr√©gation, l‚Äôautre fa√ßon d‚Äôajouter de la souplesse dans le code\nMaintenant que nos Pok√©mons sont faits, nous allons y ajouter les attaques.\nNotre syst√®me va devoir respecter certaines contraintes :\n\nPlusieurs types d‚Äôattaques vont coexister, chacune avec un mode de calcul de d√©g√¢ts diff√©rent :\n\nDes attaques √† d√©g√¢ts variables s√©par√©es en 2 types :\n\nattaques ‚Äúphysiques‚Äù qui utilisent l‚Äôattaque et la d√©fense des Pok√©mons\nattaques ‚Äúsp√©ciales‚Äù qui utilisent l‚Äôattaque sp√© et la d√©fense sp√© des Pok√©mons\n\nDes attaques √† d√©g√¢ts fixes qui font un nombre fixe de d√©g√¢ts.\n\nUn pok√©mon peut avoir plusieurs attaques et le type de l‚Äôattaque doit √™tre transparent pour le pok√©mon.\n\n\n\n4.1 Attaques √† d√©g√¢ts fixes\nNous allons commencer par les attaques √† d√©g√¢ts fixes. Comme il y aura un autre type d‚Äôattaques, toutes les attaques h√©riterons de la classe abstraite AbstractAttack d√©j√† cr√©√©e. Cette classe poss√®de la m√©thode abstraite compute_damage() qui devra √™tre impl√©ment√©e dans les classes filles.\n\n\n\n\n\nclassDiagram\n\n  class AbstractAttack{\n    &lt;&lt;abstract&gt;&gt;\n    # _power : int\n    # _name : str\n    # _description : str\n    + compute_damage(APkm, APkm)$  int\n  }\n\n   class FixedDamageAttack{\n    + compute_damage(APkm,APkm )  int\n   }\n \n   AbstractAttack &lt;|-- FixedDamageAttack\n\n\n\n\n\n\n\nImpl√©mentez la classe FixedDamageAttack\n\nainsi que sa m√©thode compute_damage() qui retournera simplement la puissance (power) de l‚Äôattaque\n\nCr√©ez des tests unitaires pour v√©rifier que tout fonctionne correctement\n\n\n\n4.2 Attaques √† d√©g√¢ts variables\nNous allons ensuite coder les attaques √† d√©g√¢ts variables. Elles utilisent la formule suivante :\n\\[Damage = \\big ( \\frac{(\\frac{2*Level}{5}+2)* Power *Att}{Def*50} +2\\big) *random* other\\_multipliers\\]\navec :\n\n\\(Att\\)‚Äã : √©gal soit √† l‚Äôattaque ou l‚Äôattaque sp√© du Pokemon attaquant\n\\(Def\\)‚Äã‚Äã : √©gal soit √† la d√©fense ou d√©fense sp√© du Pokemon d√©fenseur\n\\(Power\\)‚Äã : la valeur de puissance de l‚Äôattaque\n\\(random\\)‚Äã‚Äã :une valeur comprise dans l‚Äôintervalle [0.85; 1]\n\\(other\\_ multipliers\\) : les autres multiplicateurs possibles, comme le coefficient d‚Äôattaque des pok√©mons.\n\nLa seule diff√©rence entre attaque physique et sp√©ciale vient des coefficients \\(Att\\) et \\(Def\\), le reste de la formule des d√©g√¢ts est identique. Nous allons donc utiliser le patron de conception template method, dont voici la mod√©lisation UML dans notre cas :\n\n\n\n\n\nclassDiagram\n\n  class AbstractAttack{\n    &lt;&lt;abstract&gt;&gt;\n    # _power : int\n    # _name : str\n    # _description : str\n    + compute_damage(APkm, APkm)$  int\n  }\n\n   class FixedDamageAttack{\n    + compute_damage(APkm,APkm )  int\n   }\n\n  class AbstractFormulaAttack{\n    &lt;&lt;abstract&gt;&gt;\n    -get_attack_stat(APkm)$  float\n    -get_defense_stat(APkm)$  float\n    +compute_damage(APkm,APkm)  int\n  }\n \n  class PhysicalFormulaAttack{\n    -get_attack_stat(APkm)  float\n    -get_defense_stat(APkm)  float\n  }\n \n  class SpecialFormulaAttack{\n    -get_attack_stat(APkm)  float\n    -get_defense_stat(APkm)  float\n  }\n \n   AbstractAttack &lt;|-- FixedDamageAttack\n   AbstractAttack &lt;|-- AbstractFormulaAttack\n   AbstractFormulaAttack &lt;|-- SpecialFormulaAttack\n   AbstractFormulaAttack &lt;|-- PhysicalFormulaAttack\n\n\n\n\n\n\nLa classe AbstractFormulaAttack va contenir les m√©thodes :\n\ncompute_damage(). Cette m√©thode va contenir la formule de calcul des d√©g√¢ts\n\nmais en appelant les m√©thodes get_attaque_stat() et get_defense_stat() pour savoir quelle statistique utiliser\n\nget_attack_stat() et get_defense_stat() (abstraites). Ces m√©thodes devront √™tre impl√©ment√©es dans les classes filles pour d√©terminer quelles statistiques utiliser.\n\n\n\nImpl√©mentez les 3 nouvelles classes et cr√©ez des tests pour v√©rifier que tout fonctionne correctement"
  },
  {
    "objectID": "doc/tp/tp2.html#architecture-finale",
    "href": "doc/tp/tp2.html#architecture-finale",
    "title": "Python, POO, Tests Unitaires et Documentation",
    "section": "5 Architecture finale",
    "text": "5 Architecture finale\n\n\n\n\n\n\nBonus\n\n\n\nSi vous avez le temps !\n\n\nNous allons maintenant rattacher les bouts pour cr√©er notre architecture finale :\n\n\n\n\n\nclassDiagram\n  class AbstractPokemon {\n    &lt;&lt;abstract&gt;&gt;\n    # _current_stat : Statistique\n    # _level : int\n    # _name : str\n    # _attack_list : List~AbstractAttack~\n    +get_pokemon_attack_coef()$  float\n    +level_up() None\n  }\n \n  class Statistique {\n    - hp : int\n    - attaque : int\n    - defense : int\n    - spe_atk : int\n    - spe_def : int\n    - vitesse : int\n  }\n   \n  class BattleService {\n    + resolve_battle(APkm, APkm) : Battle\n    + get_order(APkm, APkm)\n    + choose_attack(APkm) : AAttack\n  }  \n  \n  class Battle{\n    - first_monstie : APkm\n    - second_monstie : APkm\n    - winner : APkm\n    - rounds : List&lt;Round&gt;\n  }\n\n  class Round{\n    attacker: APkm\n    defender: APkm\n    dealt_damage: int\n    attack_description: str\n  }\n  BattleService ..&gt;\"2\" AbstractPokemon : use\n  AbstractPokemon &lt;|-- Attacker\n  AbstractPokemon &lt;|-- Defender\n  AbstractPokemon &lt;|-- AllRounder\n  Statistique *-- AbstractPokemon\n\n  Battle .. BattleService\n  Battle .. Round\n \n  class AbstractAttack{\n    &lt;&lt;abstract&gt;&gt;\n    # _power : int\n    # _name : str\n    # _description : str\n    +compute_damage(APkm, APkm)$ int\n  }\n\n  class FixedDamageAttack{\n    + compute_damage(APkm,APkm )  int\n  }\n\n  class AbstractFormulaAttack{\n    &lt;&lt;abstract&gt;&gt;\n    -get_attack_stat(APkm)$  float\n    -get_defense_stat(APkm)$  float\n    + compute_damage(APkm,APkm ) int\n  }\n \n  class PhysicalFormulaAttack{\n   -get_attack_stat(APkm)$  float\n   -get_defense_stat(APkm)$  float\n  }\n \n  class SpecialFormulaAttack{\n    -get_attack_stat(APkm)  float\n    -get_defense_stat(APkm)  float\n  }\n \n  AbstractAttack &lt;|-- FixedDamageAttack\n  AbstractAttack &lt;|-- AbstractFormulaAttack\n  AbstractFormulaAttack &lt;|-- SpecialFormulaAttack\n  AbstractFormulaAttack &lt;|-- PhysicalFormulaAttack\n  BattleService &gt;.. AbstractAttack  : use\n  AbstractPokemon o--&gt;\"0..*\" AbstractAttack\n\n\n\n\n\n\n\n\nImpl√©mentez le diagramme de classes ci-dessus\nTestez votre code en √©crivant de nouveaux tests unitaires\n\nCette architecture permet de d√©corr√©ler les attaques des pok√©mons et de sp√©cifier le comportement des attaques au fur et √† mesure des h√©ritages. Les avantages sont :\n\nPour la classe AbstractPokemon, toutes les attaques sont des AbstractAttack. Tant qu‚Äôelles exposent la m√©thode compute_damage() notre programme va fonctionner. On peut ainsi facilement ajouter de nouveaux types d‚Äôattaques sans probl√®me.\nUn Pok√©mon peut avoir des attaques de tous les types\nNous pouvons ajouter un syst√®me d‚Äô√©tat comme la paralysie ou le poison assez facilement. Il faut pour cela modifier la classe AbstractAttack et les classes qui en h√©ritent. Cela sera potentiellement long, mais ne demande pas de toucher √† la partie ‚ÄúPok√©mon‚Äù de notre architecture.\nUne personne pourrait se concentrer sur la cr√©ation des Pok√©mons alors qu‚Äôune autre pourrait se concentrer sur celles des attaques sans difficult√©. Les deux parties du code sont relativement ind√©pendantes, la seule zone de couplage sont les classes AbstractPokemon et AbstractAttack, qui servent avant tout √† d√©finir ce qui doit √™tre fait par les classes filles et ce qui est accessible √† l‚Äôext√©rieur.\n\nLe fait d‚Äôexternaliser le comportement des attaques dans des classes sp√©cifiques puis de les lier aux Pok√©mons via une relation d‚Äôagr√©gation assez souple qui permet de changer dynamiquement les attaques d‚Äôun Pok√©mon est le patron de conception strategy.\n\n\n\n\n\n\n\nCorrection\n\n\n\nVous avez la possibilit√© de consulter la correction soit :\n\nen changeant votre d√©p√¥t local de branche\nen consultant la branche ad√©quat sur le d√©p√¥t distant\n\nVoici quelques commandes git utiles pour changer de branche :\n# Lister toutes les branches\ngit branch -a\n\n# Avant de changer de branche, cr√©ez un point de sauvegarde de votre travail\ngit add .\ngit commit -m \"&lt;message&gt;\"\n\n# changer de branche\ngit checkout &lt;nouvelle_branche&gt;   # dans le terminal, la branche courante est indiqu√©e entre ()\ngit checkout -                    # pour retourner √† la branche pr√©c√©dente"
  },
  {
    "objectID": "doc/tp/tp4.html",
    "href": "doc/tp/tp4.html",
    "title": "Data Access Objet (DAO)",
    "section": "",
    "text": "üò± Comme vous pouvez le constater le sujet de ce TP est lui aussi long. Cela ne doit pas vous effrayer. Il m√©lange explications compl√®tes et manipulations pour √™tre au maximum autosuffisant. Vous n‚Äôallez surement pas terminer le sujet, ce n‚Äôest pas grave. Il est l√† pour vous aider lors du projet informatique.\nCe TP m√™le explications pour vous faire comprendre ce qui est fait, et phases de manipulation ou code.\nLes explications de ce TP ne doivent pas prendre le pas sur celles de votre intervenant. Prenez-les comme une base de connaissances pour plus tard, mais pr√©f√©rez toujours les explications orales.\n\n\n\n\n\n\nObjectifs\n\n\n\nDans ce TP vous allez :\n\nRevoir des notions de base de donn√©es relationnelles\nImpl√©menter le patron de conception DAO\nVoir si votre programme fonctionne avec des tests unitaires reproductibles"
  },
  {
    "objectID": "doc/tp/tp4.html#avant-de-commencer",
    "href": "doc/tp/tp4.html#avant-de-commencer",
    "title": "Data Access Objet (DAO)",
    "section": "",
    "text": "üò± Comme vous pouvez le constater le sujet de ce TP est lui aussi long. Cela ne doit pas vous effrayer. Il m√©lange explications compl√®tes et manipulations pour √™tre au maximum autosuffisant. Vous n‚Äôallez surement pas terminer le sujet, ce n‚Äôest pas grave. Il est l√† pour vous aider lors du projet informatique.\nCe TP m√™le explications pour vous faire comprendre ce qui est fait, et phases de manipulation ou code.\nLes explications de ce TP ne doivent pas prendre le pas sur celles de votre intervenant. Prenez-les comme une base de connaissances pour plus tard, mais pr√©f√©rez toujours les explications orales.\n\n\n\n\n\n\nObjectifs\n\n\n\nDans ce TP vous allez :\n\nRevoir des notions de base de donn√©es relationnelles\nImpl√©menter le patron de conception DAO\nVoir si votre programme fonctionne avec des tests unitaires reproductibles"
  },
  {
    "objectID": "doc/tp/tp4.html#mise-√†-jour-de-votre-d√©p√¥t-local",
    "href": "doc/tp/tp4.html#mise-√†-jour-de-votre-d√©p√¥t-local",
    "title": "Data Access Objet (DAO)",
    "section": "1 Mise √† jour de votre d√©p√¥t local",
    "text": "1 Mise √† jour de votre d√©p√¥t local\n\n\n\n\n\n\nCaution\n\n\n\nSi vous n‚Äôavez pas le d√©p√¥t sur votre machine, cr√©ez un clone en suivant la section Clone du d√©p√¥t du TP2.\n\n\n\nOuvrez Visual Studio Code\nOuvrez votre d√©p√¥t local\n\nFile &gt; Open Folder\nAllez dans le dossier P:\\Cours2A\\UE3-Complements-info\\TP2\nCliquez une seule fois sur üìÅ ENSAI-2A-complement-info-TP\nPuis sur le bouton S√©lectionner un dossier\n\n\n\n\n\n\n\n\nImportant\n\n\n\n\nV√©rifiez que le dossier parent dans l‚ÄôExplorer VS Code est ENSAI-2A-complement-info-TP\n\nL‚ÄôExplorer, √† gauche, permet d‚Äôexplorer l‚Äôarborsence des fichiers et dossiers\n\n\n‚ö†Ô∏è Si le dossier parent n‚Äôest pas le bon, recommencez l‚ÄôOpen Folder o√π vous aurez de gros soucis par la suite !!!\n\n\n\nOuvrez le Git Bash int√©gr√© dans VS Code\n\nTerminal &gt; New Terminal (ou CTRL + √π)\nPassez sur la branche du TP4 et mettez-l√† √† jour\n\nsi vous ne l‚Äôavez pas fait √† la fin du dernier TP, commencez par un add et un commit\ngit switch tp4-base\ngit pull\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nPour pour v√©rifier que tout fonctionne :\n\nlancez les tests unitaires du package business_object\n\ndans le terminal : python -m pytest -v src/tests/test_business_object/\n\nlancez le main : python src/main.py\n\nS‚Äôil vous manque des packages, suivez les instructions du README.\n\n\n\n1.1 Connexion √† la BDD\n\nPour pouvoir vous connecter √† votre base de donn√©es, renseignez les variables suivantes dans le fichier .env pr√©sent √† la racine du d√©p√¥t :\n\n\n.env\n\nPOSTGRES_HOST=sgbd-eleves.domensai.ecole\nPOSTGRES_PORT=5432\nPOSTGRES_DATABASE=idxxxx\nPOSTGRES_USER=idxxxx\nPOSTGRES_PASSWORD=idxxxx\n\n\nN‚Äôoubliez pas de remplacer xxxx par votre id\n\n\nMaintenant que la connexion est op√©rationnelle, initialisez votre base de donn√©es :\n\nLancez le script utils/reset_database.py\n\n\n\n\n\n\n\nTip\n\n\n\nCe script va ex√©cuter 2 fichiers sql :\n\ndata/init_db.sql pour cr√©er les tables\ndata/pop_db.sql pour ins√©rer des donn√©es"
  },
  {
    "objectID": "doc/tp/tp4.html#remise-en-jambes-sql",
    "href": "doc/tp/tp4.html#remise-en-jambes-sql",
    "title": "Data Access Objet (DAO)",
    "section": "2 Remise en jambes SQL",
    "text": "2 Remise en jambes SQL\n\nOuvrez DBeaver\n\n\n\n\n\n\n\nNombre de connexions limit√©\n\n\n\nSur le r√©seau ENSAI, le nombre de connexions √† votre base de donn√©es est limit√©.\nOr par d√©faut, DBeaver utilise d√©j√† 3 connexions, ce qui risque de vous poser des soucis lorsque vous essaierez de vous connecter depuis votre programme Python.\nLa solution :\n\nDans DBeaver, allez dans le menu Fen√™tre puis Pr√©f√©rences\nRecherchez M√©tadonn√©es et d√©cochez Ouvrir une connexion s√©par√©e pour la lecture des m√©tadonn√©es\nRecherchez Editeur SQL et d√©cochez Ouvrir une connexion s√©par√©e pour chaque √©diteur\nAppliquez\n\n\n\n√âcrivez les 3 requ√™tes suivantes (elle serviront pour la suite du TP) :\n\nListez toutes les attaques, ainsi que le nom du type d‚Äôattaque\nListez tous les pokemons, ainsi que le nom du type de Pokemon\nListez toutes les attaques de Pikachu\n\nPour vous aider, voici le sch√©ma des tables et leurs relations"
  },
  {
    "objectID": "doc/tp/tp4.html#data-access-objet-dao",
    "href": "doc/tp/tp4.html#data-access-objet-dao",
    "title": "Data Access Objet (DAO)",
    "section": "3 Data Access Objet (DAO)",
    "text": "3 Data Access Objet (DAO)\n\n3.1 Mod√©lisation\nReprenons le diagramme de classe du TP2. Limitons nous √† la partie ‚Äúattaque‚Äù et r√©fl√©chissons o√π mettre une m√©thode qui permet de persister les attaques.\n\n\n\n\n\nclassDiagram\n\nclass AbstractAttack{\n    &lt;&lt;abstract&gt;&gt;\n    + DATABASE_TYPE_LABEL : str\n    # _id : int\n    # _power : int\n    # _name : str\n    # _description : str\n    +compute_damage(APkm, APkm)$  int\n    }\n    class FixedDamageAttack{\n        + compute_damage(APkm,APkm )  int\n    }\n    class AbstractFormulaAttack{\n    &lt;&lt;abstract&gt;&gt;\n        -get_attack_stat(APkm)$  float\n        -get_defense_stat(APkm)$  float\n        +compute_damage(APkm,APkm)  int\n    }\n    \n    class PhysicalAttack{\n        -get_attack_stat(APkm)  float\n        -get_defense_stat(APkm)  float\n    }\n    \n    class SpecialAttack{\n        -get_attack_stat(APkm)  float\n        -get_defense_stat(APkm)  float\n    }\n    \n    FixedDamageAttack--|&gt;AbstractAttack\n    AbstractFormulaAttack--|&gt;AbstractAttack\n    SpecialAttack--|&gt;AbstractFormulaAttack\n    PhysicalAttack--|&gt;AbstractFormulaAttack\n\n\n\n\n\n\n\n\nVu que les attributs de nos attaques sont similaires, nous n‚Äôallons pas coder cela dans les classes sp√©cifiques des attaques. Nous pourrions mettre les m√©thodes dans AbstractAttack. √áa fonctionnerait bien d‚Äôailleurs. Nous aurions une classe unique avec nos m√©thodes pour interagir avec la base. Mais nous n‚Äôallons pas faire √ßa !\nEt l√† vous vous demandez :\n\nüò± Mais pourquoi ???\n\nEt la r√©ponse est :\n\nüòõ Car √ßa n‚Äôa aucun sens !\n\nRevenons sur la phrase : faible couplage, forte coh√©sion. Si nous mettons toutes les m√©thodes de persistance de nos attaques dans la classe AbstractAttack, nous allons avoir une classe qui :\n\n‚úîÔ∏è D√©termine le comportement des attaques. C‚Äôest exactement ce que l‚Äôon souhaite (forte coh√©sion).\n‚ùå D√©termine comment on persiste une attaque.\n\n\n\n\n\n\n\nImportant\n\n\n\nMais √ßa, ce n‚Äôest pas de la responsabilit√© d‚Äôune attaque, mais du syst√®me de persistance choisi, ou du moins de l‚Äôinterm√©diaire entre nos objets et le syst√®me de persistance !\n\n\nJe n‚Äôai personnellement pas envie d‚Äôaller modifier ma classe AbstractAttack uniquement car j‚Äôai d√©cid√© de changer de syst√®me de gestion de la persistance. Je risque de modifier quelque chose que je ne devrais pas et cr√©er des r√©gressions (i.e.¬†faire apparaitre des erreurs sur un code qui n‚Äôen avait pas avant). Or j‚Äôaimerais bien limiter les sources d‚Äôerreurs.\n√Ä la place, nous allons cr√©er une classe qui va s‚Äôoccuper uniquement de cette t√¢che : une classe DAO (Data Access Object). C‚Äôest une classe technique qui va faire l‚Äôinterface entre nos donn√©es stock√©es et notre application. Voil√† ce que cela donne en terme de diagramme de classe.\n\n\n\n\n\nclassDiagram\n\nclass AbstractAttack{\n    &lt;&lt;abstract&gt;&gt;\n    + DATABASE_TYPE_LABEL : str\n    # _id : int\n    # _power : int\n    # _name : str\n    # _description : str\n    +compute_damage(APkm, APkm)$  int\n    }\n    class FixedDamageAttack{\n        + compute_damage(APkm,APkm )  int\n    }\n    class AbstractFormulaAttack{\n    &lt;&lt;abstract&gt;&gt;\n        -get_attack_stat(APkm)$  float\n        -get_defense_stat(APkm)$  float\n        +compute_damage(APkm,APkm)  int\n    }\n    \n    class PhysicalAttack{\n        -get_attack_stat(APkm)  float\n        -get_defense_stat(APkm)  float\n    }\n    \n    class SpecialAttack{\n        -get_attack_stat(APkm)  float\n        -get_defense_stat(APkm)  float\n    }\n    \n    FixedDamageAttack--|&gt;AbstractAttack\n    AbstractFormulaAttack--|&gt;AbstractAttack\n    SpecialAttack--|&gt;AbstractFormulaAttack\n    PhysicalAttack--|&gt;AbstractFormulaAttack\n\n\nclass AttackDao{\n&lt;&lt;Singleton&gt;&gt;\n +create(AbstractAttack) AbstractAttack\n +find_by_id(int) AbstractAttack\n +find_all() List[AbstractAttack]\n +update(AbstractAttack) AbstractAttack\n +delete(AbstractAttack) bool\n}\n\nclass DBConnection{\n&lt;&lt;Singleton&gt;&gt;\n-__connection : Connection\n\n+connection() Connection\n}\n\nAbstractAttack&lt;.. AttackDao: create\nAttackDao..&gt; DBConnection: use\n\n\n\n\n\n\n\n\n\n3.2 Gestion des connexions et patern singleton\nPour vous connecter √† la base de donn√©es nous allons utiliser la biblioth√®que python psycopg2. C‚Äôest elle qui va √©tablir la connexion avec la base, envoyer nos requ√™tes et nous retourner les r√©sultats.\nMais il faut faire un peu attention √† la gestion des connexions. Car nous pourrions nous retrouver √† ouvrir des centaines de connexions rapidement et d√©grader les performances de notre application. C‚Äôest le travail de la classe DBConnection. Comme c‚Äôest un singleton, il y aura une seule instance de cette classe dans toute notre application, et comme c‚Äôest elle qui se connecte √† la base, nous nous assurons de l‚Äôunicit√© de la connexion.\n\n\n\n\n\n\nTip\n\n\n\nCette classe est une solution purement technique, alors n‚Äôh√©sitez pas √† la r√©utiliser pour votre projet. Elle introduit un concept avanc√© de POO, √† savoir les m√©ta classes.\nUne m√©ta classe permet de modifier le comportement d‚Äôune classe √† un niveau pouss√© (par exemple modifier comment les objets sont construits par Python). √Ä moins que vous ayez une app√©tence toute particuli√®re pour l‚Äôinformatique, ne passez pas de temps sur ce sujet.\n\n\n\n\n3.3 DAO et CRUD\nSi vous faites attention, les m√©thodes de notre DAO ressemblent √† celles du CRUD. C‚Äôest normal car c‚Äôest dans ces m√©thodes que le code SQL va √™tre stock√©.\nLes m√©thodes de base sont g√©n√©ralement :\n\nfind_all() : qui va retourner toute la table.\nfind_by_id() : qui retourne un enregistrement √† partir de son id\ncreate() : qui cr√©e un nouvel enregistrement\ndelete() : qui supprime un enregistrement\nupdate() : qui met √† jour un enregistrement\n\nCes 5 m√©thodes suffisent pour communiquer avec votre base de donn√©es. Vous pouvez effectuer le reste des traitements dans vos classes Service (conseill√©). Cependant, rien ne vous emp√™che de cr√©er des m√©thodes plus complexes (ex : find_by_type_and_level_order_by_name_desc())\nVoici la fonctionnement g√©n√©ral d‚Äôune des m√©thodes de la DAO :\n\n\nune_classe_dao.py\n\nfrom dao.db_connection import DBConnection\n\nclass UneClasseDAO(metaclass=Singleton):\n\n    def une_methode_dao():\n\n        # Etape 1 : On r√©cup√®re la connexion en utilisant la classe DBConnection.\n        with DBConnection().connection as connection :\n        \n            # Etape 2 : √† partir de la connexion on cr√©e un curseur pour la requ√™te \n            with connection.cursor() as cursor : \n            \n                # Etape 3 : on ex√©cute notre requ√™te SQL\n                cursor.execute(requete_sql)\n\n                # Etape 4 : on stocke le r√©sultat de la requ√™te\n                res = cursor.fetchall()\n\n        if res:\n            # Etape 5 : on agence les r√©sultats selon la forme souhait√©e (objet, liste...)\n\n        return something\n\nL‚Äôobjet cursor contient un pointeur vers les r√©sultats de votre requ√™te. Ce r√©sultat n‚Äôest pas encore rapatri√© sur votre machine, mais est stock√© par la base de donn√©es. Vous avez 3 m√©thodes pour r√©cup√©rer le r√©sultat :\n\ncursor.fetchone() : retourne uniquement un enregistrement sous forme de dictionnaire\n\nSi vous appelez de nouveau fetchone() sur le m√™me curseur vous obtiendrez la ligne suivante\n\ncursor.fetchall() : retourne l‚Äôint√©gralit√© des r√©sultats sous forme d‚Äôune liste de dictionnaires\n\nLes dictionnaires sont les lignes de la table r√©cup√©r√©e.\nLes cl√©s du dictionnaire sont les colonnes r√©cup√©r√©es.\nCette m√©thode fonctionne tr√®s bien pour avoir tous les r√©sultats en une fois et qu‚Äôil y en a peu. Quand on a des millions d‚Äôenregistrements cela va poser probl√®me car :\n\nLe transfert de donn√©es sur internet va prendre du temps et bloquer notre application\nNotre application va devoir g√©rer une grande quantit√© de donn√©es, et elle en est peut-√™tre incapable\n\n\ncursor.fetchmany(size): retourne autant d‚Äôenregistrements que demand√© sous forme d‚Äôune liste de dictionnaires. Cela permet de contr√¥ler le volume de donn√©es que l‚Äôon traite. Si vous appelez de nouveau fetchmany(size) sur votre curseur, vous allez r√©cup√©rer les lignes suivantes (syst√®me de pagination)\n\nExemples de donn√©es retourn√©es (requ√™te du curseur : SELECT * FROM tp.attack;):\n\nfetchonefetchall\n\n\nUn dictionnaire\n{\"id_attack\": 2, \"id_attack_type\": 3, \"power\": 20, \"accuracy\": 100, \"element\": \"Grass\", \"attack_name\": \"Absorb\"}\n\n\nUne liste de dictionnaires\n[\n    {\"id_attack\": 2, \"id_attack_type\": 3, \"power\": 20, \"accuracy\": 100, \"element\": \"Grass\", \"attack_name\": \"Absorb\"},\n    {\"id_attack\": 3, \"id_attack_type\": 2, \"power\": 40, \"accuracy\": 100, \"element\": \"Rock\", \"attack_name\": \"Accelerock\"},\n    {\"id_attack\": 4, \"id_attack_type\": 3, \"power\": 40, \"accuracy\": 100, \"element\": \"Poison\", \"attack_name\": \"Acid\"},\n    ...\n]\n\n\n\nPour plus d‚Äôinformations : article de pynative\n\n\n\n\n\n\nObjectif\n\n\n\nComme pour les donn√©es des webservices, l‚Äôobjectif va √™tre de convertir ces donn√©es en objets m√©tiers."
  },
  {
    "objectID": "doc/tp/tp4.html#premi√®res-dao",
    "href": "doc/tp/tp4.html#premi√®res-dao",
    "title": "Data Access Objet (DAO)",
    "section": "4 Premi√®res DAO",
    "text": "4 Premi√®res DAO\n\n4.1 DAO avec des types d‚Äôattaques\n\nObservez le fonctionnement de la classe TypeAttackDAO\n\ncela va vous √™tre utile pour la suite\n\n\nDans la classe AttackDao, cr√©ez les m√©thodes suivantes :\n\nfind_attack_by_id(id:int) -&gt; Optional[AbsractAttack] : retourne l‚Äôattaque avec l‚Äôid en param√®tre ou retourne None si l‚Äôattaque n‚Äôest pas trouv√©e.\nfind_all_attacks() -&gt; List[AbsractAttack] : retourne la liste de toutes les attaques\n\nBonus : ajoutez √† cette m√©thode les param√®tres limit et offset\n\nupdate_attack(attack : AbstractAttack) -&gt; bool : met √† jour les donn√©es de l‚Äôattaque pass√©e en param√®tre et retourne si la modification s‚Äôest bien pass√©e\n\n\n\n\n\n\n\nQuelques conseils\n\n\n\n\nDans les 2 m√©thodes find, pour cr√©er nos objets m√©tier Attack\n\nnous avons besoin de connaitre le nom du type d‚Äôattaque\nor il n‚Äôy a pas cette colonne dans la table attaque\nmais peut-√™tre avez-vous d√©j√† une requ√™te qui fait le job ?\n\nUtilisez la classe AttackFactory pour instancier facilement des objets m√©tier Attack\nPensez √† faire des tests pour voir si votre code fonctionne\n\n\n\n\n\n4.2 Pok√©mon DAO\nCr√©ez la classe Pok√©monDAO avec les m√©thodes suivantes :\n\nfind_all_pokemon()-&gt;List[AbstractPokemon] : retourne tous les pok√©mons dans la base\nfind_pokemon_by_name(name:str)-&gt;AbstractPokemon : retourne un pok√©mon avec le nom donn√©\nCompl√©tez la m√©thode ci-dessus en incorporant la liste des attaques du Pokemon :\n\nFaites une requ√™te en joignant les tables attack et pokemon_attack en filtrant avec l‚Äôid du pok√©mon\nG√©n√©rez les attaques √† partir de l√†"
  },
  {
    "objectID": "doc/tp/tp4.html#dao-et-webservice",
    "href": "doc/tp/tp4.html#dao-et-webservice",
    "title": "Data Access Objet (DAO)",
    "section": "5 DAO et webservice",
    "text": "5 DAO et webservice\nVous allez maintenant rendre accessible les donn√©es de votre base √† d‚Äôautres utilisateurs en r√©alisant un webservice REST.\nAjoutez dans le fichier app.py les endpoints suivants :\n# D√©fintion du endpoint get /attack?limit=100\n@app.get(\"/attack/\")\nasync def get_all_attacks(limit:int):\n    # TODO: r√©cup√©rer les attaques en base en utilisant votre DAO\n    return attacks\n\n# D√©fintion du endpoint get /pokemon?limit=100\n@app.get(\"/pokemon/\")\nasync def get_all_pokemons(limit:int):\n    # TODO: r√©cup√©rer les pokemons en base en utilisant votre DAO\n    return pokemons\n\n# D√©fintion du endpoint get /pokemon`/{name}\n@app.get(\"/pokemon/{name}\")\nasync def get_pokemon_by_name(name:str):\n    # TODO: r√©cup√©rer le pokemon en base en utilisant votre DAO\n    return pokemon\n\nGET localhost:80/attack?limit=100 renverra une liste de 100 attaques par d√©faut. Il est possible de moduler cette valeur via le param√®tre de requ√™te limit\nGET localhost:80/pokemon?limit=100. Il renverra une liste de 100 Pokemons par d√©faut, mais peut √™tre modul√© avec le param√®tre de requ√™te limit.\nGET localhost:80/pokemon/{nom}. Il renverra un json repr√©sentant un Pokemon.\n\nPour retourner des objets, vous allez devoir d√©finir des classes h√©ritant de BaseModel. Vous trouverez toutes les infos dans la documentation de FastAPI."
  },
  {
    "objectID": "doc/tp/tp4.html#conclusion",
    "href": "doc/tp/tp4.html#conclusion",
    "title": "Data Access Objet (DAO)",
    "section": "Conclusion",
    "text": "Conclusion\nDans ce TP vous avez impl√©ment√© votre premi√®re DAO.\nC‚Äôest une classe technique qui sert √† communiquer avec votre syst√®me de persistance de donn√©es. L‚Äôavantage premier de faire une classe √† part est de d√©coupler au maximum la gestion du syst√®me de persistance et le code m√©tier de votre application.\nSi vous d√©cidez d‚Äôarr√™ter d‚Äôutiliser une base de donn√©es relationnelle et pr√©f√©rez d√©sormais une base de donn√©es NoSQL vous allez devoir changer uniquement les classes DAO tout en exposant toujours les m√™mes m√©thodes.\n\n\n\n\n\n\nNote\n\n\n\nSi vous souhaitez voir la version finale, positionnez-vous sur la branche tp5-correction et lancez le main."
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#objectifs",
    "href": "doc/projet/presentation-eleves-slides.html#objectifs",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Objectifs",
    "text": "Objectifs\n\nD√©velopper une application en Python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostgreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser (UML)\n\n\n\n√âl√©ments vus en cours et en TP\nPostgreSQL OK, SQLite NON"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#planning",
    "href": "doc/projet/presentation-eleves-slides.html#planning",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Planning",
    "text": "Planning\n\nPlanningDatesLivrables\n\n\n\n\n\n\n\n\ngantt\n    title Planning provisoire 2024\n    dateFormat  YYYY-MM-DD\n    axisFormat  %d %b\n    tickInterval 1week\n    \n    section Cours\n    CM                           :milestone, 2024-09-02,\n    CM                           :milestone, 2024-09-09, \n    Examen                       :milestone, 2024-10-07,\n    \n    section TP\n    TP1                          :milestone, 2024-09-06,\n    TP2                          :milestone, 2024-09-13,\n    TP3                          :milestone, 2024-09-20,\n    TP4                          :milestone, 2024-09-27,\n    \n    section Projet\n    Suivi 1                      :milestone, 2024-09-06,\n    Suivi 2                      :milestone, 2024-09-13,\n    Suivi 3                      :milestone, 2024-09-27,\n    Suivi 4                      :milestone, 2024-10-11,\n    3j immersion (Suivi 5 et 6)  :active,    2024-10-21, 3d\n    Suivi 7                      :milestone, 2024-11-15,\n    \n    section √âch√©ances\n    WEI                          :crit,      2024-09-20, 3d\n    Dossier Analyse              :milestone, 2024-10-05,\n    Toussaint                    :crit,      2024-10-26, 2024-11-03\n    Rapport final et Code        :milestone, 2024-11-23,\n    Soutenance                   :milestone, 2024-12-12,\n    \n    %%Stats univari√©es retrait√©s   :done,         2021-11-28, 3d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nTopic\n\n\n\n\nvendredi 6 septembre\nTP1 et Suivi 1\n\n\nvendredi 13 septembre\nTP2 et Suivi 2\n\n\nvendredi 20 septembre\nTP3\n\n\nvendredi 27 septembre\nTP4 et Suivi 3\n\n\nvendredi 11 octobre\nSuivi 4 (retour sur les dossiers d‚Äôanalyse)\n\n\nlun-mer 21-23 octobre\n3 jours d‚Äôimmersion (Suivi 5 et 6)\n\n\nvendredi 15 novembre\nSuivi 7\n\n\njeudi 12 d√©cembre\nSoutenance\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nTopic\n\n\n\n\nTOUS les Jeudis\nPoint hebdo\n\n\nSamedi 5 octobre 12h00\nDossier d‚ÄôAnalyse\n\n\nSamedi 23 novembre 20h00\nRapport final et Code\n\n\n\n\n\n\n\n\n3j d‚Äôimmersion\n\ncapital pour bien avancer le projet\nsi bien utilis√© -&gt; 90 % du travail fait\n\nPoint hebdo : j‚Äôy reviens\n\nüí° Prendre de l‚Äôavance en septembre\n‚ö†Ô∏è Absences en projet ou TP -&gt; malus"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#phases",
    "href": "doc/projet/presentation-eleves-slides.html#phases",
    "title": "Pr√©sentation du projet info 2A",
    "section": "2 phases",
    "text": "2 phases\n\nAnalyse / Conception g√©n√©rale (sept.)\n\n4 s√©ances de 3h de suivi\nmi-octobre : retours sur le dossier d‚Äôanalyse\n\nImpl√©mentation (oct. - nov.)\n\n3 s√©ances de 3h de suivi\n\n\n\n\nVous avez 1 mois √† 5. Un √©l√®ve de STD a 6h\n\nSi votre dossier d‚Äôanalyse est nickel mais vous n‚Äôavez pas encore dev\nüí° Conseil :\n\nl‚Äô√©l√®ve le plus √† l‚Äôaise fait un POC vers le 20 septembre\npuis pr√©sente l‚Äôappli v0 aux autres\n\nRelisez vos rapports !"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#travail-en-groupe",
    "href": "doc/projet/presentation-eleves-slides.html#travail-en-groupe",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Travail en groupe",
    "text": "Travail en groupe\n\n√âviter de cumuler les r√¥les de Chef de projet et Tech Lead\nEsprit d‚Äô√©quipe\nPr√©venir d√®s que possible si √ßa ne va pas\n\n\n\nAvoir un bon comportement\nCertaines √©quipes vont mieux fonctionner que d‚Äôautres\nDans la vie pro, on bosse pas toujours avec ses potes\nSi vous √™tes fort -&gt; ne pas tout faire\nPr√©venir tuteur puis Prof en cas de souci\n\nPas la peine de dire une fois que le projet est fini :\n\nc‚Äôest moi qui ait tout fait\nun autre membre n‚Äôa rien fait"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#suivi",
    "href": "doc/projet/presentation-eleves-slides.html#suivi",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Suivi",
    "text": "Suivi\n\nPoint hebdo\n√Ä remplir chaque semaine\n\nau plus tard le jeudi soir\n\n\n\n\n\n\n\n\nNote\n\n\nPlus de d√©tails dans la notice √©l√®ves.\n\n\n\n\n\nComme dans la vie pro\nObligatoire sinon malus\nMontrer Mod√®le\nras : si vous n‚Äôavez rien fait"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#environnement-de-travail",
    "href": "doc/projet/presentation-eleves-slides.html#environnement-de-travail",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Environnement de travail",
    "text": "Environnement de travail\n\n\n\n\n\n\nImportant\n\n\nVous avez tous les outils n√©cessaires pour coder sur la VM.\nSi vous n‚Äô√™tes pas √† tr√®s l‚Äôaise en info, il vous sera quasi impossible de coder hors VM.\nAucune aide ne vous sera apport√©e pour installer les outils n√©cessaires si vous √™tes hors VM.\n\n\n\n\nNous attendons du code de qualit√©\nDocumentation obligatoire pour chaque classe, chaque m√©thode\n\n\nRespectez les bonnes pratiques de dev Python :\n\nNoms des classes en CamelCase\nFichiers en snake_case\nnoms de variables et de m√©thodes parlants"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#testez-votre-code",
    "href": "doc/projet/presentation-eleves-slides.html#testez-votre-code",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Testez votre code",
    "text": "Testez votre code\n\nTests Unitaires obligatoires\nCodez par petits bouts\n\n\n\nMethodes qui ne fonctionnent pas car elles appellent des m√©thodes qui ne fonctionnent pas"
  },
  {
    "objectID": "doc/projet/presentation-eleves-slides.html#template",
    "href": "doc/projet/presentation-eleves-slides.html#template",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Template",
    "text": "Template\n\nExemple de projet simple\n\n\n\ndata, doc, src\nfichiers config : logs, cov, requirements, gitignore\nREADME : modop pour installer et lancer\n.vscode : setup vscode\nCI : expliquer principe"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html",
    "href": "doc/projet/presentation-eleves.html",
    "title": "Pr√©sentation du projet info 2A",
    "section": "",
    "text": "D√©velopper une application en Python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostgreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser (UML)\n\n\n\n√âl√©ments vus en cours et en TP\nPostgreSQL OK, SQLite NON"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#objectifs",
    "href": "doc/projet/presentation-eleves.html#objectifs",
    "title": "Pr√©sentation du projet info 2A",
    "section": "",
    "text": "D√©velopper une application en Python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostgreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser (UML)\n\n\n\n√âl√©ments vus en cours et en TP\nPostgreSQL OK, SQLite NON"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#planning",
    "href": "doc/projet/presentation-eleves.html#planning",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Planning",
    "text": "Planning\n\nPlanningDatesLivrables\n\n\n\n\n\n\n\n\ngantt\n    title Planning provisoire 2024\n    dateFormat  YYYY-MM-DD\n    axisFormat  %d %b\n    tickInterval 1week\n    \n    section Cours\n    CM                           :milestone, 2024-09-02,\n    CM                           :milestone, 2024-09-09, \n    Examen                       :milestone, 2024-10-07,\n    \n    section TP\n    TP1                          :milestone, 2024-09-06,\n    TP2                          :milestone, 2024-09-13,\n    TP3                          :milestone, 2024-09-20,\n    TP4                          :milestone, 2024-09-27,\n    \n    section Projet\n    Suivi 1                      :milestone, 2024-09-06,\n    Suivi 2                      :milestone, 2024-09-13,\n    Suivi 3                      :milestone, 2024-09-27,\n    Suivi 4                      :milestone, 2024-10-11,\n    3j immersion (Suivi 5 et 6)  :active,    2024-10-21, 3d\n    Suivi 7                      :milestone, 2024-11-15,\n    \n    section √âch√©ances\n    WEI                          :crit,      2024-09-20, 3d\n    Dossier Analyse              :milestone, 2024-10-05,\n    Toussaint                    :crit,      2024-10-26, 2024-11-03\n    Rapport final et Code        :milestone, 2024-11-23,\n    Soutenance                   :milestone, 2024-12-12,\n    \n    %%Stats univari√©es retrait√©s   :done,         2021-11-28, 3d\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nTopic\n\n\n\n\nvendredi 6 septembre\nTP1 et Suivi 1\n\n\nvendredi 13 septembre\nTP2 et Suivi 2\n\n\nvendredi 20 septembre\nTP3\n\n\nvendredi 27 septembre\nTP4 et Suivi 3\n\n\nvendredi 11 octobre\nSuivi 4 (retour sur les dossiers d‚Äôanalyse)\n\n\nlun-mer 21-23 octobre\n3 jours d‚Äôimmersion (Suivi 5 et 6)\n\n\nvendredi 15 novembre\nSuivi 7\n\n\njeudi 12 d√©cembre\nSoutenance\n\n\n\n\n\n\n\n\n\n\n\n\nDate\nTopic\n\n\n\n\nTOUS les Jeudis\nPoint hebdo\n\n\nSamedi 5 octobre 12h00\nDossier d‚ÄôAnalyse\n\n\nSamedi 23 novembre 20h00\nRapport final et Code\n\n\n\n\n\n\n\n\n3j d‚Äôimmersion\n\ncapital pour bien avancer le projet\nsi bien utilis√© -&gt; 90 % du travail fait\n\nPoint hebdo : j‚Äôy reviens\n\nüí° Prendre de l‚Äôavance en septembre\n‚ö†Ô∏è Absences en projet ou TP -&gt; malus"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#phases",
    "href": "doc/projet/presentation-eleves.html#phases",
    "title": "Pr√©sentation du projet info 2A",
    "section": "2 phases",
    "text": "2 phases\n\nAnalyse / Conception g√©n√©rale (sept.)\n\n4 s√©ances de 3h de suivi\nmi-octobre : retours sur le dossier d‚Äôanalyse\n\nImpl√©mentation (oct. - nov.)\n\n3 s√©ances de 3h de suivi\n\n\n\n\nVous avez 1 mois √† 5. Un √©l√®ve de STD a 6h\n\nSi votre dossier d‚Äôanalyse est nickel mais vous n‚Äôavez pas encore dev\nüí° Conseil :\n\nl‚Äô√©l√®ve le plus √† l‚Äôaise fait un POC vers le 20 septembre\npuis pr√©sente l‚Äôappli v0 aux autres\n\nRelisez vos rapports !"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#travail-en-groupe",
    "href": "doc/projet/presentation-eleves.html#travail-en-groupe",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Travail en groupe",
    "text": "Travail en groupe\n\n√âviter de cumuler les r√¥les de Chef de projet et Tech Lead\nEsprit d‚Äô√©quipe\nPr√©venir d√®s que possible si √ßa ne va pas\n\n\n\nAvoir un bon comportement\nCertaines √©quipes vont mieux fonctionner que d‚Äôautres\nDans la vie pro, on bosse pas toujours avec ses potes\nSi vous √™tes fort -&gt; ne pas tout faire\nPr√©venir tuteur puis Prof en cas de souci\n\nPas la peine de dire une fois que le projet est fini :\n\nc‚Äôest moi qui ait tout fait\nun autre membre n‚Äôa rien fait"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#suivi",
    "href": "doc/projet/presentation-eleves.html#suivi",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Suivi",
    "text": "Suivi\n\nPoint hebdo\n√Ä remplir chaque semaine\n\nau plus tard le jeudi soir\n\n\n\n\n\n\n\n\nNote\n\n\n\nPlus de d√©tails dans la notice √©l√®ves.\n\n\n\n\nComme dans la vie pro\nObligatoire sinon malus\nMontrer Mod√®le\nras : si vous n‚Äôavez rien fait"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#environnement-de-travail",
    "href": "doc/projet/presentation-eleves.html#environnement-de-travail",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Environnement de travail",
    "text": "Environnement de travail\n\n\n\n\n\n\nImportant\n\n\n\nVous avez tous les outils n√©cessaires pour coder sur la VM.\nSi vous n‚Äô√™tes pas √† tr√®s l‚Äôaise en info, il vous sera quasi impossible de coder hors VM.\nAucune aide ne vous sera apport√©e pour installer les outils n√©cessaires si vous √™tes hors VM.\n\n\n\nNous attendons du code de qualit√©\nDocumentation obligatoire pour chaque classe, chaque m√©thode\n\n\nRespectez les bonnes pratiques de dev Python :\n\nNoms des classes en CamelCase\nFichiers en snake_case\nnoms de variables et de m√©thodes parlants"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#testez-votre-code",
    "href": "doc/projet/presentation-eleves.html#testez-votre-code",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Testez votre code",
    "text": "Testez votre code\n\nTests Unitaires obligatoires\nCodez par petits bouts\n\n\n\nMethodes qui ne fonctionnent pas car elles appellent des m√©thodes qui ne fonctionnent pas"
  },
  {
    "objectID": "doc/projet/presentation-eleves.html#template",
    "href": "doc/projet/presentation-eleves.html#template",
    "title": "Pr√©sentation du projet info 2A",
    "section": "Template",
    "text": "Template\n\nExemple de projet simple\n\n\n\ndata, doc, src\nfichiers config : logs, cov, requirements, gitignore\nREADME : modop pour installer et lancer\n.vscode : setup vscode\nCI : expliquer principe"
  },
  {
    "objectID": "doc/projet/anciens-sujets.html",
    "href": "doc/projet/anciens-sujets.html",
    "title": "Anciens sujets",
    "section": "",
    "text": "Tuteur : Cyriel Mallart\n\n\nTu veux parler musique avec des gens qui comprennent tes go√ªts ? Avec (NomDeVotreWebService), c‚Äôest facile ! Enregistre-toi, dis-nous ce que tu √©coutes, et on t‚Äôenvoie des gens qui vibrent au m√™me rythme que toi !\nVous allez cr√©er dans ce projet une API qui met en relation des gens, bas√©e sur leurs go√ªts musicaux. Un.e utilisateur.ice s‚Äôinscrira, s√©lectionnera et enregistrera ses morceaux, artistes et genres pr√©f√©r√©s. L‚ÄôAPI Deezer vous donnera acc√®s √† toutes les caract√©ristiques de ces morceaux. A partir de cela, vous utiliserez une touche d‚ÄôIA pour trouver celui ou celle qui a le profil le plus similaire, et lui enverrez une petite notification pour mettre tout le monde en contact. Si √ßa ne matche pas, ou si l‚Äôutilisateur.ice veut d√©couvrir de nouvelles personnes, on trouve le profil similaire le plus proche en excluant les gens d√©j√† en contact ou refus√©s.\n\n\n\n\ngestion de plusieurs utilisateurs\nenregistrement des morceaux, artistes, genres, etc. utiles en base de donn√©es\nappels √† l‚ÄôAPI Deezer pour obtenir les informations sur les morceaux\nobtention, stockage et mise √† jour des profils similaires\ngestion des notifications de mise en contact : accept√©, refus√©, notification √† tous les utilisateur.ices impliqu√©e.e.s\n\n\n\n\n\nauthentification par mot de passe\ngestion des ‚Äúcontacts‚Äù d‚Äôun utilisateur : d√©letion, signalement, cr√©ation de groupes\nrecommendation de nouveaux morceaux bas√©s sur ceux des contacts\nplaylists cr√©es par fusion des morceaux des utilisateurs, export\ns√©lection ergonomique des morceaux (suggestions, autocompl√©tion, ‚Ä¶)\nalgorithme de recommendation plus √©labor√©\n‚Ä¶\ntout autre id√©e qui vous semble logique, int√©ressante, sous r√©serve qu‚Äôelle soit faisable techniquement dans les temps impartis\n\n\n\n\n\nBackend : FastAPI\nFront end : Jinja2 (templates HTML dans FastAPI). D‚Äôautres choix sont possibles (React.js, Vue.js, ‚Ä¶) si vous les ma√Ætrisez, mais attention, votre tuteur ne pourra vous suivre que sur React.js, et la courbe d‚Äôapprentissage est raide.\nBDD : MongoDB (NoSQL) , Neo4j (NoSQL, graphe) ou Postgres (SQL, disponible √† l‚ÄôENSAI)\nAPI Deezer : https://developers.deezer.com/api\n\n\n\n\n\nCr√©er une appli de messagerie : le but de ce projet est uniquement une mise en contact o√π l‚Äôon partagera une adresse mail par exemple\nSe casser la t√™te sur un algorithme super-classe : les performances de l‚Äôalgorithme de recommendation ne sont pas le point important ici, ne passez pas tout votre projet dessus. Si vous avez envie d‚Äôessayer une id√©e d‚Äôalgorithme, allez-y, m√™me si elle ne fonctionne pas bien au final. Sinon, votre tuteur pourra vous aider sur un algorithme de base\nUne interface r√©ctive super-√©volu√©e avec des graphiques et des previews de morceaux : on attend une interface basique et simple, c‚Äôest-√†-dire, des pages HTML statique √©crit en noir sur fond blanc avec un ou deux boutons.\n\n\n\n\n\nTuteur : Colin Leverger Objectif\nVous √™tes un groupe d‚Äô√©tudiants de l‚ÄôENSAI en deuxi√®me ann√©e, et souhaitez d√©velopper une application en ligne de commande pour faciliter vos futures recherches de stage. Votre startup s‚Äôappelle ‚Ä¶‚Ä¶‚Ä¶ et votre application ‚Ä¶‚Ä¶‚Ä¶. .\nVotre application permettra √† un utilisateur de rechercher des stages de son choix sur un ou plusieurs sites de recherche de stage (Hellowork, welcometothejungle, ‚Ä¶). Les stages peuvent √™tre publi√©s dans diff√©rentes sp√©cialit√©s (informatique, data analyse, machine learning, ‚Ä¶). S‚Äôil est authentifi√©, l‚Äôutilisateur pourra sauvegarder dans l‚Äôapplication les stages qui l‚Äôint√©ressent dans sa ¬´‚Äâliste d‚Äôenvies‚Äâ¬ª, et pourquoi pas r√©pondre aux offres plus facilement (automatiquement, ou au minimum r√©cup√©rer les contacts vers les employeurs). La navigation et les recherches de tout utilisateur seront historis√©es.\nDeux types d‚Äôutilisateurs authentifi√©s pourront cohabiter : utilisateur ¬´‚Äâ√©l√®ve‚Äâ¬ª et utilisateur ¬´‚Äâprofesseur‚Äâ¬ª. Un ¬´‚Äâadministrateur‚Äâ¬ª de l‚Äôapp pourra √©galement g√©rer l‚Äôapplication et les utilisateurs. Un utilisateur non authentifi√© sera par d√©faut dans la cat√©gorie ¬´‚Äâ√©l√®ve‚Äâ¬ª. On peut imaginer que les besoins des professeurs et des √©l√®ves seront diff√©rents‚Ä¶\nL‚Äôapplication permettra aux utilisateurs authentifi√©s de g√©rer leurs comptes, pr√©f√©rences, mots de passe, listes, et √† tous les utilisateurs d‚Äôexporter/importer leurs recherches courantes (dans le format texte que vous jugerez bon).\nLes utilisateurs pourront √©galement g√©o localiser les stages par rapport √† leur position actuelle (temps de trajet,‚Ä¶).\nFonctionnalit√©s requises (num√©rot√©es, mais non ordonn√©es)\n\nF1 : la recherche de r√©sultats sur un site que vous choisirez (Hellowork, welcometothejungle, ‚Ä¶)\nF2 : authentification et gestion du profil utilisateur/profil administrateur\nF3 : gestion de l‚Äôimport/export de donn√©es au format choisi\nF4 : gestion de l‚Äôhistorique des recherches\nF5 : recherche par cat√©gorie/filtre de recherches\n\nFonctionnalit√©s optionnelles\n\nFO1 : lancer des recherches sur plusieurs sites en parall√®le\nFO2 : g√©o localisation de l‚Äôutilisateur et des annonces/distance entre l‚Äôutilisateur et l‚Äôannonce\nFO3 : alertes automatiques si de nouvelles annonces de stage remplissant les crit√®res sont publi√©es\nFO4 : ‚Ä¶ √† vous de jouer‚Äâ!\nNOTE : ce sujet regorge de ¬´‚Äâ‚Ä¶‚Äâ¬ª. En effet, une participation active est vivement recommand√©e et vos id√©es, pour rendre votre projet unique, sont les bienvenues‚Äâ!\n\nFonctionnalit√©s non not√©es (et d√©conseill√©es)\n\nles statistiques/mod√®les complexes que vous pourrez imaginer (une moyenne, OK, mais un mod√®le expo logarithmique quantique d‚Äôordre 10, non)\nl‚Äôinterface graphique type GUI (AUCUN point bonus sur une tr√®s jolie interface‚Äâ!)\n\n\n\n\nTuteur : Maxence Lagalle\n\n\nGreenStream est une API REST qui permet de r√©duire l‚Äôimpact carbone d‚Äôun service de VOD (Netflix, Amazon Prime, Disney+‚Ä¶). Pour le consommateur, elle calcule l‚Äôimpact carbone d‚Äôune vid√©o √† partir de sa dur√©e et de sa r√©solution, en utilisant le mod√®le ‚Äú1byte‚Äù de The Shift Project ou d‚Äôautres mod√®les d‚Äôestimation. Pour le fournisseur de VOD, elle aide √† choisir des serveurs dans la meilleure zone g√©ographique des fournisseurs Cloud en fonction de l‚Äôimpact carbone de la production d‚Äô√©lectricit√©. Ces donn√©es sur l‚Äôimpact carbone sont fournies par l‚ÄôAPI ElectricityMaps. GreenStream est un projet innovant et √©cologique, qui accompagne dans la transition vers des services de VOD plus vert et plus responsables.\nElectricityMaps est partenaire de GreenStream et offre un acc√®s √† la version payante de son API pour toute la dur√©e du projet.\n\n\n\n\nEstimation de l‚Äôempreinte carbone d‚Äôune vid√©o selon le mod√®le ‚Äú1byte‚Äù de The Shift Project\n\nPrise en compte de la localisation g√©ographique du fournisseur de VOD et de l‚Äôutilisateur\nPrise en compte de la dur√©e et de la qualit√© de la vid√©o, du type de connexion et du mat√©riel utilis√© pour regarder la vid√©o\nUtilisation des donn√©es d‚Äôimpact carbone en temps r√©el fournies par l‚ÄôAPI ElectricityMaps\n\nRecommandation du meilleur service Cloud pour diffuser une vid√©o √† un utilisateur\n\nChoix du service Cloud √† l‚Äôimpact carbone le plus faible en fonction de la zone g√©ographique de l‚Äôutilisateur\nD√©termination des services Cloud √©ligibles en fonction de la localisation de l‚Äôutilisateur (ceux dans le m√™me pays ou un pays limitrophe)\nUtilisation des donn√©es de pr√©vision de l‚Äôimpact carbone pour la dur√©e de la vid√©o fournies par l‚ÄôAPI ElectricityMaps\n\nGestion de l‚Äôoffre des fournisseurs Cloud\n\nImpl√©mentation de la liste des zones g√©ographiques propos√©es par au moins deux fournisseurs Cloud (AWS, GCP, Azure‚Ä¶)\nUtilisation d‚Äôune base de donn√©es SQL pour stocker les informations sur les services Cloud disponibles\n\nInformation sur l‚Äô√©tat du service GreenStream\n\nFourniture d‚Äôun service permettant de s‚Äôassurer que GreenStream fonctionne correctement et que son lien avec ElectricityMaps est actif\n\n\n\n\n\n\nSimulation de l‚Äôimpact carbone d‚Äôun changement de comportement\n\nCr√©ation d‚Äôun service qui permet √† l‚Äôutilisateur de simuler l‚Äôimpact carbone qu‚Äôil aurait s‚Äôil changeait certains param√®tres de sa consommation de vid√©os, tels que la qualit√©, la dur√©e, le type de connexion ou le mat√©riel utilis√©\nUtilisation du mod√®le ‚Äú1byte‚Äù ou d‚Äôautres mod√®les d‚Äôestimation pour calculer l‚Äôempreinte carbone selon les diff√©rents sc√©narios\n\nUtilisation de mod√®les d‚Äôestimation de l‚Äôempreinte carbone plus sophistiqu√©s\n\nPrise en compte d‚Äôune consommation √©lectrique variable selon les fournisseurs Cloud\nUtilisation d‚Äôautres mod√®les d‚Äôestimation publi√©s, tels que le mod√®le ‚ÄúCarbon Footprint of Video Streaming‚Äù de Carbon Trust ou d‚Äôautres mod√®les √† rechercher\n\nInt√©gration de crit√®res avanc√©s dans la recommandation du service Cloud\n\nPrise en compte du co√ªt financier des services Cloud et d‚Äôun arbitrage entre le co√ªt et l‚Äôempreinte carbone\nUtilisation d‚Äôun graphe de connexions entre les zones pour d√©terminer la liste des services Cloud √©ligibles pour diffuser une vid√©o √† un utilisateur\n\nSuivi de la consommation totale du service et de son empreinte carbone\n\nEnregistrement SQL de la consommation de vid√©os : dur√©e, zone g√©ographique de l‚Äôutilisateur, service Cloud associ√©, empreinte carbone\nAcc√®s aux donn√©es brutes ou √† une synth√®se statistique via l‚ÄôAPI\n\nFonctionnement en mode d√©grad√©\n\nUtilisation de donn√©es historiques d‚Äôintensit√© carbone de la production d‚Äô√©lectricit√© en cas de d√©faillance de l‚ÄôAPI ElectricityMaps\n\n\nL‚Äôinitiative est fortement encourag√©e dans ce projet, et d‚Äôautres id√©es de fonctionnalit√©s avanc√©es ou d‚Äôam√©lioration des fonctionnalit√©s de base peuvent √™tre propos√©es par les √©l√®ves.\n\n\n\n\nTuteur : Thierry Math√©\n\n\nLe minist√®re des Finances met √† disposition un fichier des prix des carburants dans les stations fran√ßaises. Ce fichier au format XML contient entre autre pour chaque station, ses coordonn√©es, son adresse, ses heures d‚Äôouvertures, le prix des carburants disponibles (mais l‚Äôenseigne de la station n‚Äôy figure pas). Le but du projet de cr√©er une API (application programming interface) qui exploite les donn√©es contenues dans ce fichier. Cette API devra permettre de¬†:\n\nConsulter la liste des stations se trouvant √† proximit√© d‚Äôun point donn√© il sera aussi possible de pr√©ciser le carburant.\nCr√©er et mettre √† jour des listes de stations qu‚Äôil sera possible de consulter par exemple pour voir les prix sur les stations se trouvant sur un trajet r√©gulier.\n\nA chaque requ√™te, l‚ÄôAPI doit s‚Äôassurer qu‚Äôelle utilise bien les derni√®res donn√©es disponibles et au besoin t√©l√©charger les nouvelles donn√©es disponibles sur le site (mises √† jour toutes les 10 minutes)¬†: https://donnees.roulez-eco.fr/opendata/instantane\n\n\n\n\n\nLes param√®tres donn√©s √† cette requ√™te sont les coordonn√©es (longitude et latitude) d‚Äôun point, une distance en km et un type de carburant. L‚ÄôAPI va alors extraire l‚Äôensemble des stations se trouvant dans la zone ainsi d√©finie et disponsant du carburant indiqu√©.\nLa r√©ponse sera donn√©es au format JSON et contiendra:\n\nles parm√®tres de la requ√™te\nla date et l‚Äôheure d‚Äôex√©cution\nle nombre de stations trouv√©es\nla liste des stations : pour chaque station on aura:\n\nl‚Äôid, les coordonn√©es et l‚Äôadresse de la station\nle prix du carburant\n\n\n\n\n\nLa gestion des listes de stations doit permettre de :\n\nCr√©er une liste: le param√®tre en entr√©e est un nom donn√© par l‚Äôutilisateur. La requ√™te revoie un identifiant qui devra √™tre pass√© comme param√®tre pour toutes les autres actions,\nConsulter la liste des listes cr√©es: aucun param√®tre, la requ√™te renvoie les couple identifiant-nom des listes d√©fines,\nAjouter une une plusieurs stations √† un liste: les param√®tres en entr√©e sont l‚Äôidentifiant de la liste et le ou les identifiants des stations √† ajouter,\nSupprimer une liste: le param√®tre √† donner est l‚Äôidentifiant de la liste,\nConsulter la liste: le param√®tre √† donner est l‚Äôidentifiant de la liste. La requ√™te revoie les informations au format JSON qui contiennent:\n\nl‚Äôidentifiant et le nom de la requ√™te\nla date et l‚Äôheure d‚Äôex√©cution\nle nombre de stations contenues dans la liste\nla liste des stations. Pour chaque station on aura:\n\nl‚Äôid, les coordonn√©es et l‚Äôadresse de la station\nle prix du carburant\n\n\n\n\n\n\n\nVoici quelques id√©es de fonctions avanc√©es pour les groupes qui auraient effectu√© l‚Äôensemble des fonction de bases. Toutes autres id√©es pourra bien s√ªr √™tre propos√©es en cours de projet.\n\n\n\nPossibilit√© de passer comme parm√®tre une adresse au lieu de coordonn√©es\nPossibilit√© de pr√©ciser l‚Äôheure de passage et de ne conserver que les stations ouvertes √† cette heure.\n\n\n\n\n\nPossilit√© de retirer une ou plusieur stations d‚Äôune liste\nImposer une identification pour consulter les listes. Chaque utilisateurs n‚Äôaurait alors acc√©s qu‚Äô√† ses liste.\n\n\n\n\n\n\nTuteur : Alo√Øs DE OLIVEIRA\n\n\nLeague Of Legends (connu sous le sigle LoL) est un jeu video, plus pr√©cis√©ment un Multiplayer Online Battle Arena (MOBA), d√©velopp√© par Riot. LoL comptait plus de 100M de joueurs actifs en 2022 et le chiffre n‚Äôest pas vou√© √† diminuer dans les prochaines ann√©es. Cet engouement force Riot √† se renouveler en cr√©ant de nouveaux champions, de nouveaux items, des ajustements sur l‚Äô√©quilibrage du jeu (appel√©s patch). Les joueurs appr√©cient donc fortement les outils leur permettant d‚Äôavoir des analyses simples mais rapides afin de les accompagner et aider dans leurs choix.\nCe sujet ne n√©cessite pas de conna√Ætre le jeu ou d‚Äôy avoir d√©j√† jou√©. Au contraire, il vous arrivera souvent de devoir dans un premier temps comprendre un nouveau contexte m√©tier et vos donn√©es en entr√©e.\n\n\n\n\n\nVous √™tes mobilis√©s afin de mettre en place une solution capable de fournir aux joueurs les premi√®res informations essentielles. Ces analyses seront simples mais n√©cessiteront d‚Äôanalyser tout l‚Äôhistorique des parties que vous aurez √† votre disposition, et donc que vous stockerez. Votre solution a pour but d‚Äô√™tre pens√©e dans une logique d‚Äôam√©lioration continue. Ainsi un code document√© utilisant les principes de la Programmation Orient√©e Objet (POO) est attendu.\n\n\n\nLoL met √† disposition une API afin de permettre aux personnes qui le souhaitent de pouvoir utiliser leurs donn√©es. Une explication du fonctionnement de l‚ÄôAPI de LoL et de l‚Äôobtention des donn√©es sera effectu√©e.\n\n\n\n\nLors de ce projet, vous aurez des fonctionnalit√©s obligatoires et avanc√©es. Il est n√©cessaire de se focaliser sur ces premi√®res et d‚Äôentreprendre les secondes que lorsque vous avez une base solide pour r√©pondre √† l‚Äôensemble des fonctionnalit√©s obligatoires.\n\n\n\nNiveau base de donn√©es\n\n\n\nCr√©ation d‚Äôune base de donn√©es de votre choix (SQL/NoSQL) qui vous servira √† stocker l‚Äôhistorique des parties. Le mod√®le de donn√©es est important, il doit √™tre adapt√© afin de faciliter toutes modifications.\nCr√©ation d‚Äôun pipeline de donn√©es. L‚Äôensemble des √©tapes de la collecte au chargement, en passant par la transformation doivent √™tre le plus r√©utilisable possible.\nL‚Äôensemble des t√¢ches doit √™tre effectu√© en Python (de la cr√©ation, √† l‚Äôinsertion et aux √©ventuelles modifications).\n\nNiveau API\nPour la r√©alisation de ce projet, vous devrez r√©aliser une API (√† l‚Äôaide FastAPI ou Flask) qui vous permettra de renvoyer les diff√©rents r√©sultats souhait√©s. Ces r√©sultats seront √† retourner sous format json. Il existera diff√©rentes classes, d√©crites ci-dessous, avec chacune ses m√©thodes. Toutes les m√©thodes pr√©sentes dans les descriptions des classes sont √† titre indicatif. N‚Äôh√©sitez pas √† √™tre force de proposition.\n\n\n\n\nCela ne n√©cessitera aucune connexion.\nCette classe devra comporter certaines m√©thodes permettant de fournir des statistiques globales sur le jeu, telles que :\n\nAfficher les statistiques d‚Äôun champion : le nombre de games jou√©es, le winrate, le gold lead √† Xmin, etc.\nTrier les champions (globalement ou par lane) selon le crit√®re au choix parmi : nombre de games jou√©es, le winrate, etc.\n\n\n\n\n\n\nCela n√©cessitera de se connecter √† un compte user.\nCette classe h√©ritera de l‚Äôensemble des m√©thodes propres √† la classe invit√©.\nCette classe devra comporter certaines m√©thodes permettant de fournir des statistiques li√©es au compte en question, telles que :\n\nAfficher les statistiques globales/par lane/par champion du compte : le nombre de games jou√©es, le winrate, le kda, etc.\n\n\n\n\n\n\nCela n√©cessitera de se connecter √† un compte admin. 1 seul sera n√©cessaire.\nCette classe h√©ritera de l‚Äôensemble des m√©thodes pr√©c√©dentes.\nCette classe aura pour but de permettre √† l‚Äôadmin de pouvoir g√©rer les comptes et les donn√©es.\n\n\n\n\n\nLes fonctionnalit√©s avanc√©es sont tri√©es selon le niveau de difficult√© , cependant vous √™tes totalement libres sur les fonctionnalit√©s avanc√©es que vous souhaitez r√©alis√©es.\n\n\nJusqu‚Äôici vous utilisez les donn√©es mises √† disposition sans enrichissement. Cette fonctionnalit√© aura pour but de permettre √† l‚Äôadmin de pouvoir ajouter des nouvelles parties r√©centes.\nLes diff√©rents points attendus sont :\n\nGestion de la cl√© (permettant l‚Äôacc√®s √† l‚ÄôAPI de Riot) : au choix entre en brute en param√®tre d‚Äôentr√©e ou permettre d‚Äôaller la r√©cup√©rer directement sur le site depuis l‚ÄôAPI.\nR√©cup√©ration des donn√©es depuis l‚ÄôAPI de Riot selon certains crit√®res de s√©lection.\nAjout des donn√©es dans vos bases de donn√©es.\nAjout de la fonctionnalit√© au sein de votre API.\n\nLes crit√®res de s√©lection seront libres et donc propos√©s par votre groupe, en fonction de ce que l‚ÄôAPI vous permettra de faire.\n\n\n\nLe workflow Gitflow vous permet de faciliter la gestion des branches et la s√©paration des diff√©rentes t√¢ches.\nUtilisez le framework Gitflow pour la gestion de votre projet.\n\n\n\nConteneuriser votre application aura pour but de faciliter son d√©ploiement et son partage. En effet, cela permettra de r√©unir le code et ses composants (frameworks, biblioth√®ques, etc) dans un conteneur. Il sera alors possible d‚Äôex√©cuter le conteneur sans se soucier des diff√©rentes d√©pendances (l‚Äôinstallation des biblioth√®ques avec la bonne version par exemple).\nUtilisez l‚Äôoutil Docker pour conteneuriser votre application.\n\n\n\nPour le moment, vous ne faites remonter que des statistiques descriptives. Ici il s‚Äôagit de mettre √† profit l‚Äôensemble des donn√©es disponibles pour permettre √† l‚Äôutilisateur de pr√©dire l‚Äô√©quipe gagnante en fonction des 5 champions de chaque √©quipe. L‚Äôenjeu de cette fonctionnalit√© n‚Äôest pas de vous faire trouver le meilleur mod√®le de pr√©diction mais d‚Äôajouter une fonctionnalit√© √† votre API bas√© sur ce mod√®le. Vous ne serez donc aucunement not√© sur la qualit√© des pr√©dictions.\nLes diff√©rents points attendus sont :\n\nChoix d‚Äôun mod√®le de pr√©diction : vous ne serez certes pas not√© sur la qualit√© des pr√©dictions mais une courte r√©flexion sur le choix du mod√®le est attendue.\nEntrainement dudit mod√®le : vous √™tes libres sur le choix des librairies.\nS√©rialisation du mod√®le : vous devez sauvegarder votre mod√®le.\nAjout de la fonctionnalit√© au sein de votre API.\n\n\n\n\n\n\nTuteur : Sophie HERBERT, ENSAI 2021\n\n\nRecommander des produits meilleurs pour la sant√© selon plusieurs crit√®res !\nVous allez explorer la c√©l√®bre API Open Food Facts qui regroupe des produits alimentaires divis√©s en plusieurs cat√©gories (Viandes, Snacks, Aliments d‚Äôorigine v√©g√©tale etc.) et pour lesquels nous avons un grand nombre de variables renseign√©es par la communaut√© : nutriscore, nova score, ecoscore, taux de prot√©ine, taux de sucre, √©nergie en kcal‚Ä¶ L‚Äôobjectif de l‚Äôapplication est d‚Äôutiliser un √©chantillon de ces donn√©es en vous concentrant sur quelques produits de quelques cat√©gories que vous aurez choisis, de les afficher tel un catalogue et de pouvoir les trier selon le crit√®re s√©lectionn√© : le moins de sucre possible, le meilleur eco-score, la plus faible valeur √©nerg√©tique‚Ä¶ En allant sur une fiche ¬´ Produit ¬ª, vous afficherez le meilleur produit de la m√™me cat√©gorie selon ce crit√®re. Un syst√®me d‚Äôidentification devra √™tre mis en place. Si l‚Äôutilisateur est identifi√©, pourquoi pas sauvegarder ses articles dans un panier virtuel ?\n\n\n\nLes fonctionnalit√©s requises :\n\nF1 : affichage simple en console d‚Äôun catalogue de produits alimentaires par cat√©gorie de produit\nF2 : ordonner les produits selon un crit√®re nutritionnel\nF3 : s√©lection d‚Äôune fiche ¬´ Produit ¬ª recommandant un autre produit de la m√™me cat√©gorie avec un crit√®re meilleur que le produit consult√© (si meilleur il y a)\nF4 : syst√®me d‚Äôauthentification et de gestion du profil (changement de mot de passe‚Ä¶)\n\n\n\n\n\nF5 : sauvegarde de produits dans un panier\n‚Ä¶\n\nDes fonctionnalit√©s optionnelles pourront √™tre d√©velopp√©es √† votre guise et selon votre inspiration sur le sujet ! Les donn√©es Open Food Facts √©tant tr√®s riches, d‚Äôautres axes d‚Äôanalyses peuvent √™tre creus√©s‚Ä¶ Note : l‚Äôinterface GUI, la mise en place de mod√®les statistiques, la gestion des valeurs manquantes ne seront pas inclues dans la notation.\n\n\n\n\n\n\n\n\n\nCe projet a pour objectif de cr√©er une application qui facilite la recherche d‚Äôemploi dans le secteur de la technologie en utilisant l‚ÄôAPI REST gratuite de Adzuna , qui fournit des informations sur les offres d‚Äôemploi dans divers secteurs √† travers le monde. L‚Äôapplication permettra aux utilisateurs de rechercher des emplois, de filtrer les r√©sultats, de suivre leur progression dans leurs candidatures et de recevoir des alertes pour les nouvelles offres correspondant √† leurs comp√©tences.\n\n\n\n\nInt√©grer les donn√©es de l‚ÄôAPI Adzuna dans une application conviviale.\nPermettre aux utilisateurs de rechercher des offres d‚Äôemploi par mots-cl√©s, localisation et cat√©gories.\nFournir des fonctionnalit√©s de suivi des candidatures, y compris la gestion de CV et de lettres de motivation.\nEnvoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs crit√®res.\nMettre en place un syst√®me de profil pour les chercheurs d‚Äôemploi.\n\n\n\n\nLes fonctionnalit√©s requises :\n\nF1 : Int√©grer les donn√©es de l‚ÄôAPI Adzuna pour afficher des offres d‚Äôemploi dans divers secteurs.\nF2 : Permettre aux utilisateurs de rechercher des emplois en utilisant divers crit√®res.\nF3 : Permettre aux utilisateurs de cr√©er des profils de chercheurs d‚Äôemploi.\n\n\n\n\n\nF4 : Fournir des fonctionnalit√©s de suivi des candidatures et de gestion de documents(CVs, lettres de motivation‚Ä¶).\nF5 : Envoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs comp√©tences.\nF6:‚Ä¶\n\n‚ùó Vous avez la libert√© de d√©velopper des fonctionnalit√©s optionnelles selon votre inspiration. Aucune interface graphique n‚Äôest demand√©e dans ce sujet, toute interaction avec l‚Äôapplication devra se faire via l‚Äôinvit√© commande ( terminal / cmd ). Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.\n\n\n\n\n\n\n\n\n\nCe projet vous propose d‚Äôexplorer les donn√©es mises √† disposition par OpenData Paris. En particulier, vous allez jouer avec les donn√©es pr√©sentant la disponibilit√© des Velib‚Äô en temps r√©el. La solution proposera des services pour permettre aux utilisateurs de trouver plus facilement un v√©lo, ou pour aider la ville de Paris √† mieux g√©rer son parc de v√©los. Pour cela, vous aurez besoin de capturer et de stocker les donn√©es disponibles sur l‚ÄôAPI d‚ÄôOpenData Paris (et leur historique!) dans une base de donn√©es, puis de cr√©er √† votre tour une API pour y mettre √† disposition vos services.\n\n\n\n\nF1 : obtenir le nom de la station la plus proche ayant au moins un v√©lo disponible √† partir de coordonn√©es g√©ographique. Vous pouvez utiliser l‚ÄôAPI d‚ÄôEtalab pour obtenir des coordonn√©es g√©ographiques √† partir de d‚Äôune adresse.\nF2 : obtenir le nom de la station la moins fr√©quent√©e sur une p√©riode de temps donn√©es.\nF3 : obtenir le num√©ro de l‚Äôarrondissement le plus fr√©quent√© sur une p√©riode de temps donn√©es.\n\n\n\n\n\nF01 - Recherche de v√©lo en temps r√©el : Un utilisateur utilise la F1 pour trouver un v√©lo proche de lui. En arrivant sur place: mauvaise surprise, le v√©lo lui ai pass√© sous le nez. Pour √©viter ce genre de d√©sagr√©aments, le nom de la station la plus proche sera actualis√© en temps r√©el. Pour cela, vous pouvez am√©liorer la F1 en proposant une connexion bas√© sur un WebSocket.\nFO2 - D√©ploiement : Pour faciliter le d√©ploiement de votre solution, conteneurisez-la en utilisant Docker Compose.\nFO3 - CRUD : Permettez aux utilisateurs de communiquer directement avec votre base de donn√©es. Pour cela, compl√©tez votre API en proposant des nouvelles routes permettant de :\n\nr√©cup√©rer toutes les informations d‚Äôune station\nsupprimer toutes les informations d‚Äôune station\nmettre √† jour le nom d‚Äôune station\najouter une nouvelle station\n\n\n\n\n\nPour r√©pondre aux fonctionnalit√©s demand√©s, vous aurez certainement besoin de vous armer de:\n\nune librairie pour construire des APIs (conseill√©: FastAPI)\nune solution de base de donn√©es (conseill√©: SQLite)\nun outil de versioning de code en √©quipe (Gitlab ou Github)"
  },
  {
    "objectID": "doc/projet/anciens-sujets.html#section",
    "href": "doc/projet/anciens-sujets.html#section",
    "title": "Anciens sujets",
    "section": "",
    "text": "Tuteur : Cyriel Mallart\n\n\nTu veux parler musique avec des gens qui comprennent tes go√ªts ? Avec (NomDeVotreWebService), c‚Äôest facile ! Enregistre-toi, dis-nous ce que tu √©coutes, et on t‚Äôenvoie des gens qui vibrent au m√™me rythme que toi !\nVous allez cr√©er dans ce projet une API qui met en relation des gens, bas√©e sur leurs go√ªts musicaux. Un.e utilisateur.ice s‚Äôinscrira, s√©lectionnera et enregistrera ses morceaux, artistes et genres pr√©f√©r√©s. L‚ÄôAPI Deezer vous donnera acc√®s √† toutes les caract√©ristiques de ces morceaux. A partir de cela, vous utiliserez une touche d‚ÄôIA pour trouver celui ou celle qui a le profil le plus similaire, et lui enverrez une petite notification pour mettre tout le monde en contact. Si √ßa ne matche pas, ou si l‚Äôutilisateur.ice veut d√©couvrir de nouvelles personnes, on trouve le profil similaire le plus proche en excluant les gens d√©j√† en contact ou refus√©s.\n\n\n\n\ngestion de plusieurs utilisateurs\nenregistrement des morceaux, artistes, genres, etc. utiles en base de donn√©es\nappels √† l‚ÄôAPI Deezer pour obtenir les informations sur les morceaux\nobtention, stockage et mise √† jour des profils similaires\ngestion des notifications de mise en contact : accept√©, refus√©, notification √† tous les utilisateur.ices impliqu√©e.e.s\n\n\n\n\n\nauthentification par mot de passe\ngestion des ‚Äúcontacts‚Äù d‚Äôun utilisateur : d√©letion, signalement, cr√©ation de groupes\nrecommendation de nouveaux morceaux bas√©s sur ceux des contacts\nplaylists cr√©es par fusion des morceaux des utilisateurs, export\ns√©lection ergonomique des morceaux (suggestions, autocompl√©tion, ‚Ä¶)\nalgorithme de recommendation plus √©labor√©\n‚Ä¶\ntout autre id√©e qui vous semble logique, int√©ressante, sous r√©serve qu‚Äôelle soit faisable techniquement dans les temps impartis\n\n\n\n\n\nBackend : FastAPI\nFront end : Jinja2 (templates HTML dans FastAPI). D‚Äôautres choix sont possibles (React.js, Vue.js, ‚Ä¶) si vous les ma√Ætrisez, mais attention, votre tuteur ne pourra vous suivre que sur React.js, et la courbe d‚Äôapprentissage est raide.\nBDD : MongoDB (NoSQL) , Neo4j (NoSQL, graphe) ou Postgres (SQL, disponible √† l‚ÄôENSAI)\nAPI Deezer : https://developers.deezer.com/api\n\n\n\n\n\nCr√©er une appli de messagerie : le but de ce projet est uniquement une mise en contact o√π l‚Äôon partagera une adresse mail par exemple\nSe casser la t√™te sur un algorithme super-classe : les performances de l‚Äôalgorithme de recommendation ne sont pas le point important ici, ne passez pas tout votre projet dessus. Si vous avez envie d‚Äôessayer une id√©e d‚Äôalgorithme, allez-y, m√™me si elle ne fonctionne pas bien au final. Sinon, votre tuteur pourra vous aider sur un algorithme de base\nUne interface r√©ctive super-√©volu√©e avec des graphiques et des previews de morceaux : on attend une interface basique et simple, c‚Äôest-√†-dire, des pages HTML statique √©crit en noir sur fond blanc avec un ou deux boutons.\n\n\n\n\n\nTuteur : Colin Leverger Objectif\nVous √™tes un groupe d‚Äô√©tudiants de l‚ÄôENSAI en deuxi√®me ann√©e, et souhaitez d√©velopper une application en ligne de commande pour faciliter vos futures recherches de stage. Votre startup s‚Äôappelle ‚Ä¶‚Ä¶‚Ä¶ et votre application ‚Ä¶‚Ä¶‚Ä¶. .\nVotre application permettra √† un utilisateur de rechercher des stages de son choix sur un ou plusieurs sites de recherche de stage (Hellowork, welcometothejungle, ‚Ä¶). Les stages peuvent √™tre publi√©s dans diff√©rentes sp√©cialit√©s (informatique, data analyse, machine learning, ‚Ä¶). S‚Äôil est authentifi√©, l‚Äôutilisateur pourra sauvegarder dans l‚Äôapplication les stages qui l‚Äôint√©ressent dans sa ¬´‚Äâliste d‚Äôenvies‚Äâ¬ª, et pourquoi pas r√©pondre aux offres plus facilement (automatiquement, ou au minimum r√©cup√©rer les contacts vers les employeurs). La navigation et les recherches de tout utilisateur seront historis√©es.\nDeux types d‚Äôutilisateurs authentifi√©s pourront cohabiter : utilisateur ¬´‚Äâ√©l√®ve‚Äâ¬ª et utilisateur ¬´‚Äâprofesseur‚Äâ¬ª. Un ¬´‚Äâadministrateur‚Äâ¬ª de l‚Äôapp pourra √©galement g√©rer l‚Äôapplication et les utilisateurs. Un utilisateur non authentifi√© sera par d√©faut dans la cat√©gorie ¬´‚Äâ√©l√®ve‚Äâ¬ª. On peut imaginer que les besoins des professeurs et des √©l√®ves seront diff√©rents‚Ä¶\nL‚Äôapplication permettra aux utilisateurs authentifi√©s de g√©rer leurs comptes, pr√©f√©rences, mots de passe, listes, et √† tous les utilisateurs d‚Äôexporter/importer leurs recherches courantes (dans le format texte que vous jugerez bon).\nLes utilisateurs pourront √©galement g√©o localiser les stages par rapport √† leur position actuelle (temps de trajet,‚Ä¶).\nFonctionnalit√©s requises (num√©rot√©es, mais non ordonn√©es)\n\nF1 : la recherche de r√©sultats sur un site que vous choisirez (Hellowork, welcometothejungle, ‚Ä¶)\nF2 : authentification et gestion du profil utilisateur/profil administrateur\nF3 : gestion de l‚Äôimport/export de donn√©es au format choisi\nF4 : gestion de l‚Äôhistorique des recherches\nF5 : recherche par cat√©gorie/filtre de recherches\n\nFonctionnalit√©s optionnelles\n\nFO1 : lancer des recherches sur plusieurs sites en parall√®le\nFO2 : g√©o localisation de l‚Äôutilisateur et des annonces/distance entre l‚Äôutilisateur et l‚Äôannonce\nFO3 : alertes automatiques si de nouvelles annonces de stage remplissant les crit√®res sont publi√©es\nFO4 : ‚Ä¶ √† vous de jouer‚Äâ!\nNOTE : ce sujet regorge de ¬´‚Äâ‚Ä¶‚Äâ¬ª. En effet, une participation active est vivement recommand√©e et vos id√©es, pour rendre votre projet unique, sont les bienvenues‚Äâ!\n\nFonctionnalit√©s non not√©es (et d√©conseill√©es)\n\nles statistiques/mod√®les complexes que vous pourrez imaginer (une moyenne, OK, mais un mod√®le expo logarithmique quantique d‚Äôordre 10, non)\nl‚Äôinterface graphique type GUI (AUCUN point bonus sur une tr√®s jolie interface‚Äâ!)\n\n\n\n\nTuteur : Maxence Lagalle\n\n\nGreenStream est une API REST qui permet de r√©duire l‚Äôimpact carbone d‚Äôun service de VOD (Netflix, Amazon Prime, Disney+‚Ä¶). Pour le consommateur, elle calcule l‚Äôimpact carbone d‚Äôune vid√©o √† partir de sa dur√©e et de sa r√©solution, en utilisant le mod√®le ‚Äú1byte‚Äù de The Shift Project ou d‚Äôautres mod√®les d‚Äôestimation. Pour le fournisseur de VOD, elle aide √† choisir des serveurs dans la meilleure zone g√©ographique des fournisseurs Cloud en fonction de l‚Äôimpact carbone de la production d‚Äô√©lectricit√©. Ces donn√©es sur l‚Äôimpact carbone sont fournies par l‚ÄôAPI ElectricityMaps. GreenStream est un projet innovant et √©cologique, qui accompagne dans la transition vers des services de VOD plus vert et plus responsables.\nElectricityMaps est partenaire de GreenStream et offre un acc√®s √† la version payante de son API pour toute la dur√©e du projet.\n\n\n\n\nEstimation de l‚Äôempreinte carbone d‚Äôune vid√©o selon le mod√®le ‚Äú1byte‚Äù de The Shift Project\n\nPrise en compte de la localisation g√©ographique du fournisseur de VOD et de l‚Äôutilisateur\nPrise en compte de la dur√©e et de la qualit√© de la vid√©o, du type de connexion et du mat√©riel utilis√© pour regarder la vid√©o\nUtilisation des donn√©es d‚Äôimpact carbone en temps r√©el fournies par l‚ÄôAPI ElectricityMaps\n\nRecommandation du meilleur service Cloud pour diffuser une vid√©o √† un utilisateur\n\nChoix du service Cloud √† l‚Äôimpact carbone le plus faible en fonction de la zone g√©ographique de l‚Äôutilisateur\nD√©termination des services Cloud √©ligibles en fonction de la localisation de l‚Äôutilisateur (ceux dans le m√™me pays ou un pays limitrophe)\nUtilisation des donn√©es de pr√©vision de l‚Äôimpact carbone pour la dur√©e de la vid√©o fournies par l‚ÄôAPI ElectricityMaps\n\nGestion de l‚Äôoffre des fournisseurs Cloud\n\nImpl√©mentation de la liste des zones g√©ographiques propos√©es par au moins deux fournisseurs Cloud (AWS, GCP, Azure‚Ä¶)\nUtilisation d‚Äôune base de donn√©es SQL pour stocker les informations sur les services Cloud disponibles\n\nInformation sur l‚Äô√©tat du service GreenStream\n\nFourniture d‚Äôun service permettant de s‚Äôassurer que GreenStream fonctionne correctement et que son lien avec ElectricityMaps est actif\n\n\n\n\n\n\nSimulation de l‚Äôimpact carbone d‚Äôun changement de comportement\n\nCr√©ation d‚Äôun service qui permet √† l‚Äôutilisateur de simuler l‚Äôimpact carbone qu‚Äôil aurait s‚Äôil changeait certains param√®tres de sa consommation de vid√©os, tels que la qualit√©, la dur√©e, le type de connexion ou le mat√©riel utilis√©\nUtilisation du mod√®le ‚Äú1byte‚Äù ou d‚Äôautres mod√®les d‚Äôestimation pour calculer l‚Äôempreinte carbone selon les diff√©rents sc√©narios\n\nUtilisation de mod√®les d‚Äôestimation de l‚Äôempreinte carbone plus sophistiqu√©s\n\nPrise en compte d‚Äôune consommation √©lectrique variable selon les fournisseurs Cloud\nUtilisation d‚Äôautres mod√®les d‚Äôestimation publi√©s, tels que le mod√®le ‚ÄúCarbon Footprint of Video Streaming‚Äù de Carbon Trust ou d‚Äôautres mod√®les √† rechercher\n\nInt√©gration de crit√®res avanc√©s dans la recommandation du service Cloud\n\nPrise en compte du co√ªt financier des services Cloud et d‚Äôun arbitrage entre le co√ªt et l‚Äôempreinte carbone\nUtilisation d‚Äôun graphe de connexions entre les zones pour d√©terminer la liste des services Cloud √©ligibles pour diffuser une vid√©o √† un utilisateur\n\nSuivi de la consommation totale du service et de son empreinte carbone\n\nEnregistrement SQL de la consommation de vid√©os : dur√©e, zone g√©ographique de l‚Äôutilisateur, service Cloud associ√©, empreinte carbone\nAcc√®s aux donn√©es brutes ou √† une synth√®se statistique via l‚ÄôAPI\n\nFonctionnement en mode d√©grad√©\n\nUtilisation de donn√©es historiques d‚Äôintensit√© carbone de la production d‚Äô√©lectricit√© en cas de d√©faillance de l‚ÄôAPI ElectricityMaps\n\n\nL‚Äôinitiative est fortement encourag√©e dans ce projet, et d‚Äôautres id√©es de fonctionnalit√©s avanc√©es ou d‚Äôam√©lioration des fonctionnalit√©s de base peuvent √™tre propos√©es par les √©l√®ves.\n\n\n\n\nTuteur : Thierry Math√©\n\n\nLe minist√®re des Finances met √† disposition un fichier des prix des carburants dans les stations fran√ßaises. Ce fichier au format XML contient entre autre pour chaque station, ses coordonn√©es, son adresse, ses heures d‚Äôouvertures, le prix des carburants disponibles (mais l‚Äôenseigne de la station n‚Äôy figure pas). Le but du projet de cr√©er une API (application programming interface) qui exploite les donn√©es contenues dans ce fichier. Cette API devra permettre de¬†:\n\nConsulter la liste des stations se trouvant √† proximit√© d‚Äôun point donn√© il sera aussi possible de pr√©ciser le carburant.\nCr√©er et mettre √† jour des listes de stations qu‚Äôil sera possible de consulter par exemple pour voir les prix sur les stations se trouvant sur un trajet r√©gulier.\n\nA chaque requ√™te, l‚ÄôAPI doit s‚Äôassurer qu‚Äôelle utilise bien les derni√®res donn√©es disponibles et au besoin t√©l√©charger les nouvelles donn√©es disponibles sur le site (mises √† jour toutes les 10 minutes)¬†: https://donnees.roulez-eco.fr/opendata/instantane\n\n\n\n\n\nLes param√®tres donn√©s √† cette requ√™te sont les coordonn√©es (longitude et latitude) d‚Äôun point, une distance en km et un type de carburant. L‚ÄôAPI va alors extraire l‚Äôensemble des stations se trouvant dans la zone ainsi d√©finie et disponsant du carburant indiqu√©.\nLa r√©ponse sera donn√©es au format JSON et contiendra:\n\nles parm√®tres de la requ√™te\nla date et l‚Äôheure d‚Äôex√©cution\nle nombre de stations trouv√©es\nla liste des stations : pour chaque station on aura:\n\nl‚Äôid, les coordonn√©es et l‚Äôadresse de la station\nle prix du carburant\n\n\n\n\n\nLa gestion des listes de stations doit permettre de :\n\nCr√©er une liste: le param√®tre en entr√©e est un nom donn√© par l‚Äôutilisateur. La requ√™te revoie un identifiant qui devra √™tre pass√© comme param√®tre pour toutes les autres actions,\nConsulter la liste des listes cr√©es: aucun param√®tre, la requ√™te renvoie les couple identifiant-nom des listes d√©fines,\nAjouter une une plusieurs stations √† un liste: les param√®tres en entr√©e sont l‚Äôidentifiant de la liste et le ou les identifiants des stations √† ajouter,\nSupprimer une liste: le param√®tre √† donner est l‚Äôidentifiant de la liste,\nConsulter la liste: le param√®tre √† donner est l‚Äôidentifiant de la liste. La requ√™te revoie les informations au format JSON qui contiennent:\n\nl‚Äôidentifiant et le nom de la requ√™te\nla date et l‚Äôheure d‚Äôex√©cution\nle nombre de stations contenues dans la liste\nla liste des stations. Pour chaque station on aura:\n\nl‚Äôid, les coordonn√©es et l‚Äôadresse de la station\nle prix du carburant\n\n\n\n\n\n\n\nVoici quelques id√©es de fonctions avanc√©es pour les groupes qui auraient effectu√© l‚Äôensemble des fonction de bases. Toutes autres id√©es pourra bien s√ªr √™tre propos√©es en cours de projet.\n\n\n\nPossibilit√© de passer comme parm√®tre une adresse au lieu de coordonn√©es\nPossibilit√© de pr√©ciser l‚Äôheure de passage et de ne conserver que les stations ouvertes √† cette heure.\n\n\n\n\n\nPossilit√© de retirer une ou plusieur stations d‚Äôune liste\nImposer une identification pour consulter les listes. Chaque utilisateurs n‚Äôaurait alors acc√©s qu‚Äô√† ses liste.\n\n\n\n\n\n\nTuteur : Alo√Øs DE OLIVEIRA\n\n\nLeague Of Legends (connu sous le sigle LoL) est un jeu video, plus pr√©cis√©ment un Multiplayer Online Battle Arena (MOBA), d√©velopp√© par Riot. LoL comptait plus de 100M de joueurs actifs en 2022 et le chiffre n‚Äôest pas vou√© √† diminuer dans les prochaines ann√©es. Cet engouement force Riot √† se renouveler en cr√©ant de nouveaux champions, de nouveaux items, des ajustements sur l‚Äô√©quilibrage du jeu (appel√©s patch). Les joueurs appr√©cient donc fortement les outils leur permettant d‚Äôavoir des analyses simples mais rapides afin de les accompagner et aider dans leurs choix.\nCe sujet ne n√©cessite pas de conna√Ætre le jeu ou d‚Äôy avoir d√©j√† jou√©. Au contraire, il vous arrivera souvent de devoir dans un premier temps comprendre un nouveau contexte m√©tier et vos donn√©es en entr√©e.\n\n\n\n\n\nVous √™tes mobilis√©s afin de mettre en place une solution capable de fournir aux joueurs les premi√®res informations essentielles. Ces analyses seront simples mais n√©cessiteront d‚Äôanalyser tout l‚Äôhistorique des parties que vous aurez √† votre disposition, et donc que vous stockerez. Votre solution a pour but d‚Äô√™tre pens√©e dans une logique d‚Äôam√©lioration continue. Ainsi un code document√© utilisant les principes de la Programmation Orient√©e Objet (POO) est attendu.\n\n\n\nLoL met √† disposition une API afin de permettre aux personnes qui le souhaitent de pouvoir utiliser leurs donn√©es. Une explication du fonctionnement de l‚ÄôAPI de LoL et de l‚Äôobtention des donn√©es sera effectu√©e.\n\n\n\n\nLors de ce projet, vous aurez des fonctionnalit√©s obligatoires et avanc√©es. Il est n√©cessaire de se focaliser sur ces premi√®res et d‚Äôentreprendre les secondes que lorsque vous avez une base solide pour r√©pondre √† l‚Äôensemble des fonctionnalit√©s obligatoires.\n\n\n\nNiveau base de donn√©es\n\n\n\nCr√©ation d‚Äôune base de donn√©es de votre choix (SQL/NoSQL) qui vous servira √† stocker l‚Äôhistorique des parties. Le mod√®le de donn√©es est important, il doit √™tre adapt√© afin de faciliter toutes modifications.\nCr√©ation d‚Äôun pipeline de donn√©es. L‚Äôensemble des √©tapes de la collecte au chargement, en passant par la transformation doivent √™tre le plus r√©utilisable possible.\nL‚Äôensemble des t√¢ches doit √™tre effectu√© en Python (de la cr√©ation, √† l‚Äôinsertion et aux √©ventuelles modifications).\n\nNiveau API\nPour la r√©alisation de ce projet, vous devrez r√©aliser une API (√† l‚Äôaide FastAPI ou Flask) qui vous permettra de renvoyer les diff√©rents r√©sultats souhait√©s. Ces r√©sultats seront √† retourner sous format json. Il existera diff√©rentes classes, d√©crites ci-dessous, avec chacune ses m√©thodes. Toutes les m√©thodes pr√©sentes dans les descriptions des classes sont √† titre indicatif. N‚Äôh√©sitez pas √† √™tre force de proposition.\n\n\n\n\nCela ne n√©cessitera aucune connexion.\nCette classe devra comporter certaines m√©thodes permettant de fournir des statistiques globales sur le jeu, telles que :\n\nAfficher les statistiques d‚Äôun champion : le nombre de games jou√©es, le winrate, le gold lead √† Xmin, etc.\nTrier les champions (globalement ou par lane) selon le crit√®re au choix parmi : nombre de games jou√©es, le winrate, etc.\n\n\n\n\n\n\nCela n√©cessitera de se connecter √† un compte user.\nCette classe h√©ritera de l‚Äôensemble des m√©thodes propres √† la classe invit√©.\nCette classe devra comporter certaines m√©thodes permettant de fournir des statistiques li√©es au compte en question, telles que :\n\nAfficher les statistiques globales/par lane/par champion du compte : le nombre de games jou√©es, le winrate, le kda, etc.\n\n\n\n\n\n\nCela n√©cessitera de se connecter √† un compte admin. 1 seul sera n√©cessaire.\nCette classe h√©ritera de l‚Äôensemble des m√©thodes pr√©c√©dentes.\nCette classe aura pour but de permettre √† l‚Äôadmin de pouvoir g√©rer les comptes et les donn√©es.\n\n\n\n\n\nLes fonctionnalit√©s avanc√©es sont tri√©es selon le niveau de difficult√© , cependant vous √™tes totalement libres sur les fonctionnalit√©s avanc√©es que vous souhaitez r√©alis√©es.\n\n\nJusqu‚Äôici vous utilisez les donn√©es mises √† disposition sans enrichissement. Cette fonctionnalit√© aura pour but de permettre √† l‚Äôadmin de pouvoir ajouter des nouvelles parties r√©centes.\nLes diff√©rents points attendus sont :\n\nGestion de la cl√© (permettant l‚Äôacc√®s √† l‚ÄôAPI de Riot) : au choix entre en brute en param√®tre d‚Äôentr√©e ou permettre d‚Äôaller la r√©cup√©rer directement sur le site depuis l‚ÄôAPI.\nR√©cup√©ration des donn√©es depuis l‚ÄôAPI de Riot selon certains crit√®res de s√©lection.\nAjout des donn√©es dans vos bases de donn√©es.\nAjout de la fonctionnalit√© au sein de votre API.\n\nLes crit√®res de s√©lection seront libres et donc propos√©s par votre groupe, en fonction de ce que l‚ÄôAPI vous permettra de faire.\n\n\n\nLe workflow Gitflow vous permet de faciliter la gestion des branches et la s√©paration des diff√©rentes t√¢ches.\nUtilisez le framework Gitflow pour la gestion de votre projet.\n\n\n\nConteneuriser votre application aura pour but de faciliter son d√©ploiement et son partage. En effet, cela permettra de r√©unir le code et ses composants (frameworks, biblioth√®ques, etc) dans un conteneur. Il sera alors possible d‚Äôex√©cuter le conteneur sans se soucier des diff√©rentes d√©pendances (l‚Äôinstallation des biblioth√®ques avec la bonne version par exemple).\nUtilisez l‚Äôoutil Docker pour conteneuriser votre application.\n\n\n\nPour le moment, vous ne faites remonter que des statistiques descriptives. Ici il s‚Äôagit de mettre √† profit l‚Äôensemble des donn√©es disponibles pour permettre √† l‚Äôutilisateur de pr√©dire l‚Äô√©quipe gagnante en fonction des 5 champions de chaque √©quipe. L‚Äôenjeu de cette fonctionnalit√© n‚Äôest pas de vous faire trouver le meilleur mod√®le de pr√©diction mais d‚Äôajouter une fonctionnalit√© √† votre API bas√© sur ce mod√®le. Vous ne serez donc aucunement not√© sur la qualit√© des pr√©dictions.\nLes diff√©rents points attendus sont :\n\nChoix d‚Äôun mod√®le de pr√©diction : vous ne serez certes pas not√© sur la qualit√© des pr√©dictions mais une courte r√©flexion sur le choix du mod√®le est attendue.\nEntrainement dudit mod√®le : vous √™tes libres sur le choix des librairies.\nS√©rialisation du mod√®le : vous devez sauvegarder votre mod√®le.\nAjout de la fonctionnalit√© au sein de votre API.\n\n\n\n\n\n\nTuteur : Sophie HERBERT, ENSAI 2021\n\n\nRecommander des produits meilleurs pour la sant√© selon plusieurs crit√®res !\nVous allez explorer la c√©l√®bre API Open Food Facts qui regroupe des produits alimentaires divis√©s en plusieurs cat√©gories (Viandes, Snacks, Aliments d‚Äôorigine v√©g√©tale etc.) et pour lesquels nous avons un grand nombre de variables renseign√©es par la communaut√© : nutriscore, nova score, ecoscore, taux de prot√©ine, taux de sucre, √©nergie en kcal‚Ä¶ L‚Äôobjectif de l‚Äôapplication est d‚Äôutiliser un √©chantillon de ces donn√©es en vous concentrant sur quelques produits de quelques cat√©gories que vous aurez choisis, de les afficher tel un catalogue et de pouvoir les trier selon le crit√®re s√©lectionn√© : le moins de sucre possible, le meilleur eco-score, la plus faible valeur √©nerg√©tique‚Ä¶ En allant sur une fiche ¬´ Produit ¬ª, vous afficherez le meilleur produit de la m√™me cat√©gorie selon ce crit√®re. Un syst√®me d‚Äôidentification devra √™tre mis en place. Si l‚Äôutilisateur est identifi√©, pourquoi pas sauvegarder ses articles dans un panier virtuel ?\n\n\n\nLes fonctionnalit√©s requises :\n\nF1 : affichage simple en console d‚Äôun catalogue de produits alimentaires par cat√©gorie de produit\nF2 : ordonner les produits selon un crit√®re nutritionnel\nF3 : s√©lection d‚Äôune fiche ¬´ Produit ¬ª recommandant un autre produit de la m√™me cat√©gorie avec un crit√®re meilleur que le produit consult√© (si meilleur il y a)\nF4 : syst√®me d‚Äôauthentification et de gestion du profil (changement de mot de passe‚Ä¶)\n\n\n\n\n\nF5 : sauvegarde de produits dans un panier\n‚Ä¶\n\nDes fonctionnalit√©s optionnelles pourront √™tre d√©velopp√©es √† votre guise et selon votre inspiration sur le sujet ! Les donn√©es Open Food Facts √©tant tr√®s riches, d‚Äôautres axes d‚Äôanalyses peuvent √™tre creus√©s‚Ä¶ Note : l‚Äôinterface GUI, la mise en place de mod√®les statistiques, la gestion des valeurs manquantes ne seront pas inclues dans la notation.\n\n\n\n\n\n\n\n\n\nCe projet a pour objectif de cr√©er une application qui facilite la recherche d‚Äôemploi dans le secteur de la technologie en utilisant l‚ÄôAPI REST gratuite de Adzuna , qui fournit des informations sur les offres d‚Äôemploi dans divers secteurs √† travers le monde. L‚Äôapplication permettra aux utilisateurs de rechercher des emplois, de filtrer les r√©sultats, de suivre leur progression dans leurs candidatures et de recevoir des alertes pour les nouvelles offres correspondant √† leurs comp√©tences.\n\n\n\n\nInt√©grer les donn√©es de l‚ÄôAPI Adzuna dans une application conviviale.\nPermettre aux utilisateurs de rechercher des offres d‚Äôemploi par mots-cl√©s, localisation et cat√©gories.\nFournir des fonctionnalit√©s de suivi des candidatures, y compris la gestion de CV et de lettres de motivation.\nEnvoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs crit√®res.\nMettre en place un syst√®me de profil pour les chercheurs d‚Äôemploi.\n\n\n\n\nLes fonctionnalit√©s requises :\n\nF1 : Int√©grer les donn√©es de l‚ÄôAPI Adzuna pour afficher des offres d‚Äôemploi dans divers secteurs.\nF2 : Permettre aux utilisateurs de rechercher des emplois en utilisant divers crit√®res.\nF3 : Permettre aux utilisateurs de cr√©er des profils de chercheurs d‚Äôemploi.\n\n\n\n\n\nF4 : Fournir des fonctionnalit√©s de suivi des candidatures et de gestion de documents(CVs, lettres de motivation‚Ä¶).\nF5 : Envoyer des alertes aux utilisateurs pour les nouvelles offres correspondant √† leurs comp√©tences.\nF6:‚Ä¶\n\n‚ùó Vous avez la libert√© de d√©velopper des fonctionnalit√©s optionnelles selon votre inspiration. Aucune interface graphique n‚Äôest demand√©e dans ce sujet, toute interaction avec l‚Äôapplication devra se faire via l‚Äôinvit√© commande ( terminal / cmd ). Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.\n\n\n\n\n\n\n\n\n\nCe projet vous propose d‚Äôexplorer les donn√©es mises √† disposition par OpenData Paris. En particulier, vous allez jouer avec les donn√©es pr√©sentant la disponibilit√© des Velib‚Äô en temps r√©el. La solution proposera des services pour permettre aux utilisateurs de trouver plus facilement un v√©lo, ou pour aider la ville de Paris √† mieux g√©rer son parc de v√©los. Pour cela, vous aurez besoin de capturer et de stocker les donn√©es disponibles sur l‚ÄôAPI d‚ÄôOpenData Paris (et leur historique!) dans une base de donn√©es, puis de cr√©er √† votre tour une API pour y mettre √† disposition vos services.\n\n\n\n\nF1 : obtenir le nom de la station la plus proche ayant au moins un v√©lo disponible √† partir de coordonn√©es g√©ographique. Vous pouvez utiliser l‚ÄôAPI d‚ÄôEtalab pour obtenir des coordonn√©es g√©ographiques √† partir de d‚Äôune adresse.\nF2 : obtenir le nom de la station la moins fr√©quent√©e sur une p√©riode de temps donn√©es.\nF3 : obtenir le num√©ro de l‚Äôarrondissement le plus fr√©quent√© sur une p√©riode de temps donn√©es.\n\n\n\n\n\nF01 - Recherche de v√©lo en temps r√©el : Un utilisateur utilise la F1 pour trouver un v√©lo proche de lui. En arrivant sur place: mauvaise surprise, le v√©lo lui ai pass√© sous le nez. Pour √©viter ce genre de d√©sagr√©aments, le nom de la station la plus proche sera actualis√© en temps r√©el. Pour cela, vous pouvez am√©liorer la F1 en proposant une connexion bas√© sur un WebSocket.\nFO2 - D√©ploiement : Pour faciliter le d√©ploiement de votre solution, conteneurisez-la en utilisant Docker Compose.\nFO3 - CRUD : Permettez aux utilisateurs de communiquer directement avec votre base de donn√©es. Pour cela, compl√©tez votre API en proposant des nouvelles routes permettant de :\n\nr√©cup√©rer toutes les informations d‚Äôune station\nsupprimer toutes les informations d‚Äôune station\nmettre √† jour le nom d‚Äôune station\najouter une nouvelle station\n\n\n\n\n\nPour r√©pondre aux fonctionnalit√©s demand√©s, vous aurez certainement besoin de vous armer de:\n\nune librairie pour construire des APIs (conseill√©: FastAPI)\nune solution de base de donn√©es (conseill√©: SQLite)\nun outil de versioning de code en √©quipe (Gitlab ou Github)"
  },
  {
    "objectID": "doc/projet/anciens-sujets.html#section-1",
    "href": "doc/projet/anciens-sujets.html#section-1",
    "title": "Anciens sujets",
    "section": "2022-2023",
    "text": "2022-2023\n\nGestion de petites annonces üì∞üí∞üè∑\nTutuer : Colin Leverger\n\nObjectif\nVous √™tes un groupe d‚Äôamateurs de shopping sur le web, et souhaitez d√©velopper une application en ligne de commande pour faciliter les achats sur internet. Votre startup s‚Äôappelle __________ et votre application ________.\nVotre application permettra √† un utilisateur de rechercher des articles de son choix sur un ou plusieurs sites de vente (Leboncoin, Vivastreet, ‚Ä¶). Les articles peuvent √™tre pr√©sents dans diff√©rentes cat√©gories (voitures, consoles,‚Ä¶). S‚Äôil est authentifi√©, l‚Äôutilisateur pourra sauvegarder dans l‚Äôapplication les articles/informations/pages web/‚Ä¶ qui l‚Äôint√©ressent dans sa ¬´‚Äâliste d‚Äôenvies‚Äâ¬ª. La navigation et les recherches de tout utilisateur seront historis√©es.\nDeux types d‚Äôutilisateurs authentifi√©s pourront cohabiter : utilisateur ¬´‚Äâparticulier‚Äâ¬ª et utilisateur ¬´‚Äâpro‚Äâ¬ª. Un ¬´‚Äâadministrateur‚Äâ¬ª de l‚Äôapp pourra √©galement g√©rer l‚Äôapplication et les utilisateurs. Un utilisateur non authentifi√© sera par d√©faut dans la cat√©gorie ¬´‚Äâparticulier‚Äâ¬ª. On peut imaginer que les besoins des professionnels et des particuliers seront diff√©rents‚Ä¶\nL‚Äôapplication permettra aux utilisateurs authentifi√©s de g√©rer leurs comptes, pr√©f√©rences, mots de passe, listes, et √† tous les utilisateurs d‚Äôexporter/importer leurs recherches courantes (dans le format texte que vous jugerez bon).\nLes utilisateurs pourront √©galement g√©o localiser les annonces par rapport √† leur position actuelle (temps de trajet,‚Ä¶).\nFonctionnalit√©s requises (num√©rot√©es, mais non ordonn√©es)\n\nF1 : la recherche de r√©sultats sur un site que vous choisirez (Leboncoin, Vivastreet, ‚Ä¶)\nF2 : authentification et gestion du profil utilisateur/profil administrateur\nF3 : gestion de l‚Äôimport/export de donn√©es au format choisi\nF4 : gestion de l‚Äôhistorique des recherches\nF5 : recherche par cat√©gorie/filtre de recherches\n\nFonctionnalit√©s optionnelles\n\nFO1 : lancer des recherches sur plusieurs sites en parall√®le\nFO2 : g√©o localisation de l‚Äôutilisateur et des annonces/distance entre l‚Äôutilisateur et l‚Äôannonce\nFO3 : ‚Ä¶ √† vous de jouer‚Äâ!\n\n\nNOTE : ce sujet regorge de ¬´‚Äâ‚Ä¶‚Äâ¬ª. En effet, une participation active est vivement recommand√©e et vos id√©es, pour rendre votre projet unique, sont les bienvenues‚Äâ!\n\nFonctionnalit√©s non not√©es (et d√©conseill√©es)\n\nles statistiques/mod√®les complexes que vous pourrez imaginer (une moyenne, OK, mais un mod√®le expo logarithmique quantique d‚Äôordre 10, non)\nl‚Äôinterface graphique type GUI (AUCUN point bonus sur une tr√®s jolie interface‚Äâ!)\n\n\n\n\nWebservice de g√©n√©ration de jeux de donn√©es üì° üåê üíΩ\nTuteur : Antoine Brunetti\n\nContexte\nDans le cadre de la r√©alisation de tests de programmes, on est souvent amen√©s a utiliser des jeux de donn√©es fictives.\nPour r√©pondre √† ce besoin, vous envisagez de constituer un produit qui permet de g√©n√©rer des donn√©es de tests pour des statisticiens et d√©veloppeurs en herbe.\nLes utilisateurs de cette API pourront renseigner des types de donn√©es pour la g√©n√©ration √† partir d‚Äôun language d√©di√© : Par exemple :\n\nd√©finir un type SEXE qui ne prendrait que les valeurs M,F ou A\n\"SEXE\":\"'M'|'F'|'A'\"\nou d√©finir un type compos√© VOITURE qui prendrait les valeurs compos√©es :\n{\n    \"VOITURE\": {\n  \"nb_roues\": \"INT\",\n  \"COULEUR\": \"'rouge'|'vert'|'bleu'\"\n    }\n}\n\nLes utilisateurs de l‚Äôapplication d√©finiront ensuite des sch√©mas de donn√©es permettant de g√©rer les m√©tadonn√©es n√©cessaires √† la g√©n√©ration de donn√©es. Ces informations seront stock√©es en base de donn√©es.\nPar exemple :\n{\n    \"sexe\": {\n        \"type\": \"SEXE\",\n        \"remplissage\": 100\n    },\n    \"age\": {\n        \"type\": \"18|19|20\",\n        \"remplissage\": 100\n    },\n    \"prenom\": {\n        \"type\": \"NAME\",\n        \"remplissage\": 88.4\n    },\n    \"nom\": {\n        \"type\": \"NAME|'dupont'\"\n        \"remplissage\": 85\n    }\n}\nIl faudra √©galement qu‚Äôa partir d‚Äôun jeu de configuration fourni au format JSON au d√©marrage de l‚Äôapplication, vous d√©finissiez le point d‚Äôentr√©e d‚Äôacc√®s aux donn√©es g√©n√©r√©es. Cela permettra une meilleure utilisation de votre API pour permettre aux utilisateurs de tester un endpoint sans modifier leur configuration.\nLa g√©n√©ration de ces donn√©es devra se faire selon diff√©rents formats , avec la possibilit√© de d√©finir des seuils de remplissage en amont de la g√©n√©ration des donn√©es.\nLes diff√©rents jeux de donn√©es g√©n√©r√©s seront eux aussi sauvegard√©s pour permettre d‚Äôacc√©der aux donn√©es de mani√®re stable (par une graine üå±), cette graine pourra √™tre fournie par un HEADER HTTP propre a votre application.\nLe point d‚Äôentr√©e de d√©finition du sch√©ma de donn√©es sera accessible en GET a un point d‚Äôentr√©e fixe de votre serveur.\n\n\nFonctionnalit√©s de bases\n\nD√©finition des valeurs possibles pour un champ\nD√©finition d‚Äôun sch√©ma correspondant a une ligne de donn√©es √† g√©n√©rer.\nD√©finition d‚Äôun taux de remplissage pour un champ.\nD√©marrage de l‚Äôapplicatif √† partir d‚Äôun fichier de r√®gles de bases\nLa r√©alisation d‚Äôun sc√©nario d‚Äôusage de l‚ÄôAPI.\n\n\n\nFonctionnalit√©s avanc√©es\n\nG√©n√©ration d‚Äôun jeu de r√®gles √† partir d‚Äôun jeu de donn√©es\nGestion de l‚Äôauthentification √† l‚ÄôAPI\nPermettre l‚Äôexport et l‚Äôimport de sch√©mas sous format JSON\nProposer une solution r√©pondant √† des enjeux de volum√©trie (taille des jeux de donn√©es)\nR√©alisation de rapports de statistiques sur les jeux g√©n√©r√©s.\n\n\n\n\n\nJeux de mot üìñ üèÜ\nTuteur : Armelle Koehl\n\nPr√©sentation\nWordle, zutom, le mot et tous ces d√©riv√©s d‚Äôu c√©l√®bre jeu t√©l√©vis√©. C‚Äôest dans la lign√© de ces jeux que nous souhaitons nous inscrire en faisant notre propre version. Et pourquoi pas, le proposer comme occupation entre 2 amphis aux ensaiens üéÆ Le but du jeu est de deviner un mot sp√©cifique en un minimum de tentatives. Le joueur inscrit sur la premi√®re ligne un mot de son choix de m√™me longueur que le mot √† deviner et entre sa proposition. Le jeu lui indique alors quelles lettres ne se trouvent pas dans le mots, celles qui y sont mais mal plac√©es et celles qui s‚Äôy trouvent et qui sont bien plac√©es. En fonction du nombre de tentatives, on peut proposer un score au joueur. üèÜ\n\n\nFonctionnalit√©s de base\n\nUn historique afin de reprendre sa partie en cours de route\nUn tableau des scores g√©n√©ral s‚Äôactualisant en temps r√©el\nDes tests unitaires\nUne interface console simple √† destination des clients qui utilisera votre API (cf architecture client serveur)\n\n\n\nFonctionnalit√©s avanc√©es\n\nProposer le jeu en multilingues\nCr√©ation de listes de mots personnalis√©es\nUn client permettant de jouer en multijoueur local et distant\nUne gestion de l‚Äôauthentification\n\n\n\nLes outils\n\nUtilisation d‚Äôune API fournissant des mots au hasard\nFramework fastApi\nBase Postgres\nGit et son univers\nVscode\n\n\n\nCe qu‚Äôon essaiera de voir en plus\n\n\n\n\nConf√©rence de jeu de r√¥le üè∞üêâ\nTuteur : Cyriel Mallart\n\nPr√©sentation\nUne nouvelle convention de jeu de r√¥le arrive √† Rennes ! L‚Äôactivit√© phare de la convention sera un weekend d√©di√© √† la pratique des jeux de r√¥les. Plusieurs jeux se d√©rouleront en parall√®le, chacun √† une table contenant un ma√Ætre/une ma√Ætresse du jeu (MJ), ainsi que des joueurs et joueuses. Le but de ce weekend est de r√©unir des gens de tous horizons, de donner une premi√®re impression du jeu de r√¥le aux personnes n‚Äôayant jamais essay√©, mais aussi de satisfaire les joueurs plus exp√©riment√©s. Le syst√®me de jeu utilis√© est Dongeons et Dragons 5E.\nLes organisateurs vous sollicitent pour cr√©er une application qui permette de g√©rer les tables de jeu de la conf√©rence. Il faudra cr√©er deux interfaces diff√©rentes : une pour les organisateurs et une pour un joueur ou MJ.\nUn joueur ou une joueuse s‚Äôinscrit √† la conf√©rence en renseignant un nouveau profil. Sur ce profil, il ou elle peut d√©clarer des personnages diff√©rents. En utilisant l‚ÄôAPI disponible √† l‚Äôadresse https://www.dnd5eapi.co/, plus d‚Äôinformations seront coll√©ct√©es sur chaque personnage, et completeront sa fiche, comme les langues que le personnage parle, ses capacit√©s physiques, etc. Une joueuse doit aussi pouvoir s‚Äôinscrire √† une table, et consulter les tables auxquelles elle joue. Les MJs ont acc√®s √† un profil similaire, o√π ils peuvent se porter volontaires pour plusieurs sc√©narios (et donc plusieurs tables). Le MJ doit aussi avoir acc√®s √† une liste des joueurs et des personnages qui seront √† sa table, afin de pouvoir se pr√©parer au mieux.\nLes organisateurs se r√©servent le droit de supprimer des joueurs et des MJ, et de r√©organiser les tables. Dans ce cas, un tel √©v√®nement sera notifi√© aux joueurs concern√©s lorsqu‚Äôils iront consulter les tables auxquelles ils jouent.\n\n\nFonctionnalit√©s attendues\n\nAuthentification sommaire des profils organisateur/joueur/MJ\nInscription pour un nouveau joueur ou MJ\nCompl√©tion des fiches personnages via l‚ÄôAPI\nInscription/d√©sistement √† une table (avec gestion des contraintes)\nVue du programme individuel pour chaque joueur\nAjout/suppression des joueurs √† une table\nCr√©ation/suppession de tables\nVue g√©n√©rale du programme (tables, joueurs, MJs et horaires)\n\n\n\nFonctionnalit√©s avanc√©es\n\nRecherche du programme d‚Äôun joueur particulier par un organisateur\nValidation des personnages par le MJ avant inscription d√©finitive √† une table\nGestion d‚Äôun second syst√®me de jeu (Pathfinder, Call of Chtulu ou Monster of the Week, par exemple)\n\n‚ùó Aucune interface graphique n‚Äôest demand√©e dans ce sujet. Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.\n\n\nTechnologies utilis√©es\n\nFastApi\nBase de donn√©e au choix (SQL comme PostGres ou MySQL, ou NoSQL comme MongoDB)\nAPI D&D5e\n\n\n\n\nProfite au MAX de ton TGVMAX üöÜ : TGVMAXimizer\nTuteur : Mansor Gueye\n\nPr√©sentation\nVous avez un abonnement TGVMAX (Jeune üßë üë© ou Senior üßìüëµ)et vous avez du mal √† trouver des trajets √©ligibles, TGVMAXimizer est LA solution. TGVMAXimizer est l‚Äôapplication qui facilite la recherche de places disponibles pour les trajets √©ligibles au TGVMax. L‚Äôutilisateur cr√©e un compte avec un profil jeune ou senior. Une fois authentifi√©, l‚Äôutilsateur pourra lancer une recherche en specififant la gare de depart, la gare de d√©stination et √©ventuellement la date de d√©part. Le resultat sera la liste des trajets √©ligibles au TGVMAX junior ou senior selon le profil de l‚Äôutilisateur. Les donn√©es sur la disponibilit√© √† 30 jours de places MAX JEUNE et MAX SENIOR sont accessibles via l‚Äôapi tgvmax disponible sur le site https://data.sncf.com/explore/dataset/tgvmax/api/\n\n\nFonctionnalit√©s attendues\n\nCr√©ation de compte\nUne gestion de l‚Äôauthentification\nPossibilit√© de d√©connexion\nRecherche de trajets √©ligibles au MAX JEUNE / MAX SENIOR\nFiltre pour ne voir que les places √† 0 euro\n\n\n\nFonctionnalit√©s avanc√©es\n\nRecherche de toutes les destinations atteignables avec des places √©ligibles au MAX JEUNE / MAX SENIOR (y compris le trajet de retour) durant un weekend\nRecherche de toutes les destinations atteignables avec des places √† 0 euros (y compris le trajet de retour) durant un weekend\nUtilisation d‚Äôune architecture serveless avec AWS lambda pour executer du code python en r√©ponse √† un √©v√©nement (event trigger)\nCr√©er un systeme d‚Äôalerte pour envoyer une notification par email quand une place remplissant les crit√®re de recherche se lib√®re.\n\n‚ùó Aucune interface graphique n‚Äôest demand√©e dans ce sujet, toute interaction avec l‚Äôapplication devra se faire via l‚Äôinvit√© commande ( terminal / cmd ). Si vous souhaitez tout de m√™me le faire, cela ne saurait se substituer aux fonctionnalit√©s demand√©es.\n\n\nLes outils\n\nFastApi\nBase de donn√©e au choix (SQL comme PostGres ou MySQL, ou NoSQL comme MongoDB)\nVersioning avec Git\nIDE de votre choix\n\n\n\n\nRap Analytics üé∂üé§üìà\nTuteur : Samuel Goutin\n\nContexte\nRapminerz.io est un Data-M√©dia pour le Rap FR. Notre ambition est d‚Äôutiliser les plus r√©centes innovations technologiques pour offrir √† une communaut√© de passionn√©s une vision approfondie et in√©dite du Rap Francophone. Le projet est n√© de l‚Äôid√©e de parler de rap autrement, en mettant √† jour des ph√©nom√®nes impossibles √† percevoir lors d‚Äôune simple √©coute. Nous exploitons la force de la data science pour traiter du rap dans sa globalit√©. Pour cela, nous avons agr√©g√© une des plus grandes bases de donn√©es du Rap Fran√ßais avec plus de 120k morceaux. Nous vous proposons de participer √† l‚Äôanalyse de cette montagne de donn√©es. Pr√™ts ? Codez !\n\n\nSujet\n\nObjectif\nVous √™tes charg√© de d√©velopper une solution capable de fournir √† la communaut√© de Rapminerz des analyses pertinentes sur les featuring des rappeurs Fran√ßais. Les analyses sont des chiffres cl√©s, des indicateurs ou des pr√©dictions qui n√©cessite d‚Äôanalyser tout l‚Äôhistorique de donn√©es √† votre disposition. Votre solution doit donc stocker l‚Äôhistorique des donn√©es. On souhaite que les analyses soient consultables depuis un navigateur web (via des requ√™tes HTTP). La communaut√© de Rapminerz compte aujourd‚Äôhui plus de 50k personnes. Cela fait autant d‚Äôutilisateur potentiels de vos analyses. Aussi, la source de donn√©es peut √™tre amen√©e √† grossir. Votre solution doit donc supporter une augmentation du nombre d‚Äôutilisateurs et de la quantit√© de donn√©es. Enfin, votre solution continuera √† √©voluer. Elle doit √™tre pens√©e pour faciliter l‚Äôajout de nouvelles fonctionnalit√©s.\nUtilisez les principe de la Programmation Orient√©e Objet et privil√©giez un code document√© et test√© comme vu en TP.\n\n\nLes donn√©es\nVous avez √† disposition un flux de donn√©es √† l‚Äôadresse suivante https://apps-dev.rapminerz.io/data-ensai/. Il contient une liste de featuring d√©crit par les champs :\n\ndate : sous la forme d‚Äôun timestamp.\nprimary_artist_name : le nom de l‚Äôartiste en t√™te d‚Äôaffiche de la chanson.\nfeatured_artists_names : la liste des noms des artistes en featuring sur la chanson.\n\nLes donn√©es sont brutes, et n√©cessitent donc d‚Äô√™tre nettoy√©es et transform√©es. Chaque semaine, des nouvelles donn√©es sont int√©gr√©es aux flux, et les plus anciennes sont retir√©es.\n\n\n\nFonctionnalit√©s\nLes fonctionnalit√©s d√©crites dans la suite permettent de r√©pondre au sujet, en tenant compte des contraintes sous jacentes.\nVous devez impl√©menter toutes les fonctionnalit√©s attendues ainsi qu‚Äôau moins une fonctionnalit√© avanc√©e de votre choix.\n\n\nFonctionnalit√©s attendues\n\nFO1 : Mise en place d‚Äôune base de donn√©es\n\nChoisissez une base de donn√©es de votre choix (SQL/NoSQL) pour y stocker l‚Äôhistorique de vos donn√©es, en vous assurant de ne pas introduire de doublons. Vous pouvez par exemple utiliser la librairie sqlite3.\nToutes les op√©rations li√©es √† votre base de donn√©es telle que la cr√©ation de tables, les insertions et les lectures devront √™tre pilot√©es en Python.\nChoissisez un mod√®le de donn√©es qui facilitera les modifications. Par exemple, le changement de nom d‚Äôun artiste ne doit n√©cessiter qu‚Äôune seule instruction (type UPDATE TABLE). Inspirez-vous de la mod√©lisation en √©toile.\n\n\n\nFO2 : Construction d‚Äôun pipeline de donn√©es\n\nDef: Pipeline de donn√©es : Un pipeline de donn√©es est un concept informatique faisant r√©f√©rence aux √©tapes de transport des donn√©es d‚Äôune source vers une cible. Parmi ces √©tapes, on peut y retrouver la collecte, l‚Äôorganisation ou encore la transformation des donn√©es.\n\n\nDef: Pipeline ETL: Un pipeline ETL est un pipeline de donn√©es sp√©cial comprenant uniquement des √©tapes de collecte (E), de transformation (T) et de chargement (L) des donn√©es vers une cible.\n\n\nDef: Orchestrateur: Un orchestrateur de pipeline est un outil permettant de chainer les √©tapes d‚Äôune pipeline et de g√©rer les d√©pendances entre √©tapes.\n\n\nVotre pipeline sera compos√©e des √©tapes suivantes :\n\nCollecte de la source de donn√©es,\nQuelques √©tapes de transformation (nettoyage, typage, encodage, etc..),\nChargement dans la base de donn√©es.\n\nChacune des √©tapes de votre pipeline devra √™tre g√©n√©rique et r√©utilisable. Dans l‚Äôid√©al, chaque √©tape doit correspondre √† une fonction.\nLe plan d‚Äôex√©cution de la pipeline sera d√©fini dans un fichier de configuration (en json ou yaml). Ce fichier contiendra la liste des √©tapes √† ex√©cuter ainsi que leurs param√®tres. Il devra lu et interpr√©t√© par Python lors d‚Äôune ex√©cution de la pipeline. Vous pouvez utiliser les librairies json ou PyYAML pour cela.\nVous pourrez ainsi cr√©er plusieurs configurations diff√©rentes pour votre pipeline.\nL‚Äôex√©cution de d‚Äôune pipeline se fera via l‚Äôinterface en ligne de commande. Le chemin vers votre fichier de configuration pourra √™tre plac√©e en argument de la commande en utilisant la libraire argparse.\nL‚Äôorchestration des √©tapes de votre pipeline pourra se faire avec des outils d√©di√©s tel que Pandas pipe ou genpipes.\n\n\n\nAttention √† ne pas introduire de doublons dans la base de donn√©es! Vous pouvez utilisez le champ date comme point de rep√®re.\n\n\n\nFO3 : Mise en place d‚Äôune API et exposition de r√©sultats simples\n\nMettez en place une API REST en utilisant FastAPI ou Flask.\nAjoutez une route nomm√©e /count-feat qui retourne le r√©sultat de la requ√™te suivante :\n\nLe nombre de featuring par artiste et par mois. Un featuring est comptabilis√© lorsque l‚Äôartiste est primary_artist ou featured_artist.\n\nAjoutez une route nomm√©e /mean-feat qui retourne le r√©sultat de la requ√™te suivante :\n\nLa moyenne mobile du nombre total de featuring par jour avec une fen√™tre de 5.\n\nRetournez les r√©sultats au format json.\n\n\n\nFO4 : Acc√©l√©ration des appels √† l‚ÄôAPI\nPour permettre √† votre API de supporter un grand nombre de requ√™te simultan√©es, vous devez impl√©menter au moins l‚Äôune des deux solutions suivantes.\nPr√©-calcul\nVous pouvez acc√©l√©rer le calcul d‚Äôune requ√™te en pr√©-calculant tout ou partie des r√©sultats.\n\nCalculez tout ou partie de la requ√™te et stockez l√† dans un fichier csv ou json que l‚Äôon appelle une vue.\nModifiez votre API afin qu‚Äôelle tire profit de ce fichier.\nVeillez √† tenir √† jour votre vue en effectuant des synchronisations r√©guli√®res avec la base de donn√©es.\n\n\nCache\nVous pouvez acc√©l√©rer le calcul d‚Äôune requ√™te en cachant ses r√©sultats en m√©moire.\n\nDef: Cache: Une m√©moire cache une m√©moire qui enregistre temporairement des copies de donn√©es provenant d‚Äôune source, afin de diminuer le temps d‚Äôun acc√®s ult√©rieur (en lecture) √† ces donn√©es.\n\n\nLors du premier appel la requ√™te n‚Äôexiste pas dans le cache. Elle est donc calcul√©e √† partir des donn√©es de la base de donn√©es. Le r√©sultat est renvoy√© √† l‚Äôutilisateur et stock√© dans le cache pour anticiper les futurs appels.\nLors du second appel (et des suivants), le r√©sultat de la requ√™te est d√©j√† pr√©sents dans le cache. Le r√©sultat est renvoy√© de mani√®re quasi instantan√©e √† l‚Äôutilisateur.\nVous pouvez utilisez la librairie cachetools pour impl√©menter un cache.\n\n\n\n\n\nFonctionnalit√©s avanc√©es\nLes fonctionnalit√©s difficiles seront davantage valoris√©es que les fonctionnalit√©s faciles.\n\nFA1 [difficult√© : facile] : Impl√©mentation d‚Äôun syst√®me d‚Äôauthentification √† l‚ÄôAPI\nPour s√©curiser votre API, implementez un syst√®me d‚Äôauthentification. L‚Äôutilisateur devra √™tre muni d‚Äôun token pour pouvoir utiliser votre service.\n\n\nFA2 [difficult√© : facile] : Utilisation du workflow Gitflow\nLorsque vous travaillez en √©quipe sur un projet de d√©veloppement, adoptez le framework Gitflow pour une meilleure gestion des branches.\n\n\nFA3 [difficult√© : moyen] : Exposez un mod√®le de Machine Learning\nOffrez la possibilit√© √† vos utilisateurs d‚Äôobtenir la pr√©diction du nombre de featuring total pour les prochains mois.\n‚ùó Vous ne serez pas √©valu√© sur la qualit√© de votre mod√®le.\n\nEntrainez un mod√®le de pr√©vision de s√©rie temporelle basique √† pr√©voir le nombre de featuring total.\nVous pouvez utiliser la m√©thode du lissage exponentiel pour g√©n√©rer des pr√©visions en utilisant la librairie statsmodels.\nApr√®s l‚Äôavoir entrain√©, s√©rialisez le mod√®le en utilisant la librairie pickle afin de le sauvegarder dans un fichier.\nAjoutez une route nomm√©e /predict-feat √† votre API qui retourne une pr√©diction du mod√®le.\nAjoutez la possibilit√© de d√©clancher un r√©-entrainement du mod√®le avec l‚Äôinterface en ligne de commande.\n\n\n\nFA4 [difficult√© : moyen] : Mise en place d‚Äôune chaine d‚Äôint√©gration continue\n\nDef: Int√©gration Continue: Consiste √† int√©grer les changements apport√©s au code informatique d‚Äôun projet logiciel de fa√ßon continuelle, afin de d√©tecter et de corriger imm√©diatement les √©ventuelles erreurs.\n\nMettez en place une chaine d‚Äôint√©gration continue basique avec Gitlab-CI ou Github Actions.\nVotre chaine d‚Äôint√©gration continue pourra comporter deux √©tapes : - une √©tape d‚Äôex√©cution des tests avec la librairie unittest ou pytest - une √©tape de qualit√© du code avec la librairie flake8\n\n\nFA5 [difficult√© : √©lev√©e] : Conteneurisez votre application\n\nDef: Conteneurisation: Consiste √† rassembler le code du logiciel et tous ses composants (biblioth√®ques, frameworks et autres d√©pendances) de mani√®re √† les isoler dans leur propre ¬´ conteneur ¬ª.\n\nConteuneurisez l‚Äôensemble de votre solution en utilisant Docker.\n\n\n\n\nAPI cadastrale üó∫üèòüèó\nTuteur : Thierry Math√©\n\nLe contexte\nLe service statistique du minist√®re de la Transition √©cologique g√®re ¬´ Sitadel ¬ª, le r√©pertoire des autorisations d‚Äôurbanismes. √Ä partir de ce r√©pertoire le service publie des chiffres sur le nombre de permis de construire (PC) autoris√©s et le nombre de logements dont la construction est autoris√©e sur chaque commune. Une demande de PC doit se faire sur un terrain s‚Äô√©tendant sur une ou plusieurs parcelles cadastrales contigu√´s. Il est possible que ces parcelles se trouvent sur des communes diff√©rentes voire sur des d√©partements diff√©rents. Lorsque c‚Äôest le cas, une demande de PC doit √™tre faite sur chaque commune concern√©e. Cette situation peut donc engendrer des doublons au niveau du d√©compte des PC et des logements autoris√©s. Ce ph√©nom√®ne existe mais √† l‚Äôheure actuelle on ignore s‚Äôil est fr√©quent et si les erreurs engendr√©es ont un poids notable sur les chiffres publi√©s au niveau communal. Le but de ce projet est d‚Äôapporter des outils qui aideront √† l‚Äô√©tude de ce ph√©nom√®ne. Pour d√©tecter les PC √† cheval sur plusieurs communes, il convient de conna√Ætre les parcelles cadastrales qui sont en bordure de commune, puis de trouver les PC se trouvant sur ces parcelles et enfin d√©terminer lesquels de ces PC se trouvent sur des parcelles contigu√´s afin de voir s‚Äôil s‚Äôagit de la m√™me construction ou non.\n\n\nLes d√©veloppements obligatoires\nLe projet a pour but premier de cr√©er une API capable de r√©pondre aux requ√™tes suivantes :\n\nquelles sont les communes ayant des parcelles contigu√´s √† une commune donn√©e ?\nquelles sont les parcelles en limite d‚Äôune commune donn√©e ?\nquelles sont les parcelles contigu√´s √† une parcelle donn√©e ?\n\nPour cela il faudra exploiter les fichiers geoJSON du site : https://cadastre.data.gouv.fr/datasets/cadastre-etalab\nCe site contient des fichiers communaux des limites des parcelles adastrales. Chaque parcelle est d√©limit√©e par un polygone. Deux parcelles sont contigu√´s si elles partagent un m√™me segment.\nLe premier travail sera donc de cr√©er √† partir de ces fichiers une base de donn√©es qui stockera les communes et les parcelles contigu√´s. Pour des raisons de volum√©trie des donn√©es, ce travail ne sera effectu√© que sur un d√©partement, mais le programme de construction de la base et la base elle-m√™me devront √™tre capables de traiter plusieurs d√©partements. De plus, le programme de construction de la base devra √™tre facilement param√©trable pour changer la zone g√©ographique couverte et l‚Äôann√©e de g√©ographie. Le second travail sera la construction de l‚ÄôAPI qui r√©pondra aux requ√™tes pr√©-cit√©es en exploitant la base de donn√©es.\n\n\nD√©veloppement optionnel\nDans un second temps, les groupes qui en auront la possibilit√© pourront faire des recherches sur les PC √† partir des donn√©es Sitadel disponibles au format CSV sur le site du minist√®re : https://www.statistiques.developpement-durable.gouv.fr/liste-des-permis-de-construire-et-autres-autorisations-durbanisme √âtant donn√© une commune de r√©f√©rence, il faudra rechercher les communes qui lui sont contigu√´s et extraire les PC de toutes ces communes. En suite il faudra dresser la liste des parcelles en limite de la commune de r√©f√©rence et de toutes les parcelles qui leur sont contigu√´s dans les autres communes et lister les PC pr√©sents sur ces parcelles. Enfin il faudra rapprocher les PC contigu√´s\nCe programme de recherche devra donc fournir en sortie cette liste de PC contigu√´s qui sera ensuite analys√©e pour voir s‚Äôil s‚Äôagit d‚Äôun m√™me projet de construction ou pas.\n\n\n\nLa pyramide et le philosophe üìñ üîó\nTuteur : Suliac Le Guillou\n\nPr√©sentation\nApr√®s le succ√®s des Worlde et Sutom cette ann√©e, je vous propose de revisiter un autre jeu t√©l√©vis√©: Pyramide. Dans ce jeu, le maitre des mots doit faire deviner un mot √† son √©quipier en lui donnant pour indice des synonymes.\nPour renouveler ce concept, je vous propose de coupler ce concept avec un rare jeux de l‚Äôinternet: le philosophe. Ici vous devez choisir un article au hasard sur Wikipedia et naviguer les liens hypertext jusqu‚Äôa tomber sur la page de philosophie\nVous aurez ainsi √† construire une version pour un joueur de Pyramide en vous aidant de Wikipedia: votre programme devra aller chercher un article au hasard sur la fameuse encyclop√©die et distribuer des indices au joueur pour lui faire deviner\n\n\nFonctionnalit√©s de base\n\nConstruire votre √©nigme\nFiltrer les indices\nDes tests unitaires\nUne interface console simple √† destination\n\n\n\nFonctionnalit√©s avanc√©es\n\nFiltrer les articles injouable\nReconnaitre des cat√©gories pour donner plus d‚Äôindices (biologie, math√©matique, jeux vid√©o)\nUn tableau des scores\nDes variantes de jeux\nUne version deux joueurs\nSelection de language\n\n\n\nLes outils\n\nWikipedia\nBase Postgres\nGit\nVscode"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#objectifs",
    "href": "doc/projet/presentation-tuteurs-slides.html#objectifs",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Objectifs",
    "text": "Objectifs\n\nD√©velopper une application en python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#comp√©tences-vis√©es",
    "href": "doc/projet/presentation-tuteurs-slides.html#comp√©tences-vis√©es",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Comp√©tences vis√©es",
    "text": "Comp√©tences vis√©es\n\nTravailler en groupe (organisation, suivi, git)\nMod√©liser une application complexe (UML)\nAppliquer les principes de la POO\nValoriser son travail √† l‚Äô√©crit et √† l‚Äôoral"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#cours",
    "href": "doc/projet/presentation-tuteurs-slides.html#cours",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Cours",
    "text": "Cours\nLes cours de Compl√©ments d‚Äôinformatique vise √† fournir aux √©l√®ves les outils pour mener √† bien le projet informatique.\n\n6h des cours\n4 TP de 3h\n\ndispens√©s par les tutrices / tuteurs\nle sujet est fourni"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#cadre-g√©n√©ral-du-projet",
    "href": "doc/projet/presentation-tuteurs-slides.html#cadre-g√©n√©ral-du-projet",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Cadre g√©n√©ral du projet",
    "text": "Cadre g√©n√©ral du projet\n\n1er semestre de 2A\nGroupes impos√©s de 4 ou 5 √©l√®ves\nLes groupes votent pour leurs sujets pr√©f√©r√©s\n4 groupes par tutrice / tuteur"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#phases",
    "href": "doc/projet/presentation-tuteurs-slides.html#phases",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "2 phases",
    "text": "2 phases\n\nAnalyse / Conception g√©n√©rale (sept)\n\n4 s√©ances de 3h de suivi\nla s√©ance de mi-octobre permet de faire un retour aux √©quipes sur le dossier d‚Äôanalyse\n\nImpl√©mentation (oct-nov)\n\n3 s√©ances de 3h de suivi"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#livrables",
    "href": "doc/projet/presentation-tuteurs-slides.html#livrables",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Livrables",
    "text": "Livrables\n\n5 octobre : Dossier d‚Äôanalyse\n23 novembre : Rapport final + code\n12 d√©cembre : Soutenance"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#planning",
    "href": "doc/projet/presentation-tuteurs-slides.html#planning",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Planning",
    "text": "Planning"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#sujet",
    "href": "doc/projet/presentation-tuteurs-slides.html#sujet",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Sujet",
    "text": "Sujet\n√Ä vous de jouer pour trouver une bonne id√©e !\n\n\n\n\n\n\nTip\n\n\n\nListe d‚ÄôAPI publiques"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#r√©sum√©-du-travail-de-tutrice-tuteur",
    "href": "doc/projet/presentation-tuteurs-slides.html#r√©sum√©-du-travail-de-tutrice-tuteur",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "R√©sum√© du travail de tutrice / tuteur",
    "text": "R√©sum√© du travail de tutrice / tuteur\n\n4 x 3h de TP de compl√©ments d‚Äôinformatique\n7 x 3h de suivi de projet\nLire et noter les 4 dossiers d‚Äôanalyse\nNoter le code\nLire du rapport final, participer √† la notation\nParticiper aux 4 soutenances"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#votre-r√¥le",
    "href": "doc/projet/presentation-tuteurs-slides.html#votre-r√¥le",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Votre r√¥le",
    "text": "Votre r√¥le\n\nGuider les √©l√®ves\nSuivi des √©quipes (avancement, participation, bonne entente)\nMa√Ætrise d‚ÄôOuvrage\nAide au d√©bogage"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs-slides.html#stack-vm",
    "href": "doc/projet/presentation-tuteurs-slides.html#stack-vm",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Stack VM",
    "text": "Stack VM\n\nPython 3.10\nPostgreSQL (chaque √©l√®ve a une BDD)\nGit Bash\nVisual Studio Code"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html",
    "href": "doc/projet/presentation-tuteurs.html",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "",
    "text": "D√©velopper une application en python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#objectifs",
    "href": "doc/projet/presentation-tuteurs.html#objectifs",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "",
    "text": "D√©velopper une application en python\nD√©couvrir l‚Äôarchitecture logicielle\nCommuniquer avec une base de donn√©es PostreSQL\nUtiliser des webservices\nConcevoir et Mod√©liser"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#comp√©tences-vis√©es",
    "href": "doc/projet/presentation-tuteurs.html#comp√©tences-vis√©es",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Comp√©tences vis√©es",
    "text": "Comp√©tences vis√©es\n\nTravailler en groupe (organisation, suivi, git)\nMod√©liser une application complexe (UML)\nAppliquer les principes de la POO\nValoriser son travail √† l‚Äô√©crit et √† l‚Äôoral"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#cours",
    "href": "doc/projet/presentation-tuteurs.html#cours",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Cours",
    "text": "Cours\nLes cours de Compl√©ments d‚Äôinformatique vise √† fournir aux √©l√®ves les outils pour mener √† bien le projet informatique.\n\n6h des cours\n4 TP de 3h\n\ndispens√©s par les tutrices / tuteurs\nle sujet est fourni\n\n\n\nNotions abord√©es en cours\n\nUtilisation basique de Git\nRappels de POO\nD√©composer une application en couches\nCommuniquer avec une base de donn√©es / une API\nTests unitaires\nDocumentation"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#cadre-g√©n√©ral-du-projet",
    "href": "doc/projet/presentation-tuteurs.html#cadre-g√©n√©ral-du-projet",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Cadre g√©n√©ral du projet",
    "text": "Cadre g√©n√©ral du projet\n\n1er semestre de 2A\nGroupes impos√©s de 4 ou 5 √©l√®ves\nLes groupes votent pour leurs sujets pr√©f√©r√©s\n4 groupes par tutrice / tuteur"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#phases",
    "href": "doc/projet/presentation-tuteurs.html#phases",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "2 phases",
    "text": "2 phases\n\nAnalyse / Conception g√©n√©rale (sept)\n\n4 s√©ances de 3h de suivi\nla s√©ance de mi-octobre permet de faire un retour aux √©quipes sur le dossier d‚Äôanalyse\n\nImpl√©mentation (oct-nov)\n\n3 s√©ances de 3h de suivi"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#livrables",
    "href": "doc/projet/presentation-tuteurs.html#livrables",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Livrables",
    "text": "Livrables\n\n5 octobre : Dossier d‚Äôanalyse\n23 novembre : Rapport final + code\n12 d√©cembre : Soutenance\n\n\nDossier d‚Äôanalyse\nDocument d‚Äôune dizaine de pages contenant :\n\nla compr√©hension du besoin\nun planning (diagramme de Gantt)\ndes diagrammes UML (cas d‚Äôutilisation, classe‚Ä¶)\n\n\n\nSoutenance\nLes soutenances ont lieu d√©but d√©cembre.\nLes √©l√®ves pr√©sentent leur projet √† un jury compos√© de 3 personnes :\n\nun pr√©sident de jury\nun enseignant de l‚ÄôENSAI\nla tutrice / le tuteur\n\n\n\nNotes\n\n\n\nLivrable\nCorrecteur\nCoef projet\nCoef cours\n\n\n\n\nDossier d‚Äôanalyse\nTutrice / Tuteur\n1/3\n\n\n\nCode\nTutrice / Tuteur\n\n1/3\n\n\nRapport final\nJury\n1/3\n\n\n\nSoutenance\nJury\n1/3\n\n\n\nDevoir sur table\nEnseignant\n\n2/3\n\n\n\nLe code du projet comptera pour un tiers de la note du cours de Compl√©ments d‚Äôinformatique."
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#planning",
    "href": "doc/projet/presentation-tuteurs.html#planning",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Planning",
    "text": "Planning\n\nDates provisoires 2025\n\n\n\n\n\n\n\nDate\nTopic\n\n\n\n\nvendredi 29 ao√ªt\nTP1 et Suivi 1\n\n\nvendredi 5 septembre\nTP2 et Suivi 2\n\n\nvendredi 12 septembre\nTP3 et Suivi 3\n\n\nvendredi 19 septembre\nTP4 (matin)\n\n\nvendredi 3 octobre\nSuivi 4 (retour sur les dossiers d‚Äôanalyse)\n\n\nmar-jeu 4-6 novembre\n3 jours d‚Äôimmersion (Suivi 5 et 6)\n\n\nvendredi 14 novembre\nSuivi 7\n\n\nmercredi 10 d√©cembre\nSoutenance"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#sujet",
    "href": "doc/projet/presentation-tuteurs.html#sujet",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Sujet",
    "text": "Sujet\n√Ä vous de jouer pour trouver une bonne id√©e !\n\n\n\n\n\n\nTip\n\n\n\n\nListe d‚ÄôAPI publiques\n\n\n\n\n√âl√©ments requis\n\nUtilisation de la POO\nStockage en BDD (sans utiliser d‚ÄôORM type SQLAlchemy)\nUtilisation et / ou Cr√©ation d‚Äôun webservice\nPas d‚Äôinterface graphique\n\npour les sujets n‚Äôimpliquant pas de cr√©ation de WS, InquirerPy sera utilis√© comme IHM en mode console\n\n\n\n\nExemples de sujets\n\nApplication utile\n\ndonn√©es SNCF pour optimiser ses r√©ductions\nr√©duire l‚Äôimpact carbone de la VOD\nrecherche de stage, de velib, de carburant moins cher, de bi√®res\nrecommandation de produits meilleurs pour la sant√©\n\nAutour des jeux ou de la musique\n\nstats de jeux videos\nJeux de mots (Wordle)\nconvention de JDR\nRAP analytics\n\n\nIl est tout √† fait possible de proposer un sujet plus exotique (‚ö†Ô∏è √† ne pas trop faire peur aux √©l√®ves).\n\n\nAnciens sujets\nListe des anciens sujets.\n\n\nTemplate\n\n### Titre\n\nTuteur / Tutrice : \n\n#### Pr√©sentation\n\ncontexte, objectifs, API utilis√©e, cr√©ation d'une API et/ou d'un menu interactif ?\n\n#### Fonctionnalit√©s de base\n\n- F1 : \n- F2 : \n\n#### Fonctionnalit√©s optionnelles\n\n- FO1 : \n- FO2 : \n\n#### Conseils / Outils ..."
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#r√©sum√©-du-travail-de-tutrice-tuteur",
    "href": "doc/projet/presentation-tuteurs.html#r√©sum√©-du-travail-de-tutrice-tuteur",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "R√©sum√© du travail de tutrice / tuteur",
    "text": "R√©sum√© du travail de tutrice / tuteur\n\n4 x 3h de TP de compl√©ments d‚Äôinformatique\n7 x 3h de suivi de projet\nLire et noter les 4 dossiers d‚Äôanalyse\nNoter le code\nLire du rapport final, participer √† la notation\nParticiper aux 4 soutenances"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#votre-r√¥le",
    "href": "doc/projet/presentation-tuteurs.html#votre-r√¥le",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Votre r√¥le",
    "text": "Votre r√¥le\n\nGuider les √©l√®ves\nSuivi des √©quipes (avancement, participation, bonne entente)\nMa√Ætrise d‚ÄôOuvrage\nAide au d√©bogage"
  },
  {
    "objectID": "doc/projet/presentation-tuteurs.html#stack-vm",
    "href": "doc/projet/presentation-tuteurs.html#stack-vm",
    "title": "Pr√©sentation aux tutrices et tuteurs",
    "section": "Stack VM",
    "text": "Stack VM\n\nPython 3.10\nPostgreSQL (chaque √©l√®ve a une BDD)\nGit Bash\nVisual Studio Code\n\n\nPrincipaux Packages Python\n\n\n\n\n\n\n\nNom du package\nTr√®s courte description\n\n\n\n\ninquirerPy\nCr√©er des interfaces en ligne de commande interactives\n\n\nfastapi\nCr√©er des webservices\n\n\npsycopg2-binary\nCommuniquer avec PostgreSQL\n\n\npytest\nTests unitaires\n\n\npython-dotenv\nVariables d‚Äôenvironnement √† partir d‚Äôun fichier .env\n\n\nrequests\nRequ√™tes HTTP\n\n\nuvicorn\nServeur ASGI"
  },
  {
    "objectID": "doc/divers/licences.html",
    "href": "doc/divers/licences.html",
    "title": "Licences",
    "section": "",
    "text": "üöß"
  },
  {
    "objectID": "doc/divers/licences.html#introduction",
    "href": "doc/divers/licences.html#introduction",
    "title": "Licences",
    "section": "Introduction",
    "text": "Introduction\nDans un monde de plus en plus num√©rique, la question des licences est devenue centrale pour les cr√©ateurs, les d√©veloppeurs, et les utilisateurs.\nQue vous √©criviez du code, publiiez un article, ou partagiez des images, la licence que vous choisissez d√©termine ce que les autres peuvent faire avec votre travail. Pourtant, ces notions restent souvent floues :\n\nQuel est le r√¥le du copyright ?\nQu‚Äôest-ce que le copyleft ?\nPourquoi un logiciel ‚Äúgratuit‚Äù n‚Äôest-il pas toujours ‚Äúlibre‚Äù ?\nQuelles sont les diff√©rences entre une licence permissive comme la MIT et une licence copyleft comme la GPL ?\n\nComprendre ces concepts est essentiel pour :\n\nprot√©ger vos droits,\nencourager la collaboration,\nou simplement √©viter les litiges."
  },
  {
    "objectID": "doc/divers/licences.html#les-grands-principes",
    "href": "doc/divers/licences.html#les-grands-principes",
    "title": "Licences",
    "section": "Les grands principes",
    "text": "Les grands principes\n\nCopyright\n\nLe droit d‚Äôauteur classique, qui conf√®re √† l‚Äôauteur un contr√¥le exclusif sur son ≈ìuvre.\nPar d√©faut, tout ce qui est cr√©√© est prot√©g√© par le copyright (tous droits r√©serv√©s).\nLes utilisateurs doivent obtenir une autorisation explicite pour reproduire, modifier ou distribuer l‚Äô≈ìuvre.\n\n\n\nCopyleft\n\nUne approche qui utilise le copyright pour garantir la libert√© de l‚Äô≈ìuvre.\nLes ≈ìuvres sous copyleft permettent l‚Äôutilisation, la modification et la distribution, √† condition que les ≈ìuvres d√©riv√©es soient diffus√©es sous la m√™me licence.\n\n\n\nOpen Source vs Logiciel Libre\n\nOpen Source : Accent mis sur le partage du code source et la collaboration, mais pas forc√©ment sur les libert√©s des utilisateurs\nLogiciel Libre : Bas√© sur les 4 libert√©s fondamentales d√©finies par la Free Software Foundation :\n\nLibert√© d‚Äôutiliser\nLibert√© d‚Äô√©tudier\nLibert√© de modifier\nLibert√© de partager\n\n\n\n\nGratuit ‚â† Libre\nUn logiciel gratuit (freeware) peut √™tre utilis√© sans frais mais reste souvent propri√©taire et restreint.\nLibre implique des libert√©s d‚Äôusage et de modification, ind√©pendamment du co√ªt."
  },
  {
    "objectID": "doc/divers/licences.html#principales-licences",
    "href": "doc/divers/licences.html#principales-licences",
    "title": "Licences",
    "section": "Principales licences",
    "text": "Principales licences\n\nPour les logiciels\n\nMIT :\n\nTr√®s permissive.\nPermet la modification et la r√©utilisation, m√™me dans des projets commerciaux.\nUne simple attribution √† l‚Äôauteur original est requise.\n\nApache 2.0 :\n\nSimilaire √† MIT mais inclut des protections contre les brevets.\nRecommand√©e pour des projets industriels.\n\nGPL (General Public License) :\n\nLicence copyleft stricte.\nTout projet d√©riv√© doit rester sous GPL.\n\n\n\n\nPour le contenu (textes, images, vid√©os)\n\nCreative Commons (CC) :\n\nUne famille de licences pour le contenu non logiciel.\nExemples :\n\nCC BY : Attribution requise, usage libre.\nCC BY-SA : Attribution + partage √† l‚Äôidentique.\nCC BY-NC : Pas d‚Äôutilisation commerciale autoris√©e.\nCC0 : Domaine public.\n\n\n\n\n\nPour les donn√©es\n\nODbL (Open Database License) :\n\nCon√ßue pour les bases de donn√©es.\nEncourage le partage des donn√©es tout en exigeant la m√™me licence pour les d√©riv√©s."
  },
  {
    "objectID": "doc/divers/licences.html#avantages-et-d√©fis-des-licences-libres-et-open-source",
    "href": "doc/divers/licences.html#avantages-et-d√©fis-des-licences-libres-et-open-source",
    "title": "Licences",
    "section": "Avantages et d√©fis des licences libres et open source",
    "text": "Avantages et d√©fis des licences libres et open source\n\nAvantages\n\nCollaboration et innovation accrue.\nTransparence et confiance.\nR√©duction des co√ªts.\n\n\n\nD√©fis\n\nComprendre les obligations l√©gales.\nCompatibilit√© entre licences (exemple‚ÄØ: int√©grer un code GPL dans un projet MIT n‚Äôest pas toujours possible)."
  },
  {
    "objectID": "doc/divers/licences.html#comment-choisir-une-licence",
    "href": "doc/divers/licences.html#comment-choisir-une-licence",
    "title": "Licences",
    "section": "Comment choisir une licence ?",
    "text": "Comment choisir une licence ?\n\nD√©terminez vos objectifs :\n\n\nFavoriser l‚Äôadoption massive ?\nProt√©ger la libert√© des utilisateurs ?\nLimiter les usages commerciaux ?\n\n\nAnalysez le type d‚Äô≈ìuvre (code, texte, contenu mixte).\nUtilisez des outils comme choosealicense.com pour s√©lectionner rapidement une licence adapt√©e."
  },
  {
    "objectID": "doc/divers/licences.html#glossaire",
    "href": "doc/divers/licences.html#glossaire",
    "title": "Licences",
    "section": "GLossaire",
    "text": "GLossaire\n\nFLOSS : Free/Libre and Open Source Software\nGNU : GNU‚Äôs Not Unix. Projet initi√© en 1983 par Richard Stallman avec pour objectif de cr√©er un syst√®me d‚Äôexploitation enti√®rement libre. Il se distingue par son engagement √† garantir les libert√©s des utilisateurs de logiciels"
  }
]